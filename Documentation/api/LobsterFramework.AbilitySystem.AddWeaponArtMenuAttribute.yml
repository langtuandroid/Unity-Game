### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute
  commentId: T:LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute
  id: AddWeaponArtMenuAttribute
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.#ctor(System.Boolean,LobsterFramework.AbilitySystem.WeaponType[])
  - LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init(System.Type)
  - LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.compatibleAbilities
  langs:
  - csharp
  - vb
  name: AddWeaponArtMenuAttribute
  nameWithType: AddWeaponArtMenuAttribute
  fullName: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute
  type: Class
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/Attributes/AddWeaponArtMenuAttribute.cs
    id: AddWeaponArtMenuAttribute
    path: ../Assets/Framework/AbilitySystem/Attributes/AddWeaponArtMenuAttribute.cs
    startLine: 11
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Used on Ability to add it to the options of ability selection for weapon arts.
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)]

      public class AddWeaponArtMenuAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class, AllowMultiple:=False, Inherited:=False)>

      Public Class AddWeaponArtMenuAttribute Inherits Attribute
  inheritance:
  - System.Object
  - System.Attribute
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 4
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: false
    - name: Inherited
      type: System.Boolean
      value: false
- uid: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.compatibleAbilities
  commentId: F:LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.compatibleAbilities
  id: compatibleAbilities
  parent: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute
  langs:
  - csharp
  - vb
  name: compatibleAbilities
  nameWithType: AddWeaponArtMenuAttribute.compatibleAbilities
  fullName: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.compatibleAbilities
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/Attributes/AddWeaponArtMenuAttribute.cs
    id: compatibleAbilities
    path: ../Assets/Framework/AbilitySystem/Attributes/AddWeaponArtMenuAttribute.cs
    startLine: 14
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public static Dictionary<WeaponType, HashSet<Type>> compatibleAbilities
    return:
      type: System.Collections.Generic.Dictionary{LobsterFramework.AbilitySystem.WeaponType,System.Collections.Generic.HashSet{System.Type}}
    content.vb: Public Shared compatibleAbilities As Dictionary(Of WeaponType, HashSet(Of Type))
- uid: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.#ctor(System.Boolean,LobsterFramework.AbilitySystem.WeaponType[])
  commentId: M:LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.#ctor(System.Boolean,LobsterFramework.AbilitySystem.WeaponType[])
  id: '#ctor(System.Boolean,LobsterFramework.AbilitySystem.WeaponType[])'
  parent: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute
  langs:
  - csharp
  - vb
  name: AddWeaponArtMenuAttribute(bool, params WeaponType[])
  nameWithType: AddWeaponArtMenuAttribute.AddWeaponArtMenuAttribute(bool, params WeaponType[])
  fullName: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.AddWeaponArtMenuAttribute(bool, params LobsterFramework.AbilitySystem.WeaponType[])
  type: Constructor
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/Attributes/AddWeaponArtMenuAttribute.cs
    id: .ctor
    path: ../Assets/Framework/AbilitySystem/Attributes/AddWeaponArtMenuAttribute.cs
    startLine: 23
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Add the Ability to the add weapon art menu with the specified compatabilities to weapon types
  example: []
  syntax:
    content: public AddWeaponArtMenuAttribute(bool ignoreMode = true, params WeaponType[] weaponTypes)
    parameters:
    - id: ignoreMode
      type: System.Boolean
      description: >-
        If set to true, the following array will be treated as black list, 
            meaning the ability will be compatible to every weapon type except for the ones in the array
    - id: weaponTypes
      type: LobsterFramework.AbilitySystem.WeaponType[]
      description: A white list of weapon types that the ability can run on. This can be a black list if <code class="paramref">ignoreMode</code> is set to true
    content.vb: Public Sub New(ignoreMode As Boolean = True, ParamArray weaponTypes As WeaponType())
  overload: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.#ctor*
  nameWithType.vb: AddWeaponArtMenuAttribute.New(Boolean, ParamArray WeaponType())
  fullName.vb: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.New(Boolean, ParamArray LobsterFramework.AbilitySystem.WeaponType())
  name.vb: New(Boolean, ParamArray WeaponType())
- uid: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init(System.Type)
  commentId: M:LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init(System.Type)
  id: Init(System.Type)
  parent: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute
  langs:
  - csharp
  - vb
  name: Init(Type)
  nameWithType: AddWeaponArtMenuAttribute.Init(Type)
  fullName: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init(System.Type)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/Attributes/AddWeaponArtMenuAttribute.cs
    id: Init
    path: ../Assets/Framework/AbilitySystem/Attributes/AddWeaponArtMenuAttribute.cs
    startLine: 40
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void Init(Type type)
    parameters:
    - id: type
      type: System.Type
    content.vb: Public Sub Init(type As Type)
  overload: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init*
references:
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  href: LobsterFramework.html
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.attribute
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{LobsterFramework.AbilitySystem.WeaponType,System.Collections.Generic.HashSet{System.Type}}
  commentId: T:System.Collections.Generic.Dictionary{LobsterFramework.AbilitySystem.WeaponType,System.Collections.Generic.HashSet{System.Type}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<WeaponType, HashSet<Type>>
  nameWithType: Dictionary<WeaponType, HashSet<Type>>
  fullName: System.Collections.Generic.Dictionary<LobsterFramework.AbilitySystem.WeaponType, System.Collections.Generic.HashSet<System.Type>>
  nameWithType.vb: Dictionary(Of WeaponType, HashSet(Of Type))
  fullName.vb: System.Collections.Generic.Dictionary(Of LobsterFramework.AbilitySystem.WeaponType, System.Collections.Generic.HashSet(Of System.Type))
  name.vb: Dictionary(Of WeaponType, HashSet(Of Type))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: LobsterFramework.AbilitySystem.WeaponType
    name: WeaponType
    href: LobsterFramework.AbilitySystem.WeaponType.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: LobsterFramework.AbilitySystem.WeaponType
    name: WeaponType
    href: LobsterFramework.AbilitySystem.WeaponType.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.#ctor*
  commentId: Overload:LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.#ctor
  href: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.html#LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.#ctor(System.Boolean,LobsterFramework.AbilitySystem.WeaponType[])
  name: AddWeaponArtMenuAttribute
  nameWithType: AddWeaponArtMenuAttribute.AddWeaponArtMenuAttribute
  fullName: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.AddWeaponArtMenuAttribute
  nameWithType.vb: AddWeaponArtMenuAttribute.New
  fullName.vb: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LobsterFramework.AbilitySystem.WeaponType[]
  isExternal: true
  href: LobsterFramework.AbilitySystem.WeaponType.html
  name: WeaponType[]
  nameWithType: WeaponType[]
  fullName: LobsterFramework.AbilitySystem.WeaponType[]
  nameWithType.vb: WeaponType()
  fullName.vb: LobsterFramework.AbilitySystem.WeaponType()
  name.vb: WeaponType()
  spec.csharp:
  - uid: LobsterFramework.AbilitySystem.WeaponType
    name: WeaponType
    href: LobsterFramework.AbilitySystem.WeaponType.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: LobsterFramework.AbilitySystem.WeaponType
    name: WeaponType
    href: LobsterFramework.AbilitySystem.WeaponType.html
  - name: (
  - name: )
- uid: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init*
  commentId: Overload:LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init
  href: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.html#LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init(System.Type)
  name: Init
  nameWithType: AddWeaponArtMenuAttribute.Init
  fullName: LobsterFramework.AbilitySystem.AddWeaponArtMenuAttribute.Init
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
