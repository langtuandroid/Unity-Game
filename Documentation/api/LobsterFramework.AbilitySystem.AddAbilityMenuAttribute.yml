### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute
  commentId: T:LobsterFramework.AbilitySystem.AddAbilityMenuAttribute
  id: AddAbilityMenuAttribute
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.actions
  - LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.AddAbility(System.Type)
  langs:
  - csharp
  - vb
  name: AddAbilityMenuAttribute
  nameWithType: AddAbilityMenuAttribute
  fullName: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute
  type: Class
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Editor/Attributes/AddAbilityMenuAttribute.cs
    id: AddAbilityMenuAttribute
    path: ../Assets/Scripts/Editor/Attributes/AddAbilityMenuAttribute.cs
    startLine: 10
  assemblies:
  - MyScripts
  namespace: LobsterFramework.AbilitySystem
  summary: "\nUsed to add Abilities to the pool of available Abilities. This will allow the creations of these abilities inside AbilityData\n"
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class)]

      public class AddAbilityMenuAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class)>

      Public Class AddAbilityMenuAttribute Inherits Attribute
  inheritance:
  - System.Object
  - System.Attribute
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 4
- uid: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.actions
  commentId: F:LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.actions
  id: actions
  parent: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute
  langs:
  - csharp
  - vb
  name: actions
  nameWithType: AddAbilityMenuAttribute.actions
  fullName: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.actions
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Editor/Attributes/AddAbilityMenuAttribute.cs
    id: actions
    path: ../Assets/Scripts/Editor/Attributes/AddAbilityMenuAttribute.cs
    startLine: 13
  assemblies:
  - MyScripts
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public static HashSet<Type> actions
    return:
      type: System.Collections.Generic.HashSet{System.Type}
    content.vb: Public Shared actions As HashSet(Of Type)
- uid: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.AddAbility(System.Type)
  commentId: M:LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.AddAbility(System.Type)
  id: AddAbility(System.Type)
  parent: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute
  langs:
  - csharp
  - vb
  name: AddAbility(Type)
  nameWithType: AddAbilityMenuAttribute.AddAbility(Type)
  fullName: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.AddAbility(System.Type)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Editor/Attributes/AddAbilityMenuAttribute.cs
    id: AddAbility
    path: ../Assets/Scripts/Editor/Attributes/AddAbilityMenuAttribute.cs
    startLine: 15
  assemblies:
  - MyScripts
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void AddAbility(Type type)
    parameters:
    - id: type
      type: System.Type
    content.vb: Public Sub AddAbility(type As Type)
  overload: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.AddAbility*
references:
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.HashSet{System.Type}
  commentId: T:System.Collections.Generic.HashSet{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<Type>
  nameWithType: HashSet<Type>
  fullName: System.Collections.Generic.HashSet<System.Type>
  nameWithType.vb: HashSet(Of Type)
  fullName.vb: System.Collections.Generic.HashSet(Of System.Type)
  name.vb: HashSet(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.AddAbility*
  commentId: Overload:LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.AddAbility
  name: AddAbility
  nameWithType: AddAbilityMenuAttribute.AddAbility
  fullName: LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.AddAbility
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
