### YamlMime:ManagedReference
items:
- uid: LobsterFramework.EntityGroup
  commentId: T:LobsterFramework.EntityGroup
  id: EntityGroup
  parent: LobsterFramework
  children:
  - LobsterFramework.EntityGroup.Add(LobsterFramework.Entity)
  - LobsterFramework.EntityGroup.Clear
  - LobsterFramework.EntityGroup.Contains(LobsterFramework.Entity)
  - LobsterFramework.EntityGroup.CopyTo(LobsterFramework.Entity[],System.Int32)
  - LobsterFramework.EntityGroup.Count
  - LobsterFramework.EntityGroup.ExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.GetEnumerator
  - LobsterFramework.EntityGroup.IntersectWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.IsProperSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.IsProperSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.IsReadOnly
  - LobsterFramework.EntityGroup.IsSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.IsSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.OnEntityAdded
  - LobsterFramework.EntityGroup.OnEntityRemoved
  - LobsterFramework.EntityGroup.Overlaps(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.Remove(LobsterFramework.Entity)
  - LobsterFramework.EntityGroup.SetEquals(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.SymmetricExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  - LobsterFramework.EntityGroup.UnionWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  langs:
  - csharp
  - vb
  name: EntityGroup
  nameWithType: EntityGroup
  fullName: LobsterFramework.EntityGroup
  type: Class
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: EntityGroup
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 7
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  syntax:
    content: >-
      [CreateAssetMenu(menuName = "Groups/Entity Group")]

      public class EntityGroup : ScriptableObject
    content.vb: >-
      <CreateAssetMenu(menuName:="Groups/Entity Group")>

      Public Class EntityGroup Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  inheritedMembers:
  - UnityEngine.ScriptableObject.SetDirty
  - UnityEngine.ScriptableObject.CreateInstance(System.String)
  - UnityEngine.ScriptableObject.CreateInstance(System.Type)
  - UnityEngine.ScriptableObject.CreateInstance``1
  - UnityEngine.Object.GetInstanceID
  - UnityEngine.Object.GetHashCode
  - UnityEngine.Object.Equals(System.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Instantiate``1({T})
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  - UnityEngine.Object.Destroy(UnityEngine.Object)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  - UnityEngine.Object.FindObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object)
  - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  - UnityEngine.Object.FindObjectsOfType``1
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectOfType``1
  - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType``1
  - UnityEngine.Object.FindAnyObjectByType``1
  - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type)
  - UnityEngine.Object.FindFirstObjectByType(System.Type)
  - UnityEngine.Object.FindAnyObjectByType(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.ToString
  - UnityEngine.Object.name
  - UnityEngine.Object.hideFlags
  attributes:
  - type: UnityEngine.CreateAssetMenuAttribute
    ctor: UnityEngine.CreateAssetMenuAttribute.#ctor
    arguments: []
    namedArguments:
    - name: menuName
      type: System.String
      value: Groups/Entity Group
- uid: LobsterFramework.EntityGroup.OnEntityAdded
  commentId: F:LobsterFramework.EntityGroup.OnEntityAdded
  id: OnEntityAdded
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: OnEntityAdded
  nameWithType: EntityGroup.OnEntityAdded
  fullName: LobsterFramework.EntityGroup.OnEntityAdded
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: OnEntityAdded
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 11
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  syntax:
    content: public UnityEvent<Entity> OnEntityAdded
    return:
      type: UnityEngine.Events.UnityEvent{LobsterFramework.Entity}
    content.vb: Public OnEntityAdded As UnityEvent(Of Entity)
- uid: LobsterFramework.EntityGroup.OnEntityRemoved
  commentId: F:LobsterFramework.EntityGroup.OnEntityRemoved
  id: OnEntityRemoved
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: OnEntityRemoved
  nameWithType: EntityGroup.OnEntityRemoved
  fullName: LobsterFramework.EntityGroup.OnEntityRemoved
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: OnEntityRemoved
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 12
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  syntax:
    content: public UnityEvent<Entity> OnEntityRemoved
    return:
      type: UnityEngine.Events.UnityEvent{LobsterFramework.Entity}
    content.vb: Public OnEntityRemoved As UnityEvent(Of Entity)
- uid: LobsterFramework.EntityGroup.Count
  commentId: P:LobsterFramework.EntityGroup.Count
  id: Count
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: EntityGroup.Count
  fullName: LobsterFramework.EntityGroup.Count
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: Count
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 14
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: LobsterFramework.EntityGroup.Count*
- uid: LobsterFramework.EntityGroup.IsReadOnly
  commentId: P:LobsterFramework.EntityGroup.IsReadOnly
  id: IsReadOnly
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: EntityGroup.IsReadOnly
  fullName: LobsterFramework.EntityGroup.IsReadOnly
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: IsReadOnly
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 16
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: LobsterFramework.EntityGroup.IsReadOnly*
- uid: LobsterFramework.EntityGroup.GetEnumerator
  commentId: M:LobsterFramework.EntityGroup.GetEnumerator
  id: GetEnumerator
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: EntityGroup.GetEnumerator()
  fullName: LobsterFramework.EntityGroup.GetEnumerator()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: GetEnumerator
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 18
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public IEnumerator<Entity> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{LobsterFramework.Entity}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of Entity)
  overload: LobsterFramework.EntityGroup.GetEnumerator*
- uid: LobsterFramework.EntityGroup.Add(LobsterFramework.Entity)
  commentId: M:LobsterFramework.EntityGroup.Add(LobsterFramework.Entity)
  id: Add(LobsterFramework.Entity)
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: Add(Entity)
  nameWithType: EntityGroup.Add(Entity)
  fullName: LobsterFramework.EntityGroup.Add(LobsterFramework.Entity)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: Add
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 28
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool Add(Entity item)
    parameters:
    - id: item
      type: LobsterFramework.Entity
    return:
      type: System.Boolean
    content.vb: Public Function Add(item As Entity) As Boolean
  overload: LobsterFramework.EntityGroup.Add*
- uid: LobsterFramework.EntityGroup.ExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.ExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: ExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: ExceptWith(IEnumerable<Entity>)
  nameWithType: EntityGroup.ExceptWith(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.ExceptWith(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: ExceptWith
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 37
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public void ExceptWith(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    content.vb: Public Sub ExceptWith(other As IEnumerable(Of Entity))
  overload: LobsterFramework.EntityGroup.ExceptWith*
  nameWithType.vb: EntityGroup.ExceptWith(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.ExceptWith(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: ExceptWith(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.IntersectWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.IntersectWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: IntersectWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: IntersectWith(IEnumerable<Entity>)
  nameWithType: EntityGroup.IntersectWith(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.IntersectWith(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: IntersectWith
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 42
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public void IntersectWith(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    content.vb: Public Sub IntersectWith(other As IEnumerable(Of Entity))
  overload: LobsterFramework.EntityGroup.IntersectWith*
  nameWithType.vb: EntityGroup.IntersectWith(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.IntersectWith(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: IntersectWith(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.IsProperSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.IsProperSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: IsProperSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: IsProperSubsetOf(IEnumerable<Entity>)
  nameWithType: EntityGroup.IsProperSubsetOf(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.IsProperSubsetOf(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: IsProperSubsetOf
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 47
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool IsProperSubsetOf(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    return:
      type: System.Boolean
    content.vb: Public Function IsProperSubsetOf(other As IEnumerable(Of Entity)) As Boolean
  overload: LobsterFramework.EntityGroup.IsProperSubsetOf*
  nameWithType.vb: EntityGroup.IsProperSubsetOf(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: IsProperSubsetOf(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.IsProperSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.IsProperSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: IsProperSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: IsProperSupersetOf(IEnumerable<Entity>)
  nameWithType: EntityGroup.IsProperSupersetOf(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.IsProperSupersetOf(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: IsProperSupersetOf
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 52
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool IsProperSupersetOf(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    return:
      type: System.Boolean
    content.vb: Public Function IsProperSupersetOf(other As IEnumerable(Of Entity)) As Boolean
  overload: LobsterFramework.EntityGroup.IsProperSupersetOf*
  nameWithType.vb: EntityGroup.IsProperSupersetOf(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: IsProperSupersetOf(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.IsSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.IsSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: IsSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: IsSubsetOf(IEnumerable<Entity>)
  nameWithType: EntityGroup.IsSubsetOf(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.IsSubsetOf(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: IsSubsetOf
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 57
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool IsSubsetOf(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    return:
      type: System.Boolean
    content.vb: Public Function IsSubsetOf(other As IEnumerable(Of Entity)) As Boolean
  overload: LobsterFramework.EntityGroup.IsSubsetOf*
  nameWithType.vb: EntityGroup.IsSubsetOf(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.IsSubsetOf(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: IsSubsetOf(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.IsSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.IsSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: IsSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: IsSupersetOf(IEnumerable<Entity>)
  nameWithType: EntityGroup.IsSupersetOf(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.IsSupersetOf(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: IsSupersetOf
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 62
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool IsSupersetOf(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    return:
      type: System.Boolean
    content.vb: Public Function IsSupersetOf(other As IEnumerable(Of Entity)) As Boolean
  overload: LobsterFramework.EntityGroup.IsSupersetOf*
  nameWithType.vb: EntityGroup.IsSupersetOf(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.IsSupersetOf(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: IsSupersetOf(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.Overlaps(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.Overlaps(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: Overlaps(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: Overlaps(IEnumerable<Entity>)
  nameWithType: EntityGroup.Overlaps(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.Overlaps(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: Overlaps
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 67
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool Overlaps(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    return:
      type: System.Boolean
    content.vb: Public Function Overlaps(other As IEnumerable(Of Entity)) As Boolean
  overload: LobsterFramework.EntityGroup.Overlaps*
  nameWithType.vb: EntityGroup.Overlaps(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.Overlaps(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: Overlaps(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.SetEquals(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.SetEquals(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: SetEquals(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: SetEquals(IEnumerable<Entity>)
  nameWithType: EntityGroup.SetEquals(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.SetEquals(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: SetEquals
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 72
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool SetEquals(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    return:
      type: System.Boolean
    content.vb: Public Function SetEquals(other As IEnumerable(Of Entity)) As Boolean
  overload: LobsterFramework.EntityGroup.SetEquals*
  nameWithType.vb: EntityGroup.SetEquals(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.SetEquals(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: SetEquals(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.SymmetricExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.SymmetricExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: SymmetricExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: SymmetricExceptWith(IEnumerable<Entity>)
  nameWithType: EntityGroup.SymmetricExceptWith(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.SymmetricExceptWith(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: SymmetricExceptWith
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 77
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public void SymmetricExceptWith(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    content.vb: Public Sub SymmetricExceptWith(other As IEnumerable(Of Entity))
  overload: LobsterFramework.EntityGroup.SymmetricExceptWith*
  nameWithType.vb: EntityGroup.SymmetricExceptWith(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: SymmetricExceptWith(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.UnionWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  commentId: M:LobsterFramework.EntityGroup.UnionWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  id: UnionWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: UnionWith(IEnumerable<Entity>)
  nameWithType: EntityGroup.UnionWith(IEnumerable<Entity>)
  fullName: LobsterFramework.EntityGroup.UnionWith(System.Collections.Generic.IEnumerable<LobsterFramework.Entity>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: UnionWith
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 82
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public void UnionWith(IEnumerable<Entity> other)
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
    content.vb: Public Sub UnionWith(other As IEnumerable(Of Entity))
  overload: LobsterFramework.EntityGroup.UnionWith*
  nameWithType.vb: EntityGroup.UnionWith(IEnumerable(Of Entity))
  fullName.vb: LobsterFramework.EntityGroup.UnionWith(System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity))
  name.vb: UnionWith(IEnumerable(Of Entity))
- uid: LobsterFramework.EntityGroup.Clear
  commentId: M:LobsterFramework.EntityGroup.Clear
  id: Clear
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: EntityGroup.Clear()
  fullName: LobsterFramework.EntityGroup.Clear()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: Clear
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 92
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: LobsterFramework.EntityGroup.Clear*
- uid: LobsterFramework.EntityGroup.Contains(LobsterFramework.Entity)
  commentId: M:LobsterFramework.EntityGroup.Contains(LobsterFramework.Entity)
  id: Contains(LobsterFramework.Entity)
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: Contains(Entity)
  nameWithType: EntityGroup.Contains(Entity)
  fullName: LobsterFramework.EntityGroup.Contains(LobsterFramework.Entity)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: Contains
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 101
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool Contains(Entity item)
    parameters:
    - id: item
      type: LobsterFramework.Entity
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As Entity) As Boolean
  overload: LobsterFramework.EntityGroup.Contains*
- uid: LobsterFramework.EntityGroup.CopyTo(LobsterFramework.Entity[],System.Int32)
  commentId: M:LobsterFramework.EntityGroup.CopyTo(LobsterFramework.Entity[],System.Int32)
  id: CopyTo(LobsterFramework.Entity[],System.Int32)
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: CopyTo(Entity[], int)
  nameWithType: EntityGroup.CopyTo(Entity[], int)
  fullName: LobsterFramework.EntityGroup.CopyTo(LobsterFramework.Entity[], int)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: CopyTo
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 106
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public void CopyTo(Entity[] array, int arrayIndex)
    parameters:
    - id: array
      type: LobsterFramework.Entity[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As Entity(), arrayIndex As Integer)
  overload: LobsterFramework.EntityGroup.CopyTo*
  nameWithType.vb: EntityGroup.CopyTo(Entity(), Integer)
  fullName.vb: LobsterFramework.EntityGroup.CopyTo(LobsterFramework.Entity(), Integer)
  name.vb: CopyTo(Entity(), Integer)
- uid: LobsterFramework.EntityGroup.Remove(LobsterFramework.Entity)
  commentId: M:LobsterFramework.EntityGroup.Remove(LobsterFramework.Entity)
  id: Remove(LobsterFramework.Entity)
  parent: LobsterFramework.EntityGroup
  langs:
  - csharp
  - vb
  name: Remove(Entity)
  nameWithType: EntityGroup.Remove(Entity)
  fullName: LobsterFramework.EntityGroup.Remove(LobsterFramework.Entity)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/EntityGroup.cs
    id: Remove
    path: ../Assets/Framework/Components/EntityGroup.cs
    startLine: 111
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework
  example: []
  syntax:
    content: public bool Remove(Entity item)
    parameters:
    - id: item
      type: LobsterFramework.Entity
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As Entity) As Boolean
  overload: LobsterFramework.EntityGroup.Remove*
references:
- uid: LobsterFramework
  commentId: N:LobsterFramework
  href: LobsterFramework.html
  name: LobsterFramework
  nameWithType: LobsterFramework
  fullName: LobsterFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEngine.ScriptableObject.SetDirty
  commentId: M:UnityEngine.ScriptableObject.SetDirty
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: SetDirty()
  nameWithType: ScriptableObject.SetDirty()
  fullName: UnityEngine.ScriptableObject.SetDirty()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.String)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CreateInstance(string)
  nameWithType: ScriptableObject.CreateInstance(string)
  fullName: UnityEngine.ScriptableObject.CreateInstance(string)
  nameWithType.vb: ScriptableObject.CreateInstance(String)
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(String)
  name.vb: CreateInstance(String)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.Type)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CreateInstance(Type)
  nameWithType: ScriptableObject.CreateInstance(Type)
  fullName: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance``1
  commentId: M:UnityEngine.ScriptableObject.CreateInstance``1
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: CreateInstance<T>()
  nameWithType: ScriptableObject.CreateInstance<T>()
  fullName: UnityEngine.ScriptableObject.CreateInstance<T>()
  nameWithType.vb: ScriptableObject.CreateInstance(Of T)()
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(Of T)()
  name.vb: CreateInstance(Of T)()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.GetInstanceID
  commentId: M:UnityEngine.Object.GetInstanceID
  parent: UnityEngine.Object
  isExternal: true
  name: GetInstanceID()
  nameWithType: Object.GetInstanceID()
  fullName: UnityEngine.Object.GetInstanceID()
  spec.csharp:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Equals(object)
  nameWithType: Object.Equals(object)
  fullName: UnityEngine.Object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: UnityEngine.Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object)
  nameWithType: Object.Instantiate(Object)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform)
  nameWithType: Object.Instantiate(Object, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate(Object, Transform, bool)
  nameWithType: Object.Instantiate(Object, Transform, bool)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Object, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Object, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T})
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0)
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Destroy(Object, float)
  nameWithType: Object.Destroy(Object, float)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object, float)
  nameWithType.vb: Object.Destroy(Object, Single)
  fullName.vb: UnityEngine.Object.Destroy(UnityEngine.Object, Single)
  name.vb: Destroy(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object)
  nameWithType: Object.Destroy(Object)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DestroyImmediate(Object, bool)
  nameWithType: Object.DestroyImmediate(Object, bool)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, bool)
  nameWithType.vb: Object.DestroyImmediate(Object, Boolean)
  fullName.vb: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, Boolean)
  name.vb: DestroyImmediate(Object, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object)
  nameWithType: Object.DestroyImmediate(Object)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type)
  nameWithType: Object.FindObjectsOfType(Type)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type, bool)
  nameWithType: Object.FindObjectsOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectsOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(System.Type, Boolean)
  name.vb: FindObjectsOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DontDestroyOnLoad(Object)
  nameWithType: Object.DontDestroyOnLoad(Object)
  fullName: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DestroyObject(Object, float)
  nameWithType: Object.DestroyObject(Object, float)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object, float)
  nameWithType.vb: Object.DestroyObject(Object, Single)
  fullName.vb: UnityEngine.Object.DestroyObject(UnityEngine.Object, Single)
  name.vb: DestroyObject(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object)
  nameWithType: Object.DestroyObject(Object)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindSceneObjectsOfType(Type)
  nameWithType: Object.FindSceneObjectsOfType(Type)
  fullName: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeIncludingAssets(Type)
  nameWithType: Object.FindObjectsOfTypeIncludingAssets(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1
  commentId: M:UnityEngine.Object.FindObjectsOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>()
  nameWithType: Object.FindObjectsOfType<T>()
  fullName: UnityEngine.Object.FindObjectsOfType<T>()
  nameWithType.vb: Object.FindObjectsOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)()
  name.vb: FindObjectsOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectsOfType<T>(bool)
  nameWithType: Object.FindObjectsOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectsOfType<T>(bool)
  nameWithType.vb: Object.FindObjectsOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)(Boolean)
  name.vb: FindObjectsOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1
  commentId: M:UnityEngine.Object.FindObjectOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>()
  nameWithType: Object.FindObjectOfType<T>()
  fullName: UnityEngine.Object.FindObjectOfType<T>()
  nameWithType.vb: Object.FindObjectOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)()
  name.vb: FindObjectOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectOfType<T>(bool)
  nameWithType: Object.FindObjectOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectOfType<T>(bool)
  nameWithType.vb: Object.FindObjectOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)(Boolean)
  name.vb: FindObjectOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>()
  nameWithType: Object.FindFirstObjectByType<T>()
  fullName: UnityEngine.Object.FindFirstObjectByType<T>()
  nameWithType.vb: Object.FindFirstObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)()
  name.vb: FindFirstObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>()
  nameWithType: Object.FindAnyObjectByType<T>()
  fullName: UnityEngine.Object.FindAnyObjectByType<T>()
  nameWithType.vb: Object.FindAnyObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)()
  name.vb: FindAnyObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindFirstObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindFirstObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindAnyObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindAnyObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeAll(Type)
  nameWithType: Object.FindObjectsOfTypeAll(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type)
  nameWithType: Object.FindObjectOfType(Type)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type)
  nameWithType: Object.FindFirstObjectByType(Type)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type)
  nameWithType: Object.FindAnyObjectByType(Type)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type, bool)
  nameWithType: Object.FindObjectOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(System.Type, Boolean)
  name.vb: FindObjectOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.ToString
  commentId: M:UnityEngine.Object.ToString
  parent: UnityEngine.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: UnityEngine.Object.ToString()
  spec.csharp:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  parent: UnityEngine.Object
  isExternal: true
  name: name
  nameWithType: Object.name
  fullName: UnityEngine.Object.name
- uid: UnityEngine.Object.hideFlags
  commentId: P:UnityEngine.Object.hideFlags
  parent: UnityEngine.Object
  isExternal: true
  name: hideFlags
  nameWithType: Object.hideFlags
  fullName: UnityEngine.Object.hideFlags
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Object.Instantiate``1(``0)
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  isExternal: true
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Events.UnityEvent{LobsterFramework.Entity}
  commentId: T:UnityEngine.Events.UnityEvent{LobsterFramework.Entity}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  href: LobsterFramework.Entity.html
  name: UnityEvent<Entity>
  nameWithType: UnityEvent<Entity>
  fullName: UnityEngine.Events.UnityEvent<LobsterFramework.Entity>
  nameWithType.vb: UnityEvent(Of Entity)
  fullName.vb: UnityEngine.Events.UnityEvent(Of LobsterFramework.Entity)
  name.vb: UnityEvent(Of Entity)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: LobsterFramework.Entity
    name: Entity
    href: LobsterFramework.Entity.html
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: LobsterFramework.Entity
    name: Entity
    href: LobsterFramework.Entity.html
  - name: )
- uid: UnityEngine.Events.UnityEvent`1
  commentId: T:UnityEngine.Events.UnityEvent`1
  isExternal: true
  name: UnityEvent<T0>
  nameWithType: UnityEvent<T0>
  fullName: UnityEngine.Events.UnityEvent<T0>
  nameWithType.vb: UnityEvent(Of T0)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0)
  name.vb: UnityEvent(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T0
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
- uid: LobsterFramework.EntityGroup.Count*
  commentId: Overload:LobsterFramework.EntityGroup.Count
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.Count
  name: Count
  nameWithType: EntityGroup.Count
  fullName: LobsterFramework.EntityGroup.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LobsterFramework.EntityGroup.IsReadOnly*
  commentId: Overload:LobsterFramework.EntityGroup.IsReadOnly
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.IsReadOnly
  name: IsReadOnly
  nameWithType: EntityGroup.IsReadOnly
  fullName: LobsterFramework.EntityGroup.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LobsterFramework.EntityGroup.GetEnumerator*
  commentId: Overload:LobsterFramework.EntityGroup.GetEnumerator
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.GetEnumerator
  name: GetEnumerator
  nameWithType: EntityGroup.GetEnumerator
  fullName: LobsterFramework.EntityGroup.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{LobsterFramework.Entity}
  commentId: T:System.Collections.Generic.IEnumerator{LobsterFramework.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<Entity>
  nameWithType: IEnumerator<Entity>
  fullName: System.Collections.Generic.IEnumerator<LobsterFramework.Entity>
  nameWithType.vb: IEnumerator(Of Entity)
  fullName.vb: System.Collections.Generic.IEnumerator(Of LobsterFramework.Entity)
  name.vb: IEnumerator(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: LobsterFramework.Entity
    name: Entity
    href: LobsterFramework.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: LobsterFramework.Entity
    name: Entity
    href: LobsterFramework.Entity.html
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: LobsterFramework.EntityGroup.Add*
  commentId: Overload:LobsterFramework.EntityGroup.Add
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.Add(LobsterFramework.Entity)
  name: Add
  nameWithType: EntityGroup.Add
  fullName: LobsterFramework.EntityGroup.Add
- uid: LobsterFramework.Entity
  commentId: T:LobsterFramework.Entity
  parent: LobsterFramework
  href: LobsterFramework.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: LobsterFramework.Entity
- uid: LobsterFramework.EntityGroup.ExceptWith*
  commentId: Overload:LobsterFramework.EntityGroup.ExceptWith
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.ExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: ExceptWith
  nameWithType: EntityGroup.ExceptWith
  fullName: LobsterFramework.EntityGroup.ExceptWith
- uid: System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
  commentId: T:System.Collections.Generic.IEnumerable{LobsterFramework.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Entity>
  nameWithType: IEnumerable<Entity>
  fullName: System.Collections.Generic.IEnumerable<LobsterFramework.Entity>
  nameWithType.vb: IEnumerable(Of Entity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of LobsterFramework.Entity)
  name.vb: IEnumerable(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: LobsterFramework.Entity
    name: Entity
    href: LobsterFramework.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LobsterFramework.Entity
    name: Entity
    href: LobsterFramework.Entity.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LobsterFramework.EntityGroup.IntersectWith*
  commentId: Overload:LobsterFramework.EntityGroup.IntersectWith
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.IntersectWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: IntersectWith
  nameWithType: EntityGroup.IntersectWith
  fullName: LobsterFramework.EntityGroup.IntersectWith
- uid: LobsterFramework.EntityGroup.IsProperSubsetOf*
  commentId: Overload:LobsterFramework.EntityGroup.IsProperSubsetOf
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.IsProperSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: IsProperSubsetOf
  nameWithType: EntityGroup.IsProperSubsetOf
  fullName: LobsterFramework.EntityGroup.IsProperSubsetOf
- uid: LobsterFramework.EntityGroup.IsProperSupersetOf*
  commentId: Overload:LobsterFramework.EntityGroup.IsProperSupersetOf
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.IsProperSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: IsProperSupersetOf
  nameWithType: EntityGroup.IsProperSupersetOf
  fullName: LobsterFramework.EntityGroup.IsProperSupersetOf
- uid: LobsterFramework.EntityGroup.IsSubsetOf*
  commentId: Overload:LobsterFramework.EntityGroup.IsSubsetOf
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.IsSubsetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: IsSubsetOf
  nameWithType: EntityGroup.IsSubsetOf
  fullName: LobsterFramework.EntityGroup.IsSubsetOf
- uid: LobsterFramework.EntityGroup.IsSupersetOf*
  commentId: Overload:LobsterFramework.EntityGroup.IsSupersetOf
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.IsSupersetOf(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: IsSupersetOf
  nameWithType: EntityGroup.IsSupersetOf
  fullName: LobsterFramework.EntityGroup.IsSupersetOf
- uid: LobsterFramework.EntityGroup.Overlaps*
  commentId: Overload:LobsterFramework.EntityGroup.Overlaps
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.Overlaps(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: Overlaps
  nameWithType: EntityGroup.Overlaps
  fullName: LobsterFramework.EntityGroup.Overlaps
- uid: LobsterFramework.EntityGroup.SetEquals*
  commentId: Overload:LobsterFramework.EntityGroup.SetEquals
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.SetEquals(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: SetEquals
  nameWithType: EntityGroup.SetEquals
  fullName: LobsterFramework.EntityGroup.SetEquals
- uid: LobsterFramework.EntityGroup.SymmetricExceptWith*
  commentId: Overload:LobsterFramework.EntityGroup.SymmetricExceptWith
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.SymmetricExceptWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: SymmetricExceptWith
  nameWithType: EntityGroup.SymmetricExceptWith
  fullName: LobsterFramework.EntityGroup.SymmetricExceptWith
- uid: LobsterFramework.EntityGroup.UnionWith*
  commentId: Overload:LobsterFramework.EntityGroup.UnionWith
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.UnionWith(System.Collections.Generic.IEnumerable{LobsterFramework.Entity})
  name: UnionWith
  nameWithType: EntityGroup.UnionWith
  fullName: LobsterFramework.EntityGroup.UnionWith
- uid: LobsterFramework.EntityGroup.Clear*
  commentId: Overload:LobsterFramework.EntityGroup.Clear
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.Clear
  name: Clear
  nameWithType: EntityGroup.Clear
  fullName: LobsterFramework.EntityGroup.Clear
- uid: LobsterFramework.EntityGroup.Contains*
  commentId: Overload:LobsterFramework.EntityGroup.Contains
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.Contains(LobsterFramework.Entity)
  name: Contains
  nameWithType: EntityGroup.Contains
  fullName: LobsterFramework.EntityGroup.Contains
- uid: LobsterFramework.EntityGroup.CopyTo*
  commentId: Overload:LobsterFramework.EntityGroup.CopyTo
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.CopyTo(LobsterFramework.Entity[],System.Int32)
  name: CopyTo
  nameWithType: EntityGroup.CopyTo
  fullName: LobsterFramework.EntityGroup.CopyTo
- uid: LobsterFramework.Entity[]
  isExternal: true
  href: LobsterFramework.Entity.html
  name: Entity[]
  nameWithType: Entity[]
  fullName: LobsterFramework.Entity[]
  nameWithType.vb: Entity()
  fullName.vb: LobsterFramework.Entity()
  name.vb: Entity()
  spec.csharp:
  - uid: LobsterFramework.Entity
    name: Entity
    href: LobsterFramework.Entity.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: LobsterFramework.Entity
    name: Entity
    href: LobsterFramework.Entity.html
  - name: (
  - name: )
- uid: LobsterFramework.EntityGroup.Remove*
  commentId: Overload:LobsterFramework.EntityGroup.Remove
  href: LobsterFramework.EntityGroup.html#LobsterFramework.EntityGroup.Remove(LobsterFramework.Entity)
  name: Remove
  nameWithType: EntityGroup.Remove
  fullName: LobsterFramework.EntityGroup.Remove
