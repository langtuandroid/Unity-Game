### YamlMime:ManagedReference
items:
- uid: Global.AstarPath
  commentId: T:Global.AstarPath
  id: AstarPath
  parent: Global
  children:
  - Global.AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  - Global.AstarPath.AddWorkItem(System.Action)
  - Global.AstarPath.AddWorkItem(System.Action{Pathfinding.IWorkItemContext})
  - Global.AstarPath.Awake
  - Global.AstarPath.BlockUntilCalculated(Pathfinding.Path)
  - Global.AstarPath.BlockUntilPathQueueBlocked
  - Global.AstarPath.Branch
  - Global.AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  - Global.AstarPath.ConfigureReferencesInternal
  - Global.AstarPath.Distribution
  - Global.AstarPath.EnsureValidFloodFill
  - Global.AstarPath.FindAstarPath
  - Global.AstarPath.FindTagNames
  - Global.AstarPath.FloodFill
  - Global.AstarPath.FloodFill(Pathfinding.GraphNode)
  - Global.AstarPath.FloodFill(Pathfinding.GraphNode,System.UInt32)
  - Global.AstarPath.FlushGraphUpdates
  - Global.AstarPath.FlushThreadSafeCallbacks
  - Global.AstarPath.FlushWorkItems
  - Global.AstarPath.FlushWorkItems(System.Boolean,System.Boolean)
  - Global.AstarPath.GetNearest(UnityEngine.Ray)
  - Global.AstarPath.GetNearest(UnityEngine.Vector3)
  - Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint)
  - Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint,Pathfinding.GraphNode)
  - Global.AstarPath.GetTagNames
  - Global.AstarPath.IsAnyGraphUpdateInProgress
  - Global.AstarPath.IsAnyGraphUpdateQueued
  - Global.AstarPath.IsAnyGraphUpdatesQueued
  - Global.AstarPath.IsAnyWorkItemInProgress
  - Global.AstarPath.IsUsingMultithreading
  - Global.AstarPath.NumParallelThreads
  - Global.AstarPath.On65KOverflow
  - Global.AstarPath.OnAwakeSettings
  - Global.AstarPath.OnGraphPostScan
  - Global.AstarPath.OnGraphPreScan
  - Global.AstarPath.OnGraphsUpdated
  - Global.AstarPath.OnGraphsWillBeUpdated
  - Global.AstarPath.OnGraphsWillBeUpdated2
  - Global.AstarPath.OnLatePostScan
  - Global.AstarPath.OnPathPostSearch
  - Global.AstarPath.OnPathPreSearch
  - Global.AstarPath.OnPostScan
  - Global.AstarPath.OnPreScan
  - Global.AstarPath.PausePathfinding
  - Global.AstarPath.QueueGraphUpdates
  - Global.AstarPath.QueueWorkItemFloodFill
  - Global.AstarPath.RegisterSafeUpdate(System.Action)
  - Global.AstarPath.Scan(Pathfinding.NavGraph)
  - Global.AstarPath.Scan(Pathfinding.NavGraph[])
  - Global.AstarPath.ScanAsync(Pathfinding.NavGraph)
  - Global.AstarPath.ScanAsync(Pathfinding.NavGraph[])
  - Global.AstarPath.StartPath(Pathfinding.Path,System.Boolean)
  - Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject)
  - Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject,System.Single)
  - Global.AstarPath.UpdateGraphs(UnityEngine.Bounds)
  - Global.AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  - Global.AstarPath.Version
  - Global.AstarPath.WaitForPath(Pathfinding.Path)
  - Global.AstarPath.active
  - Global.AstarPath.astarData
  - Global.AstarPath.batchGraphUpdates
  - Global.AstarPath.colorSettings
  - Global.AstarPath.data
  - Global.AstarPath.debugFloor
  - Global.AstarPath.debugMode
  - Global.AstarPath.debugPathData
  - Global.AstarPath.debugPathID
  - Global.AstarPath.debugRoof
  - Global.AstarPath.euclideanEmbedding
  - Global.AstarPath.fullGetNearestSearch
  - Global.AstarPath.graphTypes
  - Global.AstarPath.graphUpdateBatchingInterval
  - Global.AstarPath.graphs
  - Global.AstarPath.heuristic
  - Global.AstarPath.heuristicScale
  - Global.AstarPath.isScanning
  - Global.AstarPath.lastScanTime
  - Global.AstarPath.limitGraphUpdates
  - Global.AstarPath.logPathResults
  - Global.AstarPath.manualDebugFloorRoof
  - Global.AstarPath.maxFrameTime
  - Global.AstarPath.maxGraphUpdateFreq
  - Global.AstarPath.maxNearestNodeDistance
  - Global.AstarPath.maxNearestNodeDistanceSqr
  - Global.AstarPath.navmeshUpdates
  - Global.AstarPath.prioritizeGraphs
  - Global.AstarPath.prioritizeGraphsLimit
  - Global.AstarPath.scanOnStartup
  - Global.AstarPath.showGraphs
  - Global.AstarPath.showNavGraphs
  - Global.AstarPath.showSearchTree
  - Global.AstarPath.showUnwalkableNodes
  - Global.AstarPath.tagNames
  - Global.AstarPath.threadCount
  - Global.AstarPath.unwalkableNodeDebugSize
  langs:
  - csharp
  - vb
  name: AstarPath
  nameWithType: AstarPath
  fullName: AstarPath
  type: Class
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: AstarPath
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 14
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  syntax:
    content: >-
      [ExecuteInEditMode]

      [AddComponentMenu("Pathfinding/Pathfinder")]

      [HelpURL("http://arongranberg.com/astar/docs/class_astar_path.php")]

      public class AstarPath : VersionedMonoBehaviour, ISerializationCallbackReceiver
    content.vb: >-
      <ExecuteInEditMode>

      <AddComponentMenu("Pathfinding/Pathfinder")>

      <HelpURL("http://arongranberg.com/astar/docs/class_astar_path.php")>

      Public Class AstarPath Inherits VersionedMonoBehaviour Implements ISerializationCallbackReceiver
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Pathfinding.VersionedMonoBehaviour
  implements:
  - UnityEngine.ISerializationCallbackReceiver
  inheritedMembers:
  - UnityEngine.MonoBehaviour.IsInvoking
  - UnityEngine.MonoBehaviour.CancelInvoke
  - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  - UnityEngine.MonoBehaviour.IsInvoking(System.String)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  - UnityEngine.MonoBehaviour.StopAllCoroutines
  - UnityEngine.MonoBehaviour.print(System.Object)
  - UnityEngine.MonoBehaviour.destroyCancellationToken
  - UnityEngine.MonoBehaviour.useGUILayout
  - UnityEngine.MonoBehaviour.runInEditMode
  - UnityEngine.Behaviour.enabled
  - UnityEngine.Behaviour.isActiveAndEnabled
  - UnityEngine.Component.GetComponent(System.Type)
  - UnityEngine.Component.GetComponent``1
  - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  - UnityEngine.Component.TryGetComponent``1({T}@)
  - UnityEngine.Component.GetComponent(System.String)
  - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentInChildren(System.Type)
  - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  - UnityEngine.Component.GetComponentInChildren``1
  - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentsInChildren(System.Type)
  - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentsInChildren``1
  - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentInParent(System.Type)
  - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  - UnityEngine.Component.GetComponentInParent``1
  - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentsInParent(System.Type)
  - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentsInParent``1
  - UnityEngine.Component.GetComponents(System.Type)
  - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponents``1
  - UnityEngine.Component.CompareTag(System.String)
  - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  - UnityEngine.Component.SendMessageUpwards(System.String)
  - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessage(System.String,System.Object)
  - UnityEngine.Component.SendMessage(System.String)
  - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  - UnityEngine.Component.BroadcastMessage(System.String)
  - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.transform
  - UnityEngine.Component.gameObject
  - UnityEngine.Component.tag
  - UnityEngine.Object.GetInstanceID
  - UnityEngine.Object.GetHashCode
  - UnityEngine.Object.Equals(System.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Instantiate``1({T})
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  - UnityEngine.Object.Destroy(UnityEngine.Object)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  - UnityEngine.Object.FindObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object)
  - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  - UnityEngine.Object.FindObjectsOfType``1
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectOfType``1
  - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType``1
  - UnityEngine.Object.FindAnyObjectByType``1
  - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type)
  - UnityEngine.Object.FindFirstObjectByType(System.Type)
  - UnityEngine.Object.FindAnyObjectByType(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.ToString
  - UnityEngine.Object.name
  - UnityEngine.Object.hideFlags
  attributes:
  - type: UnityEngine.ExecuteInEditMode
    ctor: UnityEngine.ExecuteInEditMode.#ctor
    arguments: []
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pathfinding/Pathfinder
  - type: UnityEngine.HelpURLAttribute
    ctor: UnityEngine.HelpURLAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://arongranberg.com/astar/docs/class_astar_path.php
- uid: Global.AstarPath.Version
  commentId: F:Global.AstarPath.Version
  id: Version
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: AstarPath.Version
  fullName: AstarPath.Version
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: Version
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 28
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: The version number for the A* %Pathfinding Project
  example: []
  syntax:
    content: public static readonly Version Version
    return:
      type: System.Version
    content.vb: Public Shared ReadOnly Version As Version
- uid: Global.AstarPath.Distribution
  commentId: F:Global.AstarPath.Distribution
  id: Distribution
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Distribution
  nameWithType: AstarPath.Distribution
  fullName: AstarPath.Distribution
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: Distribution
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 34
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Used by the editor to guide the user to the correct place to download updates
  example: []
  syntax:
    content: public static readonly AstarPath.AstarDistribution Distribution
    return:
      type: Global.AstarPath.AstarDistribution
    content.vb: Public Shared ReadOnly Distribution As AstarPath.AstarDistribution
- uid: Global.AstarPath.Branch
  commentId: F:Global.AstarPath.Branch
  id: Branch
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Branch
  nameWithType: AstarPath.Branch
  fullName: AstarPath.Branch
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: Branch
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 42
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Which branch of the A* %Pathfinding Project is this release.

    Used when checking for updates so that

    users of the development versions can get notifications of development

    updates.
  example: []
  syntax:
    content: public static readonly string Branch
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Branch As String
- uid: Global.AstarPath.graphTypes
  commentId: P:Global.AstarPath.graphTypes
  id: graphTypes
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: graphTypes
  nameWithType: AstarPath.graphTypes
  fullName: AstarPath.graphTypes
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: graphTypes
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 48
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    See Pathfinding.AstarData

    Deprecated:
  example: []
  syntax:
    content: >-
      [Obsolete]

      public Type[] graphTypes { get; }
    parameters: []
    return:
      type: System.Type[]
    content.vb: >-
      <Obsolete>

      Public ReadOnly Property graphTypes As Type()
  overload: Global.AstarPath.graphTypes*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.data
  commentId: F:Global.AstarPath.data
  id: data
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: data
  nameWithType: AstarPath.data
  fullName: AstarPath.data
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: data
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 57
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Holds all graph data
  example: []
  syntax:
    content: >-
      [FormerlySerializedAs("astarData")]

      public AstarData data
    return:
      type: Pathfinding.AstarData
    content.vb: >-
      <FormerlySerializedAs("astarData")>

      Public data As AstarData
  attributes:
  - type: UnityEngine.Serialization.FormerlySerializedAsAttribute
    ctor: UnityEngine.Serialization.FormerlySerializedAsAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: astarData
- uid: Global.AstarPath.astarData
  commentId: P:Global.AstarPath.astarData
  id: astarData
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: astarData
  nameWithType: AstarPath.astarData
  fullName: AstarPath.astarData
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: astarData
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 63
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Holds all graph data.

    Deprecated: The 'astarData' field has been renamed to 'data'
  example: []
  syntax:
    content: >-
      [Obsolete("The 'astarData' field has been renamed to 'data'")]

      public AstarData astarData { get; }
    parameters: []
    return:
      type: Pathfinding.AstarData
    content.vb: >-
      <Obsolete("The 'astarData' field has been renamed to 'data'")>

      Public ReadOnly Property astarData As AstarData
  overload: Global.AstarPath.astarData*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The 'astarData' field has been renamed to 'data'
- uid: Global.AstarPath.active
  commentId: F:Global.AstarPath.active
  id: active
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: active
  nameWithType: AstarPath.active
  fullName: AstarPath.active
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: active
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 73
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns the active AstarPath object in the scene.

    Note: This is only set if the AstarPath object has been initialized (which happens in Awake).
  example: []
  syntax:
    content: public static AstarPath active
    return:
      type: Global.AstarPath
    content.vb: Public Shared active As AstarPath
- uid: Global.AstarPath.graphs
  commentId: P:Global.AstarPath.graphs
  id: graphs
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: graphs
  nameWithType: AstarPath.graphs
  fullName: AstarPath.graphs
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: graphs
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 77
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Shortcut to Pathfinding.AstarData.graphs
  example: []
  syntax:
    content: public NavGraph[] graphs { get; }
    parameters: []
    return:
      type: Pathfinding.NavGraph[]
    content.vb: Public ReadOnly Property graphs As NavGraph()
  overload: Global.AstarPath.graphs*
- uid: Global.AstarPath.showNavGraphs
  commentId: F:Global.AstarPath.showNavGraphs
  id: showNavGraphs
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: showNavGraphs
  nameWithType: AstarPath.showNavGraphs
  fullName: AstarPath.showNavGraphs
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: showNavGraphs
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 95
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    @name Inspector - Debug

    @{
  example: []
  syntax:
    content: public bool showNavGraphs
    return:
      type: System.Boolean
    content.vb: Public showNavGraphs As Boolean
- uid: Global.AstarPath.showUnwalkableNodes
  commentId: F:Global.AstarPath.showUnwalkableNodes
  id: showUnwalkableNodes
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: showUnwalkableNodes
  nameWithType: AstarPath.showUnwalkableNodes
  fullName: AstarPath.showUnwalkableNodes
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: showUnwalkableNodes
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 104
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Toggle to show unwalkable nodes.


    Note: Only relevant in the editor


    See: <xref href="AstarPath.unwalkableNodeDebugSize" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool showUnwalkableNodes
    return:
      type: System.Boolean
    content.vb: Public showUnwalkableNodes As Boolean
- uid: Global.AstarPath.debugMode
  commentId: F:Global.AstarPath.debugMode
  id: debugMode
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugMode
  nameWithType: AstarPath.debugMode
  fullName: AstarPath.debugMode
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: debugMode
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 113
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    The mode to use for drawing nodes in the sceneview.


    Note: Only relevant in the editor


    See: Pathfinding.GraphDebugMode
  example: []
  syntax:
    content: public GraphDebugMode debugMode
    return:
      type: Pathfinding.GraphDebugMode
    content.vb: Public debugMode As GraphDebugMode
- uid: Global.AstarPath.debugFloor
  commentId: F:Global.AstarPath.debugFloor
  id: debugFloor
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugFloor
  nameWithType: AstarPath.debugFloor
  fullName: AstarPath.debugFloor
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: debugFloor
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 124
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Low value to use for certain <xref href="AstarPath.debugMode" data-throw-if-not-resolved="false"></xref> modes.

    For example if <xref href="AstarPath.debugMode" data-throw-if-not-resolved="false"></xref> is set to G, this value will determine when the node will be completely red.


    Note: Only relevant in the editor


    See: <xref href="AstarPath.debugRoof" data-throw-if-not-resolved="false"></xref>

    See: <xref href="AstarPath.debugMode" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public float debugFloor
    return:
      type: System.Single
    content.vb: Public debugFloor As Single
- uid: Global.AstarPath.debugRoof
  commentId: F:Global.AstarPath.debugRoof
  id: debugRoof
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugRoof
  nameWithType: AstarPath.debugRoof
  fullName: AstarPath.debugRoof
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: debugRoof
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 138
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    High value to use for certain <xref href="AstarPath.debugMode" data-throw-if-not-resolved="false"></xref> modes.

    For example if <xref href="AstarPath.debugMode" data-throw-if-not-resolved="false"></xref> is set to G, this value will determine when the node will be completely green.


    For the penalty debug mode, the nodes will be colored green when they have a penalty less than <xref href="AstarPath.debugFloor" data-throw-if-not-resolved="false"></xref> and red

    when their penalty is greater or equal to this value and something between red and green otherwise.


    Note: Only relevant in the editor


    See: <xref href="AstarPath.debugFloor" data-throw-if-not-resolved="false"></xref>

    See: <xref href="AstarPath.debugMode" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public float debugRoof
    return:
      type: System.Single
    content.vb: Public debugRoof As Single
- uid: Global.AstarPath.manualDebugFloorRoof
  commentId: F:Global.AstarPath.manualDebugFloorRoof
  id: manualDebugFloorRoof
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: manualDebugFloorRoof
  nameWithType: AstarPath.manualDebugFloorRoof
  fullName: AstarPath.manualDebugFloorRoof
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: manualDebugFloorRoof
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 145
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    If set, the <xref href="AstarPath.debugFloor" data-throw-if-not-resolved="false"></xref> and <xref href="AstarPath.debugRoof" data-throw-if-not-resolved="false"></xref> values will not be automatically recalculated.


    Note: Only relevant in the editor
  example: []
  syntax:
    content: public bool manualDebugFloorRoof
    return:
      type: System.Boolean
    content.vb: Public manualDebugFloorRoof As Boolean
- uid: Global.AstarPath.showSearchTree
  commentId: F:Global.AstarPath.showSearchTree
  id: showSearchTree
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: showSearchTree
  nameWithType: AstarPath.showSearchTree
  fullName: AstarPath.showSearchTree
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: showSearchTree
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 156
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    If enabled, nodes will draw a line to their 'parent'.

    This will show the search tree for the latest path.


    Note: Only relevant in the editor


    TODO: Add a showOnlyLastPath flag to indicate whether to draw every node or only the ones visited by the latest path.
  example: []
  syntax:
    content: public bool showSearchTree
    return:
      type: System.Boolean
    content.vb: Public showSearchTree As Boolean
- uid: Global.AstarPath.unwalkableNodeDebugSize
  commentId: F:Global.AstarPath.unwalkableNodeDebugSize
  id: unwalkableNodeDebugSize
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: unwalkableNodeDebugSize
  nameWithType: AstarPath.unwalkableNodeDebugSize
  fullName: AstarPath.unwalkableNodeDebugSize
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: unwalkableNodeDebugSize
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 164
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Size of the red cubes shown in place of unwalkable nodes.


    Note: Only relevant in the editor. Does not apply to grid graphs.

    See: <xref href="AstarPath.showUnwalkableNodes" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public float unwalkableNodeDebugSize
    return:
      type: System.Single
    content.vb: Public unwalkableNodeDebugSize As Single
- uid: Global.AstarPath.logPathResults
  commentId: F:Global.AstarPath.logPathResults
  id: logPathResults
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: logPathResults
  nameWithType: AstarPath.logPathResults
  fullName: AstarPath.logPathResults
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: logPathResults
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 174
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    The amount of debugging messages.

    Use less debugging to improve performance (a bit) or just to get rid of the Console spamming.

    Use more debugging (heavy) if you want more information about what the pathfinding scripts are doing.

    The InGame option will display the latest path log using in-game GUI.


    [Open online documentation to see images]
  example: []
  syntax:
    content: public PathLog logPathResults
    return:
      type: Pathfinding.PathLog
    content.vb: Public logPathResults As PathLog
- uid: Global.AstarPath.maxNearestNodeDistance
  commentId: F:Global.AstarPath.maxNearestNodeDistance
  id: maxNearestNodeDistance
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: maxNearestNodeDistance
  nameWithType: AstarPath.maxNearestNodeDistance
  fullName: AstarPath.maxNearestNodeDistance
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: maxNearestNodeDistance
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 197
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    @name Inspector - Settings

    @{
  example: []
  syntax:
    content: public float maxNearestNodeDistance
    return:
      type: System.Single
    content.vb: Public maxNearestNodeDistance As Single
- uid: Global.AstarPath.maxNearestNodeDistanceSqr
  commentId: P:Global.AstarPath.maxNearestNodeDistanceSqr
  id: maxNearestNodeDistanceSqr
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: maxNearestNodeDistanceSqr
  nameWithType: AstarPath.maxNearestNodeDistanceSqr
  fullName: AstarPath.maxNearestNodeDistanceSqr
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: maxNearestNodeDistanceSqr
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 203
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Max Nearest Node Distance Squared.

    See: <xref href="AstarPath.maxNearestNodeDistance" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public float maxNearestNodeDistanceSqr { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property maxNearestNodeDistanceSqr As Single
  overload: Global.AstarPath.maxNearestNodeDistanceSqr*
- uid: Global.AstarPath.scanOnStartup
  commentId: F:Global.AstarPath.scanOnStartup
  id: scanOnStartup
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: scanOnStartup
  nameWithType: AstarPath.scanOnStartup
  fullName: AstarPath.scanOnStartup
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: scanOnStartup
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 216
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    If true, all graphs will be scanned during Awake.

    This does not include loading from the cache.

    If you disable this, you will have to call \link Scan AstarPath.active.Scan() \endlink yourself to enable pathfinding.

    Alternatively you could load a saved graph from a file.


    See: <xref href="AstarPath.Scan(Pathfinding.NavGraph)" data-throw-if-not-resolved="false"></xref>

    See: <xref href="AstarPath.ScanAsync(Pathfinding.NavGraph)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool scanOnStartup
    return:
      type: System.Boolean
    content.vb: Public scanOnStartup As Boolean
- uid: Global.AstarPath.fullGetNearestSearch
  commentId: F:Global.AstarPath.fullGetNearestSearch
  id: fullGetNearestSearch
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: fullGetNearestSearch
  nameWithType: AstarPath.fullGetNearestSearch
  fullName: AstarPath.fullGetNearestSearch
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: fullGetNearestSearch
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 227
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Do a full GetNearest search for all graphs.

    Additional searches will normally only be done on the graph which in the first fast search seemed to have the closest node.

    With this setting on, additional searches will be done on all graphs since the first check is not always completely accurate.\n

    More technically: GetNearestForce on all graphs will be called if true, otherwise only on the one graph which's GetNearest search returned the best node.\n

    Usually faster when disabled, but higher quality searches when enabled.

    When using a a navmesh or recast graph, for best quality, this setting should be combined with the Pathfinding.NavMeshGraph.accurateNearestNode setting set to true.

    Note: For the PointGraph this setting doesn't matter much as it has only one search mode.
  example: []
  syntax:
    content: public bool fullGetNearestSearch
    return:
      type: System.Boolean
    content.vb: Public fullGetNearestSearch As Boolean
- uid: Global.AstarPath.prioritizeGraphs
  commentId: F:Global.AstarPath.prioritizeGraphs
  id: prioritizeGraphs
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: prioritizeGraphs
  nameWithType: AstarPath.prioritizeGraphs
  fullName: AstarPath.prioritizeGraphs
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: prioritizeGraphs
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 234
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Prioritize graphs.

    Graphs will be prioritized based on their order in the inspector.

    The first graph which has a node closer than <xref href="AstarPath.prioritizeGraphsLimit" data-throw-if-not-resolved="false"></xref> will be chosen instead of searching all graphs.
  example: []
  syntax:
    content: public bool prioritizeGraphs
    return:
      type: System.Boolean
    content.vb: Public prioritizeGraphs As Boolean
- uid: Global.AstarPath.prioritizeGraphsLimit
  commentId: F:Global.AstarPath.prioritizeGraphsLimit
  id: prioritizeGraphsLimit
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: prioritizeGraphsLimit
  nameWithType: AstarPath.prioritizeGraphsLimit
  fullName: AstarPath.prioritizeGraphsLimit
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: prioritizeGraphsLimit
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 240
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Distance limit for <xref href="AstarPath.prioritizeGraphs" data-throw-if-not-resolved="false"></xref>.

    See: <xref href="AstarPath.prioritizeGraphs" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public float prioritizeGraphsLimit
    return:
      type: System.Single
    content.vb: Public prioritizeGraphsLimit As Single
- uid: Global.AstarPath.colorSettings
  commentId: F:Global.AstarPath.colorSettings
  id: colorSettings
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: colorSettings
  nameWithType: AstarPath.colorSettings
  fullName: AstarPath.colorSettings
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: colorSettings
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 246
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Reference to the color settings for this AstarPath object.

    Color settings include for example which color the nodes should be in, in the sceneview.
  example: []
  syntax:
    content: public AstarColor colorSettings
    return:
      type: Pathfinding.AstarColor
    content.vb: Public colorSettings As AstarColor
- uid: Global.AstarPath.tagNames
  commentId: F:Global.AstarPath.tagNames
  id: tagNames
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: tagNames
  nameWithType: AstarPath.tagNames
  fullName: AstarPath.tagNames
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: tagNames
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 254
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Stored tag names.

    See: AstarPath.FindTagNames

    See: AstarPath.GetTagNames
  example: []
  syntax:
    content: >-
      [SerializeField]

      protected string[] tagNames
    return:
      type: System.String[]
    content.vb: >-
      <SerializeField>

      Protected tagNames As String()
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.AstarPath.heuristic
  commentId: F:Global.AstarPath.heuristic
  id: heuristic
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: heuristic
  nameWithType: AstarPath.heuristic
  fullName: AstarPath.heuristic
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: heuristic
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 265
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    The distance function to use as a heuristic.

    The heuristic, often referred to as just 'H' is the estimated cost from a node to the target.

    Different heuristics affect how the path picks which one to follow from multiple possible with the same length

    See: <xref href="Pathfinding.Heuristic" data-throw-if-not-resolved="false"></xref> for more details and descriptions of the different modes.

    See: <a href="https://en.wikipedia.org/wiki/Admissible_heuristic">Wikipedia: Admissible heuristic</a>

    See: <a href="https://en.wikipedia.org/wiki/A*_search_algorithm">Wikipedia: A* search algorithm</a>

    See: <a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm">Wikipedia: Dijkstra's Algorithm</a>
  example: []
  syntax:
    content: public Heuristic heuristic
    return:
      type: Pathfinding.Heuristic
    content.vb: Public heuristic As Heuristic
- uid: Global.AstarPath.heuristicScale
  commentId: F:Global.AstarPath.heuristicScale
  id: heuristicScale
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: heuristicScale
  nameWithType: AstarPath.heuristicScale
  fullName: AstarPath.heuristicScale
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: heuristicScale
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 279
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    The scale of the heuristic.

    If a value lower than 1 is used, the pathfinder will search more nodes (slower).

    If 0 is used, the pathfinding algorithm will be reduced to dijkstra's algorithm. This is equivalent to setting <xref href="AstarPath.heuristic" data-throw-if-not-resolved="false"></xref> to None.

    If a value larger than 1 is used the pathfinding will (usually) be faster because it expands fewer nodes, but the paths may no longer be the optimal (i.e the shortest possible paths).


    Usually you should leave this to the default value of 1.


    See: https://en.wikipedia.org/wiki/Admissible_heuristic

    See: https://en.wikipedia.org/wiki/A*_search_algorithm

    See: https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm
  example: []
  syntax:
    content: public float heuristicScale
    return:
      type: System.Single
    content.vb: Public heuristicScale As Single
- uid: Global.AstarPath.threadCount
  commentId: F:Global.AstarPath.threadCount
  id: threadCount
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: threadCount
  nameWithType: AstarPath.threadCount
  fullName: AstarPath.threadCount
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: threadCount
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 309
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Number of pathfinding threads to use.

    Multithreading puts pathfinding in another thread, this is great for performance on 2+ core computers since the framerate will barely be affected by the pathfinding at all.

    - None indicates that the pathfinding is run in the Unity thread as a coroutine

    - Automatic will try to adjust the number of threads to the number of cores and memory on the computer.
     Less than 512mb of memory or a single core computer will make it revert to using no multithreading.

    It is recommended that you use one of the "Auto" settings that are available.

    The reason is that even if your computer might be beefy and have 8 cores.

    Other computers might only be quad core or dual core in which case they will not benefit from more than

    1 or 3 threads respectively (you usually want to leave one core for the unity thread).

    If you use more threads than the number of cores on the computer it is mostly just wasting memory, it will not run any faster.

    The extra memory usage is not trivially small. Each thread needs to keep a small amount of data for each node in all the graphs.

    It is not the full graph data but it is proportional to the number of nodes.

    The automatic settings will inspect the machine it is running on and use that to determine the number of threads so that no memory is wasted.


    The exception is if you only have one (or maybe two characters) active at time. Then you should probably just go with one thread always since it is very unlikely

    that you will need the extra throughput given by more threads. Keep in mind that more threads primarily increases throughput by calculating different paths on different

    threads, it will not calculate individual paths any faster.


    Note that if you are modifying the pathfinding core scripts or if you are directly modifying graph data without using any of the

    safe wrappers (like <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref> multithreading can cause strange errors and pathfinding stopping to work if you are not careful.

    For basic usage (not modding the pathfinding core) it should be safe.


    Note: WebGL does not support threads at all (since javascript is single-threaded) so no threads will be used on that platform.


    See: CalculateThreadCount
  example: []
  syntax:
    content: public ThreadCount threadCount
    return:
      type: Pathfinding.ThreadCount
    content.vb: Public threadCount As ThreadCount
- uid: Global.AstarPath.maxFrameTime
  commentId: F:Global.AstarPath.maxFrameTime
  id: maxFrameTime
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: maxFrameTime
  nameWithType: AstarPath.maxFrameTime
  fullName: AstarPath.maxFrameTime
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: maxFrameTime
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 316
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Max number of milliseconds to spend each frame for pathfinding.

    At least 500 nodes will be searched each frame (if there are that many to search).

    When using multithreading this value is irrelevant.
  example: []
  syntax:
    content: public float maxFrameTime
    return:
      type: System.Single
    content.vb: Public maxFrameTime As Single
- uid: Global.AstarPath.batchGraphUpdates
  commentId: F:Global.AstarPath.batchGraphUpdates
  id: batchGraphUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: batchGraphUpdates
  nameWithType: AstarPath.batchGraphUpdates
  fullName: AstarPath.batchGraphUpdates
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: batchGraphUpdates
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 337
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Throttle graph updates and batch them to improve performance.

    If toggled, graph updates will batched and executed less often (specified by <xref href="AstarPath.graphUpdateBatchingInterval" data-throw-if-not-resolved="false"></xref>.


    This can have a positive impact on pathfinding throughput since the pathfinding threads do not need

    to be stopped as often, and it reduces the overhead per graph update.

    All graph updates are still applied however, they are just batched together so that more of them are

    applied at the same time.


    However do not use this if you want minimal latency between a graph update being requested

    and it being applied.


    This only applies to graph updates requested using the <xref href="AstarPath.UpdateGraphs(UnityEngine.Bounds%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> method. Not those requested

    using <xref href="AstarPath.RegisterSafeUpdate(System.Action)" data-throw-if-not-resolved="false"></xref> or <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref>.


    If you want to apply graph updates immediately at some point, you can call <xref href="AstarPath.FlushGraphUpdates" data-throw-if-not-resolved="false"></xref>.


    See: graph-updates (view in online documentation for working links)
  example: []
  syntax:
    content: public bool batchGraphUpdates
    return:
      type: System.Boolean
    content.vb: Public batchGraphUpdates As Boolean
- uid: Global.AstarPath.graphUpdateBatchingInterval
  commentId: F:Global.AstarPath.graphUpdateBatchingInterval
  id: graphUpdateBatchingInterval
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: graphUpdateBatchingInterval
  nameWithType: AstarPath.graphUpdateBatchingInterval
  fullName: AstarPath.graphUpdateBatchingInterval
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: graphUpdateBatchingInterval
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 356
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Minimum number of seconds between each batch of graph updates.

    If <xref href="AstarPath.batchGraphUpdates" data-throw-if-not-resolved="false"></xref> is true, this defines the minimum number of seconds between each batch of graph updates.


    This can have a positive impact on pathfinding throughput since the pathfinding threads do not need

    to be stopped as often, and it reduces the overhead per graph update.

    All graph updates are still applied however, they are just batched together so that more of them are

    applied at the same time.


    Do not use this if you want minimal latency between a graph update being requested

    and it being applied.


    This only applies to graph updates requested using the <xref href="AstarPath.UpdateGraphs(UnityEngine.Bounds%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> method. Not those requested

    using <xref href="AstarPath.RegisterSafeUpdate(System.Action)" data-throw-if-not-resolved="false"></xref> or <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref>.


    See: graph-updates (view in online documentation for working links)
  example: []
  syntax:
    content: public float graphUpdateBatchingInterval
    return:
      type: System.Single
    content.vb: Public graphUpdateBatchingInterval As Single
- uid: Global.AstarPath.limitGraphUpdates
  commentId: P:Global.AstarPath.limitGraphUpdates
  id: limitGraphUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: limitGraphUpdates
  nameWithType: AstarPath.limitGraphUpdates
  fullName: AstarPath.limitGraphUpdates
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: limitGraphUpdates
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 362
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Batch graph updates.

    Deprecated: This field has been renamed to <xref href="AstarPath.batchGraphUpdates" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Obsolete("This field has been renamed to 'batchGraphUpdates'")]

      public bool limitGraphUpdates { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("This field has been renamed to 'batchGraphUpdates'")>

      Public Property limitGraphUpdates As Boolean
  overload: Global.AstarPath.limitGraphUpdates*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This field has been renamed to 'batchGraphUpdates'
- uid: Global.AstarPath.maxGraphUpdateFreq
  commentId: P:Global.AstarPath.maxGraphUpdateFreq
  id: maxGraphUpdateFreq
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: maxGraphUpdateFreq
  nameWithType: AstarPath.maxGraphUpdateFreq
  fullName: AstarPath.maxGraphUpdateFreq
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: maxGraphUpdateFreq
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 369
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Limit for how often should graphs be updated.

    Deprecated: This field has been renamed to <xref href="AstarPath.graphUpdateBatchingInterval" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Obsolete("This field has been renamed to 'graphUpdateBatchingInterval'")]

      public float maxGraphUpdateFreq { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <Obsolete("This field has been renamed to 'graphUpdateBatchingInterval'")>

      Public Property maxGraphUpdateFreq As Single
  overload: Global.AstarPath.maxGraphUpdateFreq*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This field has been renamed to 'graphUpdateBatchingInterval'
- uid: Global.AstarPath.lastScanTime
  commentId: P:Global.AstarPath.lastScanTime
  id: lastScanTime
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: lastScanTime
  nameWithType: AstarPath.lastScanTime
  fullName: AstarPath.lastScanTime
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: lastScanTime
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 396
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    The time it took for the last call to Scan() to complete.

    Used to prevent automatically rescanning the graphs too often (editor only)
  example: []
  syntax:
    content: public float lastScanTime { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property lastScanTime As Single
  overload: Global.AstarPath.lastScanTime*
- uid: Global.AstarPath.debugPathData
  commentId: F:Global.AstarPath.debugPathData
  id: debugPathData
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugPathData
  nameWithType: AstarPath.debugPathData
  fullName: AstarPath.debugPathData
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: debugPathData
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 404
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    The path to debug using gizmos.

    This is the path handler used to calculate the last path.

    It is used in the editor to draw debug information using gizmos.
  example: []
  syntax:
    content: >-
      [NonSerialized]

      public PathHandler debugPathData
    return:
      type: Pathfinding.PathHandler
    content.vb: >-
      <NonSerialized>

      Public debugPathData As PathHandler
  attributes:
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.debugPathID
  commentId: F:Global.AstarPath.debugPathID
  id: debugPathID
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: debugPathID
  nameWithType: AstarPath.debugPathID
  fullName: AstarPath.debugPathID
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: debugPathID
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 408
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: The path ID to debug using gizmos
  example: []
  syntax:
    content: >-
      [NonSerialized]

      public ushort debugPathID
    return:
      type: System.UInt16
    content.vb: >-
      <NonSerialized>

      Public debugPathID As UShort
  attributes:
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.isScanning
  commentId: P:Global.AstarPath.isScanning
  id: isScanning
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: isScanning
  nameWithType: AstarPath.isScanning
  fullName: AstarPath.isScanning
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: isScanning
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 439
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Set while any graphs are being scanned.

    It will be true up until the FloodFill is done.


    Note: Not to be confused with graph updates.


    Used to better support Graph Update Objects called for example in OnPostScan


    See: IsAnyGraphUpdateQueued

    See: IsAnyGraphUpdateInProgress
  example: []
  syntax:
    content: public bool isScanning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isScanning As Boolean
  overload: Global.AstarPath.isScanning*
- uid: Global.AstarPath.NumParallelThreads
  commentId: P:Global.AstarPath.NumParallelThreads
  id: NumParallelThreads
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: NumParallelThreads
  nameWithType: AstarPath.NumParallelThreads
  fullName: AstarPath.NumParallelThreads
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: NumParallelThreads
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 447
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Number of parallel pathfinders.

    Returns the number of concurrent processes which can calculate paths at once.

    When using multithreading, this will be the number of threads, if not using multithreading it is always 1 (since only 1 coroutine is used).

    See: IsUsingMultithreading
  example: []
  syntax:
    content: public int NumParallelThreads { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumParallelThreads As Integer
  overload: Global.AstarPath.NumParallelThreads*
- uid: Global.AstarPath.IsUsingMultithreading
  commentId: P:Global.AstarPath.IsUsingMultithreading
  id: IsUsingMultithreading
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsUsingMultithreading
  nameWithType: AstarPath.IsUsingMultithreading
  fullName: AstarPath.IsUsingMultithreading
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: IsUsingMultithreading
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 459
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns whether or not multithreading is used.

    \exception System.Exception Is thrown when it could not be decided if multithreading was used or not.

    This should not happen if pathfinding is set up correctly.

    Note: This uses info about if threads are running right now, it does not use info from the settings on the A* object.
  example: []
  syntax:
    content: public bool IsUsingMultithreading { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUsingMultithreading As Boolean
  overload: Global.AstarPath.IsUsingMultithreading*
- uid: Global.AstarPath.IsAnyGraphUpdatesQueued
  commentId: P:Global.AstarPath.IsAnyGraphUpdatesQueued
  id: IsAnyGraphUpdatesQueued
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsAnyGraphUpdatesQueued
  nameWithType: AstarPath.IsAnyGraphUpdatesQueued
  fullName: AstarPath.IsAnyGraphUpdatesQueued
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: IsAnyGraphUpdatesQueued
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 469
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns if any graph updates are waiting to be applied.

    Deprecated: Use IsAnyGraphUpdateQueued instead
  example: []
  syntax:
    content: >-
      [Obsolete("Fixed grammar, use IsAnyGraphUpdateQueued instead")]

      public bool IsAnyGraphUpdatesQueued { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("Fixed grammar, use IsAnyGraphUpdateQueued instead")>

      Public ReadOnly Property IsAnyGraphUpdatesQueued As Boolean
  overload: Global.AstarPath.IsAnyGraphUpdatesQueued*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Fixed grammar, use IsAnyGraphUpdateQueued instead
- uid: Global.AstarPath.IsAnyGraphUpdateQueued
  commentId: P:Global.AstarPath.IsAnyGraphUpdateQueued
  id: IsAnyGraphUpdateQueued
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsAnyGraphUpdateQueued
  nameWithType: AstarPath.IsAnyGraphUpdateQueued
  fullName: AstarPath.IsAnyGraphUpdateQueued
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: IsAnyGraphUpdateQueued
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 477
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns if any graph updates are waiting to be applied.

    Note: This is false while the updates are being performed.

    Note: This does *not* includes other types of work items such as navmesh cutting or anything added by <xref href="AstarPath.RegisterSafeUpdate(System.Action)" data-throw-if-not-resolved="false"></xref> or <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsAnyGraphUpdateQueued { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAnyGraphUpdateQueued As Boolean
  overload: Global.AstarPath.IsAnyGraphUpdateQueued*
- uid: Global.AstarPath.IsAnyGraphUpdateInProgress
  commentId: P:Global.AstarPath.IsAnyGraphUpdateInProgress
  id: IsAnyGraphUpdateInProgress
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsAnyGraphUpdateInProgress
  nameWithType: AstarPath.IsAnyGraphUpdateInProgress
  fullName: AstarPath.IsAnyGraphUpdateInProgress
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: IsAnyGraphUpdateInProgress
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 485
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns if any graph updates are being calculated right now.

    Note: This does *not* includes other types of work items such as navmesh cutting or anything added by <xref href="AstarPath.RegisterSafeUpdate(System.Action)" data-throw-if-not-resolved="false"></xref> or <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref>.


    See: IsAnyWorkItemInProgress
  example: []
  syntax:
    content: public bool IsAnyGraphUpdateInProgress { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAnyGraphUpdateInProgress As Boolean
  overload: Global.AstarPath.IsAnyGraphUpdateInProgress*
- uid: Global.AstarPath.IsAnyWorkItemInProgress
  commentId: P:Global.AstarPath.IsAnyWorkItemInProgress
  id: IsAnyWorkItemInProgress
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: IsAnyWorkItemInProgress
  nameWithType: AstarPath.IsAnyWorkItemInProgress
  fullName: AstarPath.IsAnyWorkItemInProgress
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: IsAnyWorkItemInProgress
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 492
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns if any work items are in progress right now.

    Note: This includes pretty much all types of graph updates.

    Such as normal graph updates, navmesh cutting and anything added by <xref href="AstarPath.RegisterSafeUpdate(System.Action)" data-throw-if-not-resolved="false"></xref> or <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsAnyWorkItemInProgress { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAnyWorkItemInProgress As Boolean
  overload: Global.AstarPath.IsAnyWorkItemInProgress*
- uid: Global.AstarPath.OnAwakeSettings
  commentId: F:Global.AstarPath.OnAwakeSettings
  id: OnAwakeSettings
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnAwakeSettings
  nameWithType: AstarPath.OnAwakeSettings
  fullName: AstarPath.OnAwakeSettings
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnAwakeSettings
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 536
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  syntax:
    content: public static Action OnAwakeSettings
    return:
      type: System.Action
    content.vb: Public Shared OnAwakeSettings As Action
- uid: Global.AstarPath.OnGraphPreScan
  commentId: F:Global.AstarPath.OnGraphPreScan
  id: OnGraphPreScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphPreScan
  nameWithType: AstarPath.OnGraphPreScan
  fullName: AstarPath.OnGraphPreScan
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnGraphPreScan
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 539
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called for each graph before they are scanned
  example: []
  syntax:
    content: public static OnGraphDelegate OnGraphPreScan
    return:
      type: Pathfinding.OnGraphDelegate
    content.vb: Public Shared OnGraphPreScan As OnGraphDelegate
- uid: Global.AstarPath.OnGraphPostScan
  commentId: F:Global.AstarPath.OnGraphPostScan
  id: OnGraphPostScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphPostScan
  nameWithType: AstarPath.OnGraphPostScan
  fullName: AstarPath.OnGraphPostScan
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnGraphPostScan
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 542
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called for each graph after they have been scanned. All other graphs might not have been scanned yet.
  example: []
  syntax:
    content: public static OnGraphDelegate OnGraphPostScan
    return:
      type: Pathfinding.OnGraphDelegate
    content.vb: Public Shared OnGraphPostScan As OnGraphDelegate
- uid: Global.AstarPath.OnPathPreSearch
  commentId: F:Global.AstarPath.OnPathPreSearch
  id: OnPathPreSearch
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnPathPreSearch
  nameWithType: AstarPath.OnPathPreSearch
  fullName: AstarPath.OnPathPreSearch
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnPathPreSearch
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 545
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called for each path before searching. Be careful when using multithreading since this will be called from a different thread.
  example: []
  syntax:
    content: public static OnPathDelegate OnPathPreSearch
    return:
      type: Pathfinding.OnPathDelegate
    content.vb: Public Shared OnPathPreSearch As OnPathDelegate
- uid: Global.AstarPath.OnPathPostSearch
  commentId: F:Global.AstarPath.OnPathPostSearch
  id: OnPathPostSearch
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnPathPostSearch
  nameWithType: AstarPath.OnPathPostSearch
  fullName: AstarPath.OnPathPostSearch
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnPathPostSearch
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 548
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called for each path after searching. Be careful when using multithreading since this will be called from a different thread.
  example: []
  syntax:
    content: public static OnPathDelegate OnPathPostSearch
    return:
      type: Pathfinding.OnPathDelegate
    content.vb: Public Shared OnPathPostSearch As OnPathDelegate
- uid: Global.AstarPath.OnPreScan
  commentId: F:Global.AstarPath.OnPreScan
  id: OnPreScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnPreScan
  nameWithType: AstarPath.OnPreScan
  fullName: AstarPath.OnPreScan
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnPreScan
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 551
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called before starting the scanning
  example: []
  syntax:
    content: public static OnScanDelegate OnPreScan
    return:
      type: Pathfinding.OnScanDelegate
    content.vb: Public Shared OnPreScan As OnScanDelegate
- uid: Global.AstarPath.OnPostScan
  commentId: F:Global.AstarPath.OnPostScan
  id: OnPostScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnPostScan
  nameWithType: AstarPath.OnPostScan
  fullName: AstarPath.OnPostScan
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnPostScan
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 554
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called after scanning. This is called before applying links, flood-filling the graphs and other post processing.
  example: []
  syntax:
    content: public static OnScanDelegate OnPostScan
    return:
      type: Pathfinding.OnScanDelegate
    content.vb: Public Shared OnPostScan As OnScanDelegate
- uid: Global.AstarPath.OnLatePostScan
  commentId: F:Global.AstarPath.OnLatePostScan
  id: OnLatePostScan
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnLatePostScan
  nameWithType: AstarPath.OnLatePostScan
  fullName: AstarPath.OnLatePostScan
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnLatePostScan
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 557
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called after scanning has completed fully. This is called as the last thing in the Scan function.
  example: []
  syntax:
    content: public static OnScanDelegate OnLatePostScan
    return:
      type: Pathfinding.OnScanDelegate
    content.vb: Public Shared OnLatePostScan As OnScanDelegate
- uid: Global.AstarPath.OnGraphsUpdated
  commentId: F:Global.AstarPath.OnGraphsUpdated
  id: OnGraphsUpdated
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphsUpdated
  nameWithType: AstarPath.OnGraphsUpdated
  fullName: AstarPath.OnGraphsUpdated
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnGraphsUpdated
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 560
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: Called when any graphs are updated. Register to for example recalculate the path whenever a graph changes.
  example: []
  syntax:
    content: public static OnScanDelegate OnGraphsUpdated
    return:
      type: Pathfinding.OnScanDelegate
    content.vb: Public Shared OnGraphsUpdated As OnScanDelegate
- uid: Global.AstarPath.On65KOverflow
  commentId: F:Global.AstarPath.On65KOverflow
  id: On65KOverflow
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: On65KOverflow
  nameWithType: AstarPath.On65KOverflow
  fullName: AstarPath.On65KOverflow
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: On65KOverflow
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 566
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Called when pathID overflows 65536 and resets back to zero.

    Note: This callback will be cleared every time it is called, so if you want to register to it repeatedly, register to it directly on receiving the callback as well.
  example: []
  syntax:
    content: public static Action On65KOverflow
    return:
      type: System.Action
    content.vb: Public Shared On65KOverflow As Action
- uid: Global.AstarPath.OnGraphsWillBeUpdated
  commentId: F:Global.AstarPath.OnGraphsWillBeUpdated
  id: OnGraphsWillBeUpdated
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphsWillBeUpdated
  nameWithType: AstarPath.OnGraphsWillBeUpdated
  fullName: AstarPath.OnGraphsWillBeUpdated
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnGraphsWillBeUpdated
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 570
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: 'Deprecated:'
  example: []
  syntax:
    content: >-
      [Obsolete]

      public Action OnGraphsWillBeUpdated
    return:
      type: System.Action
    content.vb: >-
      <Obsolete>

      Public OnGraphsWillBeUpdated As Action
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.OnGraphsWillBeUpdated2
  commentId: F:Global.AstarPath.OnGraphsWillBeUpdated2
  id: OnGraphsWillBeUpdated2
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: OnGraphsWillBeUpdated2
  nameWithType: AstarPath.OnGraphsWillBeUpdated2
  fullName: AstarPath.OnGraphsWillBeUpdated2
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: OnGraphsWillBeUpdated2
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 574
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: 'Deprecated:'
  example: []
  syntax:
    content: >-
      [Obsolete]

      public Action OnGraphsWillBeUpdated2
    return:
      type: System.Action
    content.vb: >-
      <Obsolete>

      Public OnGraphsWillBeUpdated2 As Action
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Global.AstarPath.navmeshUpdates
  commentId: F:Global.AstarPath.navmeshUpdates
  id: navmeshUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: navmeshUpdates
  nameWithType: AstarPath.navmeshUpdates
  fullName: AstarPath.navmeshUpdates
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: navmeshUpdates
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 591
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Handles navmesh cuts.

    See: <see cref="!:Pathfinding.NavmeshCut"></see>
  example: []
  syntax:
    content: public readonly NavmeshUpdates navmeshUpdates
    return:
      type: Pathfinding.NavmeshUpdates
    content.vb: Public ReadOnly navmeshUpdates As NavmeshUpdates
- uid: Global.AstarPath.euclideanEmbedding
  commentId: F:Global.AstarPath.euclideanEmbedding
  id: euclideanEmbedding
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: euclideanEmbedding
  nameWithType: AstarPath.euclideanEmbedding
  fullName: AstarPath.euclideanEmbedding
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: euclideanEmbedding
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 620
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Holds settings for heuristic optimization.

    See: heuristic-opt (view in online documentation for working links)
  example: []
  syntax:
    content: public EuclideanEmbedding euclideanEmbedding
    return:
      type: Pathfinding.EuclideanEmbedding
    content.vb: Public euclideanEmbedding As EuclideanEmbedding
- uid: Global.AstarPath.showGraphs
  commentId: F:Global.AstarPath.showGraphs
  id: showGraphs
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: showGraphs
  nameWithType: AstarPath.showGraphs
  fullName: AstarPath.showGraphs
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: showGraphs
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 628
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Shows or hides graph inspectors.

    Used internally by the editor
  example: []
  syntax:
    content: public bool showGraphs
    return:
      type: System.Boolean
    content.vb: Public showGraphs As Boolean
- uid: Global.AstarPath.GetTagNames
  commentId: M:Global.AstarPath.GetTagNames
  id: GetTagNames
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetTagNames()
  nameWithType: AstarPath.GetTagNames()
  fullName: AstarPath.GetTagNames()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: GetTagNames
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 659
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns tag names.

    Makes sure that the tag names array is not null and of length 32.

    If it is null or not of length 32, it creates a new array and fills it with 0,1,2,3,4 etc...

    See: AstarPath.FindTagNames
  example: []
  syntax:
    content: public string[] GetTagNames()
    return:
      type: System.String[]
    content.vb: Public Function GetTagNames() As String()
  overload: Global.AstarPath.GetTagNames*
- uid: Global.AstarPath.FindAstarPath
  commentId: M:Global.AstarPath.FindAstarPath
  id: FindAstarPath
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FindAstarPath()
  nameWithType: AstarPath.FindAstarPath()
  fullName: AstarPath.FindAstarPath()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FindAstarPath
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 677
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Used outside of play mode to initialize the AstarPath object even if it has not been selected in the inspector yet.

    This will set the <xref href="AstarPath.active" data-throw-if-not-resolved="false"></xref> property and deserialize all graphs.


    This is useful if you want to do changes to the graphs in the editor outside of play mode, but cannot be sure that the graphs have been deserialized yet.

    In play mode this method does nothing.
  example: []
  syntax:
    content: public static void FindAstarPath()
    content.vb: Public Shared Sub FindAstarPath()
  overload: Global.AstarPath.FindAstarPath*
- uid: Global.AstarPath.FindTagNames
  commentId: M:Global.AstarPath.FindTagNames
  id: FindTagNames
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FindTagNames()
  nameWithType: AstarPath.FindTagNames()
  fullName: AstarPath.FindTagNames()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FindTagNames
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 688
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Tries to find an AstarPath object and return tag names.

    If an AstarPath object cannot be found, it returns an array of length 1 with an error message.

    See: AstarPath.GetTagNames
  example: []
  syntax:
    content: public static string[] FindTagNames()
    return:
      type: System.String[]
    content.vb: Public Shared Function FindTagNames() As String()
  overload: Global.AstarPath.FindTagNames*
- uid: Global.AstarPath.QueueWorkItemFloodFill
  commentId: M:Global.AstarPath.QueueWorkItemFloodFill
  id: QueueWorkItemFloodFill
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: QueueWorkItemFloodFill()
  nameWithType: AstarPath.QueueWorkItemFloodFill()
  fullName: AstarPath.QueueWorkItemFloodFill()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: QueueWorkItemFloodFill
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 901
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Call during work items to queue a flood fill.

    Deprecated: This method has been moved. Use the method on the context object that can be sent with work item delegates instead

    <pre><code class="lang-csharp">AstarPath.active.AddWorkItem(new AstarWorkItem(() =&gt; {
        // Safe to update graphs here
        var node = AstarPath.active.GetNearest(transform.position).node;
        node.Walkable = false;
    }));</code></pre>


    See: <xref href="Pathfinding.IWorkItemContext" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("This method has been moved. Use the method on the context object that can be sent with work item delegates instead")]

      public void QueueWorkItemFloodFill()
    content.vb: >-
      <Obsolete("This method has been moved. Use the method on the context object that can be sent with work item delegates instead")>

      Public Sub QueueWorkItemFloodFill()
  overload: Global.AstarPath.QueueWorkItemFloodFill*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method has been moved. Use the method on the context object that can be sent with work item delegates instead
- uid: Global.AstarPath.EnsureValidFloodFill
  commentId: M:Global.AstarPath.EnsureValidFloodFill
  id: EnsureValidFloodFill
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: EnsureValidFloodFill()
  nameWithType: AstarPath.EnsureValidFloodFill()
  fullName: AstarPath.EnsureValidFloodFill()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: EnsureValidFloodFill
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 919
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    If a WorkItem needs to have a valid flood fill during execution, call this method to ensure there are no pending flood fills.

    Deprecated: This method has been moved. Use the method on the context object that can be sent with work item delegates instead

    <pre><code class="lang-csharp">AstarPath.active.AddWorkItem(new AstarWorkItem(() =&gt; {
        // Safe to update graphs here
        var node = AstarPath.active.GetNearest(transform.position).node;
        node.Walkable = false;
    }));</code></pre>


    See: <xref href="Pathfinding.IWorkItemContext" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [Obsolete("This method has been moved. Use the method on the context object that can be sent with work item delegates instead")]

      public void EnsureValidFloodFill()
    content.vb: >-
      <Obsolete("This method has been moved. Use the method on the context object that can be sent with work item delegates instead")>

      Public Sub EnsureValidFloodFill()
  overload: Global.AstarPath.EnsureValidFloodFill*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method has been moved. Use the method on the context object that can be sent with work item delegates instead
- uid: Global.AstarPath.AddWorkItem(System.Action)
  commentId: M:Global.AstarPath.AddWorkItem(System.Action)
  id: AddWorkItem(System.Action)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: AddWorkItem(Action)
  nameWithType: AstarPath.AddWorkItem(Action)
  fullName: AstarPath.AddWorkItem(System.Action)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: AddWorkItem
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 933
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Add a work item to be processed when pathfinding is paused.

    Convenience method that is equivalent to

    <pre><code class="lang-csharp">AddWorkItem(new AstarWorkItem(callback));</code></pre>


    See: <xref href="AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void AddWorkItem(Action callback)
    parameters:
    - id: callback
      type: System.Action
    content.vb: Public Sub AddWorkItem(callback As Action)
  overload: Global.AstarPath.AddWorkItem*
- uid: Global.AstarPath.AddWorkItem(System.Action{Pathfinding.IWorkItemContext})
  commentId: M:Global.AstarPath.AddWorkItem(System.Action{Pathfinding.IWorkItemContext})
  id: AddWorkItem(System.Action{Pathfinding.IWorkItemContext})
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: AddWorkItem(Action<IWorkItemContext>)
  nameWithType: AstarPath.AddWorkItem(Action<IWorkItemContext>)
  fullName: AstarPath.AddWorkItem(System.Action<Pathfinding.IWorkItemContext>)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: AddWorkItem
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 946
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Add a work item to be processed when pathfinding is paused.

    Convenience method that is equivalent to

    <pre><code class="lang-csharp">AddWorkItem(new AstarWorkItem(callback));</code></pre>


    See: <xref href="AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void AddWorkItem(Action<IWorkItemContext> callback)
    parameters:
    - id: callback
      type: System.Action{Pathfinding.IWorkItemContext}
    content.vb: Public Sub AddWorkItem(callback As Action(Of IWorkItemContext))
  overload: Global.AstarPath.AddWorkItem*
  nameWithType.vb: AstarPath.AddWorkItem(Action(Of IWorkItemContext))
  fullName.vb: AstarPath.AddWorkItem(System.Action(Of Pathfinding.IWorkItemContext))
  name.vb: AddWorkItem(Action(Of IWorkItemContext))
- uid: Global.AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  commentId: M:Global.AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  id: AddWorkItem(Pathfinding.AstarWorkItem)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: AddWorkItem(AstarWorkItem)
  nameWithType: AstarPath.AddWorkItem(AstarWorkItem)
  fullName: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: AddWorkItem
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 978
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Add a work item to be processed when pathfinding is paused.


    The work item will be executed when it is safe to update nodes. This is defined as between the path searches.

    When using more threads than one, calling this often might decrease pathfinding performance due to a lot of idling in the threads.

    Not performance as in it will use much CPU power, but performance as in the number of paths per second will probably go down

    (though your framerate might actually increase a tiny bit).


    You should only call this function from the main unity thread (i.e normal game code).


    <pre><code class="lang-csharp">AstarPath.active.AddWorkItem(new AstarWorkItem(() =&gt; {
        // Safe to update graphs here
        var node = AstarPath.active.GetNearest(transform.position).node;
        node.Walkable = false;
    }));</code></pre>


    <pre><code class="lang-csharp">AstarPath.active.AddWorkItem(() =&gt; {
        // Safe to update graphs here
        var node = AstarPath.active.GetNearest(transform.position).node;
        node.position = (Int3)transform.position;
    });</code></pre>


    See: <xref href="AstarPath.FlushWorkItems" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void AddWorkItem(AstarWorkItem item)
    parameters:
    - id: item
      type: Pathfinding.AstarWorkItem
    content.vb: Public Sub AddWorkItem(item As AstarWorkItem)
  overload: Global.AstarPath.AddWorkItem*
- uid: Global.AstarPath.QueueGraphUpdates
  commentId: M:Global.AstarPath.QueueGraphUpdates
  id: QueueGraphUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: QueueGraphUpdates()
  nameWithType: AstarPath.QueueGraphUpdates()
  fullName: AstarPath.QueueGraphUpdates()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: QueueGraphUpdates
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1004
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Will apply queued graph updates as soon as possible, regardless of <xref href="AstarPath.batchGraphUpdates" data-throw-if-not-resolved="false"></xref>.

    Calling this multiple times will not create multiple callbacks.

    This function is useful if you are limiting graph updates, but you want a specific graph update to be applied as soon as possible regardless of the time limit.

    Note that this does not block until the updates are done, it merely bypasses the <xref href="AstarPath.batchGraphUpdates" data-throw-if-not-resolved="false"></xref> time limit.


    See: <xref href="AstarPath.FlushGraphUpdates" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void QueueGraphUpdates()
    content.vb: Public Sub QueueGraphUpdates()
  overload: Global.AstarPath.QueueGraphUpdates*
- uid: Global.AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  commentId: M:Global.AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  id: UpdateGraphs(UnityEngine.Bounds,System.Single)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: UpdateGraphs(Bounds, float)
  nameWithType: AstarPath.UpdateGraphs(Bounds, float)
  fullName: AstarPath.UpdateGraphs(UnityEngine.Bounds, float)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: UpdateGraphs
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1041
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Update all graphs within bounds after delay seconds.

    The graphs will be updated as soon as possible.


    See: FlushGraphUpdates

    See: batchGraphUpdates

    See: graph-updates (view in online documentation for working links)
  example: []
  syntax:
    content: public void UpdateGraphs(Bounds bounds, float delay)
    parameters:
    - id: bounds
      type: UnityEngine.Bounds
    - id: delay
      type: System.Single
    content.vb: Public Sub UpdateGraphs(bounds As Bounds, delay As Single)
  overload: Global.AstarPath.UpdateGraphs*
  nameWithType.vb: AstarPath.UpdateGraphs(Bounds, Single)
  fullName.vb: AstarPath.UpdateGraphs(UnityEngine.Bounds, Single)
  name.vb: UpdateGraphs(Bounds, Single)
- uid: Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject,System.Single)
  commentId: M:Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject,System.Single)
  id: UpdateGraphs(Pathfinding.GraphUpdateObject,System.Single)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: UpdateGraphs(GraphUpdateObject, float)
  nameWithType: AstarPath.UpdateGraphs(GraphUpdateObject, float)
  fullName: AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject, float)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: UpdateGraphs
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1053
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Update all graphs using the GraphUpdateObject after delay seconds.

    This can be used to, e.g make all nodes in a region unwalkable, or set them to a higher penalty.


    See: FlushGraphUpdates

    See: batchGraphUpdates

    See: graph-updates (view in online documentation for working links)
  example: []
  syntax:
    content: public void UpdateGraphs(GraphUpdateObject ob, float delay)
    parameters:
    - id: ob
      type: Pathfinding.GraphUpdateObject
    - id: delay
      type: System.Single
    content.vb: Public Sub UpdateGraphs(ob As GraphUpdateObject, delay As Single)
  overload: Global.AstarPath.UpdateGraphs*
  nameWithType.vb: AstarPath.UpdateGraphs(GraphUpdateObject, Single)
  fullName.vb: AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject, Single)
  name.vb: UpdateGraphs(GraphUpdateObject, Single)
- uid: Global.AstarPath.UpdateGraphs(UnityEngine.Bounds)
  commentId: M:Global.AstarPath.UpdateGraphs(UnityEngine.Bounds)
  id: UpdateGraphs(UnityEngine.Bounds)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: UpdateGraphs(Bounds)
  nameWithType: AstarPath.UpdateGraphs(Bounds)
  fullName: AstarPath.UpdateGraphs(UnityEngine.Bounds)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: UpdateGraphs
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1076
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Update all graphs within bounds.

    The graphs will be updated as soon as possible.


    This is equivalent to

    <pre><code class="lang-csharp">UpdateGraphs(new GraphUpdateObject(bounds));</code></pre>


    See: FlushGraphUpdates

    See: batchGraphUpdates

    See: graph-updates (view in online documentation for working links)
  example: []
  syntax:
    content: public void UpdateGraphs(Bounds bounds)
    parameters:
    - id: bounds
      type: UnityEngine.Bounds
    content.vb: Public Sub UpdateGraphs(bounds As Bounds)
  overload: Global.AstarPath.UpdateGraphs*
- uid: Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject)
  commentId: M:Global.AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject)
  id: UpdateGraphs(Pathfinding.GraphUpdateObject)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: UpdateGraphs(GraphUpdateObject)
  nameWithType: AstarPath.UpdateGraphs(GraphUpdateObject)
  fullName: AstarPath.UpdateGraphs(Pathfinding.GraphUpdateObject)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: UpdateGraphs
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1089
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Update all graphs using the GraphUpdateObject.

    This can be used to, e.g make all nodes in a region unwalkable, or set them to a higher penalty.

    The graphs will be updated as soon as possible (with respect to <xref href="AstarPath.batchGraphUpdates" data-throw-if-not-resolved="false"></xref>


    See: FlushGraphUpdates

    See: batchGraphUpdates

    See: graph-updates (view in online documentation for working links)
  example: []
  syntax:
    content: public void UpdateGraphs(GraphUpdateObject ob)
    parameters:
    - id: ob
      type: Pathfinding.GraphUpdateObject
    content.vb: Public Sub UpdateGraphs(ob As GraphUpdateObject)
  overload: Global.AstarPath.UpdateGraphs*
- uid: Global.AstarPath.FlushGraphUpdates
  commentId: M:Global.AstarPath.FlushGraphUpdates
  id: FlushGraphUpdates
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FlushGraphUpdates()
  nameWithType: AstarPath.FlushGraphUpdates()
  fullName: AstarPath.FlushGraphUpdates()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FlushGraphUpdates
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1121
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Forces graph updates to complete in a single frame.

    This will force the pathfinding threads to finish calculating the path they are currently calculating (if any) and then pause.

    When all threads have paused, graph updates will be performed.

    Warning: Using this very often (many times per second) can reduce your fps due to a lot of threads waiting for one another.

    But you probably wont have to worry about that.


    Note: This is almost identical to <xref href="AstarPath.FlushWorkItems" data-throw-if-not-resolved="false"></xref>, but added for more descriptive name.

    This function will also override any time limit delays for graph updates.

    This is because graph updates are implemented using work items.

    So calling this function will also execute any other work items (if any are queued).


    Will not do anything if there are no graph updates queued (not even execute other work items).
  example: []
  syntax:
    content: public void FlushGraphUpdates()
    content.vb: Public Sub FlushGraphUpdates()
  overload: Global.AstarPath.FlushGraphUpdates*
- uid: Global.AstarPath.FlushWorkItems
  commentId: M:Global.AstarPath.FlushWorkItems
  id: FlushWorkItems
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FlushWorkItems()
  nameWithType: AstarPath.FlushWorkItems()
  fullName: AstarPath.FlushWorkItems()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FlushWorkItems
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1143
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Forces work items to complete in a single frame.

    This will force all work items to run immidiately.

    This will force the pathfinding threads to finish calculating the path they are currently calculating (if any) and then pause.

    When all threads have paused, work items will be executed (which can be e.g graph updates).


    Warning: Using this very often (many times per second) can reduce your fps due to a lot of threads waiting for one another.

    But you probably wont have to worry about that


    Note: This is almost (note almost) identical to <xref href="AstarPath.FlushGraphUpdates" data-throw-if-not-resolved="false"></xref>, but added for more descriptive name.


    Will not do anything if there are no queued work items waiting to run.
  example: []
  syntax:
    content: public void FlushWorkItems()
    content.vb: Public Sub FlushWorkItems()
  overload: Global.AstarPath.FlushWorkItems*
- uid: Global.AstarPath.FlushWorkItems(System.Boolean,System.Boolean)
  commentId: M:Global.AstarPath.FlushWorkItems(System.Boolean,System.Boolean)
  id: FlushWorkItems(System.Boolean,System.Boolean)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FlushWorkItems(bool, bool)
  nameWithType: AstarPath.FlushWorkItems(bool, bool)
  fullName: AstarPath.FlushWorkItems(bool, bool)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FlushWorkItems
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1161
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Make sure work items are executed.


    See: AddWorkItem


    Deprecated: Use <xref href="AstarPath.FlushWorkItems" data-throw-if-not-resolved="false"></xref> instead.
  example: []
  syntax:
    content: >-
      [Obsolete("Use FlushWorkItems() instead")]

      public void FlushWorkItems(bool unblockOnComplete, bool block)
    parameters:
    - id: unblockOnComplete
      type: System.Boolean
      description: If true, pathfinding will be allowed to start running immediately after completing all work items.
    - id: block
      type: System.Boolean
      description: >-
        If true, work items that usually take more than one frame to complete will be forced to complete during this call.
                          If false, then after this call there might still be work left to do.
    content.vb: >-
      <Obsolete("Use FlushWorkItems() instead")>

      Public Sub FlushWorkItems(unblockOnComplete As Boolean, block As Boolean)
  overload: Global.AstarPath.FlushWorkItems*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use FlushWorkItems() instead
  nameWithType.vb: AstarPath.FlushWorkItems(Boolean, Boolean)
  fullName.vb: AstarPath.FlushWorkItems(Boolean, Boolean)
  name.vb: FlushWorkItems(Boolean, Boolean)
- uid: Global.AstarPath.FlushThreadSafeCallbacks
  commentId: M:Global.AstarPath.FlushThreadSafeCallbacks
  id: FlushThreadSafeCallbacks
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FlushThreadSafeCallbacks()
  nameWithType: AstarPath.FlushThreadSafeCallbacks()
  fullName: AstarPath.FlushThreadSafeCallbacks()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FlushThreadSafeCallbacks
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1174
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Forces thread safe callbacks to run.

    Deprecated: Use <xref href="AstarPath.FlushWorkItems" data-throw-if-not-resolved="false"></xref> instead
  example: []
  syntax:
    content: >-
      [Obsolete("Use FlushWorkItems instead")]

      public void FlushThreadSafeCallbacks()
    content.vb: >-
      <Obsolete("Use FlushWorkItems instead")>

      Public Sub FlushThreadSafeCallbacks()
  overload: Global.AstarPath.FlushThreadSafeCallbacks*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use FlushWorkItems instead
- uid: Global.AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  commentId: M:Global.AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  id: CalculateThreadCount(Pathfinding.ThreadCount)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: CalculateThreadCount(ThreadCount)
  nameWithType: AstarPath.CalculateThreadCount(ThreadCount)
  fullName: AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: CalculateThreadCount
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1190
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  syntax:
    content: public static int CalculateThreadCount(ThreadCount count)
    parameters:
    - id: count
      type: Pathfinding.ThreadCount
    return:
      type: System.Int32
    content.vb: Public Shared Function CalculateThreadCount(count As ThreadCount) As Integer
  overload: Global.AstarPath.CalculateThreadCount*
- uid: Global.AstarPath.Awake
  commentId: M:Global.AstarPath.Awake
  id: Awake
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: AstarPath.Awake()
  fullName: AstarPath.Awake()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: Awake
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1219
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Sets up all needed variables and scans the graphs.

    Calls Initialize, starts the ReturnPaths coroutine and scans all graphs.

    Also starts threads if using multithreading

    See: <xref href="AstarPath.OnAwakeSettings" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: protected override void Awake()
    content.vb: Protected Overrides Sub Awake()
  overridden: Pathfinding.VersionedMonoBehaviour.Awake
  overload: Global.AstarPath.Awake*
- uid: Global.AstarPath.ConfigureReferencesInternal
  commentId: M:Global.AstarPath.ConfigureReferencesInternal
  id: ConfigureReferencesInternal
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: ConfigureReferencesInternal()
  nameWithType: AstarPath.ConfigureReferencesInternal()
  fullName: AstarPath.ConfigureReferencesInternal()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: ConfigureReferencesInternal
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1325
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: '\cond internal'
  example: []
  syntax:
    content: public void ConfigureReferencesInternal()
    content.vb: Public Sub ConfigureReferencesInternal()
  overload: Global.AstarPath.ConfigureReferencesInternal*
- uid: Global.AstarPath.FloodFill(Pathfinding.GraphNode)
  commentId: M:Global.AstarPath.FloodFill(Pathfinding.GraphNode)
  id: FloodFill(Pathfinding.GraphNode)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FloodFill(GraphNode)
  nameWithType: AstarPath.FloodFill(GraphNode)
  fullName: AstarPath.FloodFill(Pathfinding.GraphNode)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FloodFill
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1448
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Floodfills starting from the specified node.


    Deprecated: Deprecated: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes
  example: []
  syntax:
    content: >-
      [Obsolete("Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes")]

      public void FloodFill(GraphNode seed)
    parameters:
    - id: seed
      type: Pathfinding.GraphNode
    content.vb: >-
      <Obsolete("Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes")>

      Public Sub FloodFill(seed As GraphNode)
  overload: Global.AstarPath.FloodFill*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes
- uid: Global.AstarPath.FloodFill(Pathfinding.GraphNode,System.UInt32)
  commentId: M:Global.AstarPath.FloodFill(Pathfinding.GraphNode,System.UInt32)
  id: FloodFill(Pathfinding.GraphNode,System.UInt32)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FloodFill(GraphNode, uint)
  nameWithType: AstarPath.FloodFill(GraphNode, uint)
  fullName: AstarPath.FloodFill(Pathfinding.GraphNode, uint)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FloodFill
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1457
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Floodfills starting from 'seed' using the specified area.


    Deprecated: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes
  example: []
  syntax:
    content: >-
      [Obsolete("Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes")]

      public void FloodFill(GraphNode seed, uint area)
    parameters:
    - id: seed
      type: Pathfinding.GraphNode
    - id: area
      type: System.UInt32
    content.vb: >-
      <Obsolete("Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes")>

      Public Sub FloodFill(seed As GraphNode, area As UInteger)
  overload: Global.AstarPath.FloodFill*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes
  nameWithType.vb: AstarPath.FloodFill(GraphNode, UInteger)
  fullName.vb: AstarPath.FloodFill(Pathfinding.GraphNode, UInteger)
  name.vb: FloodFill(GraphNode, UInteger)
- uid: Global.AstarPath.FloodFill
  commentId: M:Global.AstarPath.FloodFill
  id: FloodFill
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: FloodFill()
  nameWithType: AstarPath.FloodFill()
  fullName: AstarPath.FloodFill()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: FloodFill
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1469
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Floodfills all graphs and updates areas for every node.

    The different colored areas that you see in the scene view when looking at graphs

    are called just 'areas', this method calculates which nodes are in what areas.

    See: Pathfinding.Node.area


    Deprecated: Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.
  example: []
  syntax:
    content: >-
      [ContextMenu("Flood Fill Graphs")]

      [Obsolete("Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.")]

      public void FloodFill()
    content.vb: >-
      <ContextMenu("Flood Fill Graphs")>

      <Obsolete("Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.")>

      Public Sub FloodFill()
  overload: Global.AstarPath.FloodFill*
  attributes:
  - type: UnityEngine.ContextMenu
    ctor: UnityEngine.ContextMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: Flood Fill Graphs
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.
- uid: Global.AstarPath.BlockUntilPathQueueBlocked
  commentId: M:Global.AstarPath.BlockUntilPathQueueBlocked
  id: BlockUntilPathQueueBlocked
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: BlockUntilPathQueueBlocked()
  nameWithType: AstarPath.BlockUntilPathQueueBlocked()
  fullName: AstarPath.BlockUntilPathQueueBlocked()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: BlockUntilPathQueueBlocked
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1507
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Blocks until all pathfinding threads are paused and blocked.

    Deprecated: Use <xref href="AstarPath.PausePathfinding" data-throw-if-not-resolved="false"></xref> instead. Make sure to call Release on the returned lock.
  example: []
  syntax:
    content: >-
      [Obsolete("Use PausePathfinding instead. Make sure to call Release on the returned lock.", true)]

      public void BlockUntilPathQueueBlocked()
    content.vb: >-
      <Obsolete("Use PausePathfinding instead. Make sure to call Release on the returned lock.", True)>

      Public Sub BlockUntilPathQueueBlocked()
  overload: Global.AstarPath.BlockUntilPathQueueBlocked*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use PausePathfinding instead. Make sure to call Release on the returned lock.
    - type: System.Boolean
      value: true
- uid: Global.AstarPath.PausePathfinding
  commentId: M:Global.AstarPath.PausePathfinding
  id: PausePathfinding
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: PausePathfinding()
  nameWithType: AstarPath.PausePathfinding()
  fullName: AstarPath.PausePathfinding()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: PausePathfinding
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1528
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Blocks until all pathfinding threads are paused and blocked.


    <pre><code class="lang-csharp">var graphLock = AstarPath.active.PausePathfinding();

    // Here we can modify the graphs safely. For example by adding a new node to a point graph

    var node = AstarPath.active.data.pointGraph.AddNode((Int3) new Vector3(3, 1, 4));


    // Allow pathfinding to resume

    graphLock.Release();</code></pre>


    Returns: A lock object. You need to call <xref href="Pathfinding.PathProcessor.GraphUpdateLock.Release" data-throw-if-not-resolved="false"></xref> on that object to allow pathfinding to resume.

    Note: In most cases this should not be called from user code. Use the <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref> method instead.


    See: <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public PathProcessor.GraphUpdateLock PausePathfinding()
    return:
      type: Pathfinding.PathProcessor.GraphUpdateLock
    content.vb: Public Function PausePathfinding() As PathProcessor.GraphUpdateLock
  overload: Global.AstarPath.PausePathfinding*
- uid: Global.AstarPath.Scan(Pathfinding.NavGraph)
  commentId: M:Global.AstarPath.Scan(Pathfinding.NavGraph)
  id: Scan(Pathfinding.NavGraph)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Scan(NavGraph)
  nameWithType: AstarPath.Scan(NavGraph)
  fullName: AstarPath.Scan(Pathfinding.NavGraph)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: Scan
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1559
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Scans a particular graph.

    Calling this method will recalculate the specified graph.

    This method is pretty slow (depending on graph type and graph complexity of course), so it is advisable to use

    smaller graph updates whenever possible.


    <pre><code class="lang-csharp">// Recalculate all graphs

    AstarPath.active.Scan();


    // Recalculate only the first grid graph

    var graphToScan = AstarPath.active.data.gridGraph;

    AstarPath.active.Scan(graphToScan);


    // Recalculate only the first and third graphs

    var graphsToScan = new [] { AstarPath.active.data.graphs[0], AstarPath.active.data.graphs[2] };

    AstarPath.active.Scan(graphsToScan);</code></pre>


    See: graph-updates (view in online documentation for working links)

    See: ScanAsync
  example: []
  syntax:
    content: public void Scan(NavGraph graphToScan)
    parameters:
    - id: graphToScan
      type: Pathfinding.NavGraph
    content.vb: Public Sub Scan(graphToScan As NavGraph)
  overload: Global.AstarPath.Scan*
- uid: Global.AstarPath.Scan(Pathfinding.NavGraph[])
  commentId: M:Global.AstarPath.Scan(Pathfinding.NavGraph[])
  id: Scan(Pathfinding.NavGraph[])
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: Scan(NavGraph[])
  nameWithType: AstarPath.Scan(NavGraph[])
  fullName: AstarPath.Scan(Pathfinding.NavGraph[])
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: Scan
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1588
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Scans all specified graphs.


    Calling this method will recalculate all specified graphs or all graphs if the graphsToScan parameter is null.

    This method is pretty slow (depending on graph type and graph complexity of course), so it is advisable to use

    smaller graph updates whenever possible.


    <pre><code class="lang-csharp">// Recalculate all graphs

    AstarPath.active.Scan();


    // Recalculate only the first grid graph

    var graphToScan = AstarPath.active.data.gridGraph;

    AstarPath.active.Scan(graphToScan);


    // Recalculate only the first and third graphs

    var graphsToScan = new [] { AstarPath.active.data.graphs[0], AstarPath.active.data.graphs[2] };

    AstarPath.active.Scan(graphsToScan);</code></pre>


    See: graph-updates (view in online documentation for working links)

    See: ScanAsync
  example: []
  syntax:
    content: public void Scan(NavGraph[] graphsToScan = null)
    parameters:
    - id: graphsToScan
      type: Pathfinding.NavGraph[]
      description: The graphs to scan. If this parameter is null then all graphs will be scanned
    content.vb: Public Sub Scan(graphsToScan As NavGraph() = Nothing)
  overload: Global.AstarPath.Scan*
  nameWithType.vb: AstarPath.Scan(NavGraph())
  fullName.vb: AstarPath.Scan(Pathfinding.NavGraph())
  name.vb: Scan(NavGraph())
- uid: Global.AstarPath.ScanAsync(Pathfinding.NavGraph)
  commentId: M:Global.AstarPath.ScanAsync(Pathfinding.NavGraph)
  id: ScanAsync(Pathfinding.NavGraph)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: ScanAsync(NavGraph)
  nameWithType: AstarPath.ScanAsync(NavGraph)
  fullName: AstarPath.ScanAsync(Pathfinding.NavGraph)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: ScanAsync
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1629
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Scans a particular graph asynchronously. This is a IEnumerable, you can loop through it to get the progress

    <pre><code class="lang-csharp">foreach (Progress progress in AstarPath.active.ScanAsync()) {
        Debug.Log("Scanning... " + progress.description + " - " + (progress.progress*100).ToString("0") + "%");
    }</code></pre>

    You can scan graphs asyncronously by yielding when you loop through the progress.

    Note that this does not guarantee a good framerate, but it will allow you

    to at least show a progress bar during scanning.

    <pre><code class="lang-csharp">IEnumerator Start () {
        foreach (Progress progress in AstarPath.active.ScanAsync()) {
            Debug.Log("Scanning... " + progress.description + " - " + (progress.progress*100).ToString("0") + "%");
            yield return null;
        }
    }</code></pre>


    See: Scan
  example: []
  syntax:
    content: public IEnumerable<Progress> ScanAsync(NavGraph graphToScan)
    parameters:
    - id: graphToScan
      type: Pathfinding.NavGraph
    return:
      type: System.Collections.Generic.IEnumerable{Pathfinding.Progress}
    content.vb: Public Function ScanAsync(graphToScan As NavGraph) As IEnumerable(Of Progress)
  overload: Global.AstarPath.ScanAsync*
- uid: Global.AstarPath.ScanAsync(Pathfinding.NavGraph[])
  commentId: M:Global.AstarPath.ScanAsync(Pathfinding.NavGraph[])
  id: ScanAsync(Pathfinding.NavGraph[])
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: ScanAsync(NavGraph[])
  nameWithType: AstarPath.ScanAsync(NavGraph[])
  fullName: AstarPath.ScanAsync(Pathfinding.NavGraph[])
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: ScanAsync
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1657
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Scans all specified graphs asynchronously. This is a IEnumerable, you can loop through it to get the progress


    <pre><code class="lang-csharp">foreach (Progress progress in AstarPath.active.ScanAsync()) {
        Debug.Log("Scanning... " + progress.description + " - " + (progress.progress*100).ToString("0") + "%");
    }</code></pre>

    You can scan graphs asyncronously by yielding when you loop through the progress.

    Note that this does not guarantee a good framerate, but it will allow you

    to at least show a progress bar during scanning.

    <pre><code class="lang-csharp">IEnumerator Start () {
        foreach (Progress progress in AstarPath.active.ScanAsync()) {
            Debug.Log("Scanning... " + progress.description + " - " + (progress.progress*100).ToString("0") + "%");
            yield return null;
        }
    }</code></pre>


    See: Scan
  example: []
  syntax:
    content: public IEnumerable<Progress> ScanAsync(NavGraph[] graphsToScan = null)
    parameters:
    - id: graphsToScan
      type: Pathfinding.NavGraph[]
      description: The graphs to scan. If this parameter is null then all graphs will be scanned
    return:
      type: System.Collections.Generic.IEnumerable{Pathfinding.Progress}
    content.vb: Public Function ScanAsync(graphsToScan As NavGraph() = Nothing) As IEnumerable(Of Progress)
  overload: Global.AstarPath.ScanAsync*
  nameWithType.vb: AstarPath.ScanAsync(NavGraph())
  fullName.vb: AstarPath.ScanAsync(Pathfinding.NavGraph())
  name.vb: ScanAsync(NavGraph())
- uid: Global.AstarPath.WaitForPath(Pathfinding.Path)
  commentId: M:Global.AstarPath.WaitForPath(Pathfinding.Path)
  id: WaitForPath(Pathfinding.Path)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: WaitForPath(Path)
  nameWithType: AstarPath.WaitForPath(Path)
  fullName: AstarPath.WaitForPath(Pathfinding.Path)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: WaitForPath
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1820
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Wait for the specified path to be calculated.

    Normally it takes a few frames for a path to get calculated and returned.


    Deprecated: This method has been renamed to <xref href="AstarPath.BlockUntilCalculated(Pathfinding.Path)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Obsolete("This method has been renamed to BlockUntilCalculated")]

      public static void WaitForPath(Path path)
    parameters:
    - id: path
      type: Pathfinding.Path
    content.vb: >-
      <Obsolete("This method has been renamed to BlockUntilCalculated")>

      Public Shared Sub WaitForPath(path As Path)
  overload: Global.AstarPath.WaitForPath*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method has been renamed to BlockUntilCalculated
- uid: Global.AstarPath.BlockUntilCalculated(Pathfinding.Path)
  commentId: M:Global.AstarPath.BlockUntilCalculated(Pathfinding.Path)
  id: BlockUntilCalculated(Pathfinding.Path)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: BlockUntilCalculated(Path)
  nameWithType: AstarPath.BlockUntilCalculated(Path)
  fullName: AstarPath.BlockUntilCalculated(Pathfinding.Path)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: BlockUntilCalculated
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1853
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Blocks until the path has been calculated.


    Normally it takes a few frames for a path to be calculated and returned.

    This function will ensure that the path will be calculated when this function returns

    and that the callback for that path has been called.


    If requesting a lot of paths in one go and waiting for the last one to complete,

    it will calculate most of the paths in the queue (only most if using multithreading, all if not using multithreading).


    Use this function only if you really need to.

    There is a point to spreading path calculations out over several frames.

    It smoothes out the framerate and makes sure requesting a large

    number of paths at the same time does not cause lag.


    Note: Graph updates and other callbacks might get called during the execution of this function.


    When the pathfinder is shutting down. I.e in OnDestroy, this function will not do anything.


    \throws Exception if pathfinding is not initialized properly for this scene (most likely no AstarPath object exists)

    or if the path has not been started yet.

    Also throws an exception if critical errors occur such as when the pathfinding threads have crashed (which should not happen in normal cases).

    This prevents an infinite loop while waiting for the path.


    See: Pathfinding.Path.WaitForPath

    See: Pathfinding.Path.BlockUntilCalculated
  example: []
  syntax:
    content: public static void BlockUntilCalculated(Path path)
    parameters:
    - id: path
      type: Pathfinding.Path
      description: The path to wait for. The path must be started, otherwise an exception will be thrown.
    content.vb: Public Shared Sub BlockUntilCalculated(path As Path)
  overload: Global.AstarPath.BlockUntilCalculated*
- uid: Global.AstarPath.RegisterSafeUpdate(System.Action)
  commentId: M:Global.AstarPath.RegisterSafeUpdate(System.Action)
  id: RegisterSafeUpdate(System.Action)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: RegisterSafeUpdate(Action)
  nameWithType: AstarPath.RegisterSafeUpdate(Action)
  fullName: AstarPath.RegisterSafeUpdate(System.Action)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: RegisterSafeUpdate
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1917
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Will send a callback when it is safe to update nodes. This is defined as between the path searches.

    This callback will only be sent once and is nulled directly after the callback has been sent.

    When using more threads than one, calling this often might decrease pathfinding performance due to a lot of idling in the threads.

    Not performance as in it will use much CPU power,

    but performance as in the number of paths per second will probably go down (though your framerate might actually increase a tiny bit)


    You should only call this function from the main unity thread (i.e normal game code).


    Version: Since version 4.0 this is equivalent to AddWorkItem(new AstarWorkItem(callback)). Previously the

    callbacks added using this method would not be ordered with respect to other work items, so they could be

    executed before other work items or after them.


    Deprecated: Use <xref href="AstarPath.AddWorkItem(System.Action)" data-throw-if-not-resolved="false"></xref> instead. Note the slight change in behavior (mentioned above).
  example: []
  syntax:
    content: >-
      [Obsolete("Use AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned in the documentation).")]

      public static void RegisterSafeUpdate(Action callback)
    parameters:
    - id: callback
      type: System.Action
    content.vb: >-
      <Obsolete("Use AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned in the documentation).")>

      Public Shared Sub RegisterSafeUpdate(callback As Action)
  overload: Global.AstarPath.RegisterSafeUpdate*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned in the documentation).
- uid: Global.AstarPath.StartPath(Pathfinding.Path,System.Boolean)
  commentId: M:Global.AstarPath.StartPath(Pathfinding.Path,System.Boolean)
  id: StartPath(Pathfinding.Path,System.Boolean)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: StartPath(Path, bool)
  nameWithType: AstarPath.StartPath(Path, bool)
  fullName: AstarPath.StartPath(Pathfinding.Path, bool)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: StartPath
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1931
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Adds the path to a queue so that it will be calculated as soon as possible.

    The callback specified when constructing the path will be called when the path has been calculated.

    Usually you should use the Seeker component instead of calling this function directly.
  example: []
  syntax:
    content: public static void StartPath(Path path, bool pushToFront = false)
    parameters:
    - id: path
      type: Pathfinding.Path
      description: The path that should be enqueued.
    - id: pushToFront
      type: System.Boolean
      description: >-
        If true, the path will be pushed to the front of the queue, bypassing all waiting paths and making it the next path to be calculated.
            This can be useful if you have a path which you want to prioritize over all others. Be careful to not overuse it though.
            If too many paths are put in the front of the queue often, this can lead to normal paths having to wait a very long time before being calculated.
    content.vb: Public Shared Sub StartPath(path As Path, pushToFront As Boolean = False)
  overload: Global.AstarPath.StartPath*
  nameWithType.vb: AstarPath.StartPath(Path, Boolean)
  fullName.vb: AstarPath.StartPath(Pathfinding.Path, Boolean)
  name.vb: StartPath(Path, Boolean)
- uid: Global.AstarPath.GetNearest(UnityEngine.Vector3)
  commentId: M:Global.AstarPath.GetNearest(UnityEngine.Vector3)
  id: GetNearest(UnityEngine.Vector3)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetNearest(Vector3)
  nameWithType: AstarPath.GetNearest(Vector3)
  fullName: AstarPath.GetNearest(UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: GetNearest
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 1996
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns the nearest node to a position.

    This method will search through all graphs and query them for the closest node to this position, and then it will return the closest one of those.


    Equivalent to GetNearest(position, NNConstraint.None).


    <pre><code class="lang-csharp">// Find the closest node to this GameObject's position

    GraphNode node = AstarPath.active.GetNearest(transform.position).node;


    if (node.Walkable) {
        // Yay, the node is walkable, we can place a tower here or something
    }</code></pre>


    See: Pathfinding.NNConstraint
  example: []
  syntax:
    content: public NNInfo GetNearest(Vector3 position)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    return:
      type: Pathfinding.NNInfo
    content.vb: Public Function GetNearest(position As Vector3) As NNInfo
  overload: Global.AstarPath.GetNearest*
- uid: Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint)
  commentId: M:Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint)
  id: GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetNearest(Vector3, NNConstraint)
  nameWithType: AstarPath.GetNearest(Vector3, NNConstraint)
  fullName: AstarPath.GetNearest(UnityEngine.Vector3, Pathfinding.NNConstraint)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: GetNearest
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 2028
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  syntax:
    content: public NNInfo GetNearest(Vector3 position, NNConstraint constraint)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    - id: constraint
      type: Pathfinding.NNConstraint
    return:
      type: Pathfinding.NNInfo
    content.vb: Public Function GetNearest(position As Vector3, constraint As NNConstraint) As NNInfo
  overload: Global.AstarPath.GetNearest*
- uid: Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint,Pathfinding.GraphNode)
  commentId: M:Global.AstarPath.GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint,Pathfinding.GraphNode)
  id: GetNearest(UnityEngine.Vector3,Pathfinding.NNConstraint,Pathfinding.GraphNode)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetNearest(Vector3, NNConstraint, GraphNode)
  nameWithType: AstarPath.GetNearest(Vector3, NNConstraint, GraphNode)
  fullName: AstarPath.GetNearest(UnityEngine.Vector3, Pathfinding.NNConstraint, Pathfinding.GraphNode)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: GetNearest
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 2038
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns the nearest node to a position using the specified NNConstraint.

    Searches through all graphs for their nearest nodes to the specified position and picks the closest one.

    The NNConstraint can be used to specify constraints on which nodes can be chosen such as only picking walkable nodes.

    See: Pathfinding.NNConstraint
  example: []
  syntax:
    content: public NNInfo GetNearest(Vector3 position, NNConstraint constraint, GraphNode hint)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    - id: constraint
      type: Pathfinding.NNConstraint
    - id: hint
      type: Pathfinding.GraphNode
    return:
      type: Pathfinding.NNInfo
    content.vb: Public Function GetNearest(position As Vector3, constraint As NNConstraint, hint As GraphNode) As NNInfo
  overload: Global.AstarPath.GetNearest*
- uid: Global.AstarPath.GetNearest(UnityEngine.Ray)
  commentId: M:Global.AstarPath.GetNearest(UnityEngine.Ray)
  id: GetNearest(UnityEngine.Ray)
  parent: Global.AstarPath
  langs:
  - csharp
  - vb
  name: GetNearest(Ray)
  nameWithType: AstarPath.GetNearest(Ray)
  fullName: AstarPath.GetNearest(UnityEngine.Ray)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    id: GetNearest
    path: ../Assets/Imported Assets/AstarPathfindingProject/Core/AstarPath.cs
    startLine: 2126
  assemblies:
  - AstarPathfindingProject
  namespace: Global
  summary: >-
    Returns the node closest to the ray (slow).

    Warning: This function is brute-force and very slow, use with caution
  example: []
  syntax:
    content: public GraphNode GetNearest(Ray ray)
    parameters:
    - id: ray
      type: UnityEngine.Ray
    return:
      type: Pathfinding.GraphNode
    content.vb: Public Function GetNearest(ray As Ray) As GraphNode
  overload: Global.AstarPath.GetNearest*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Pathfinding.VersionedMonoBehaviour
  commentId: T:Pathfinding.VersionedMonoBehaviour
  parent: Pathfinding
  href: Pathfinding.VersionedMonoBehaviour.html
  name: VersionedMonoBehaviour
  nameWithType: VersionedMonoBehaviour
  fullName: Pathfinding.VersionedMonoBehaviour
- uid: UnityEngine.ISerializationCallbackReceiver
  commentId: T:UnityEngine.ISerializationCallbackReceiver
  parent: UnityEngine
  isExternal: true
  name: ISerializationCallbackReceiver
  nameWithType: ISerializationCallbackReceiver
  fullName: UnityEngine.ISerializationCallbackReceiver
- uid: UnityEngine.MonoBehaviour.IsInvoking
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: IsInvoking()
  nameWithType: MonoBehaviour.IsInvoking()
  fullName: UnityEngine.MonoBehaviour.IsInvoking()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking
    name: IsInvoking
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking
    name: IsInvoking
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: CancelInvoke()
  nameWithType: MonoBehaviour.CancelInvoke()
  fullName: UnityEngine.MonoBehaviour.CancelInvoke()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke
    name: CancelInvoke
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke
    name: CancelInvoke
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Invoke(string, float)
  nameWithType: MonoBehaviour.Invoke(string, float)
  fullName: UnityEngine.MonoBehaviour.Invoke(string, float)
  nameWithType.vb: MonoBehaviour.Invoke(String, Single)
  fullName.vb: UnityEngine.MonoBehaviour.Invoke(String, Single)
  name.vb: Invoke(String, Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    name: Invoke
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    name: Invoke
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: InvokeRepeating(string, float, float)
  nameWithType: MonoBehaviour.InvokeRepeating(string, float, float)
  fullName: UnityEngine.MonoBehaviour.InvokeRepeating(string, float, float)
  nameWithType.vb: MonoBehaviour.InvokeRepeating(String, Single, Single)
  fullName.vb: UnityEngine.MonoBehaviour.InvokeRepeating(String, Single, Single)
  name.vb: InvokeRepeating(String, Single, Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    name: InvokeRepeating
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    name: InvokeRepeating
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CancelInvoke(string)
  nameWithType: MonoBehaviour.CancelInvoke(string)
  fullName: UnityEngine.MonoBehaviour.CancelInvoke(string)
  nameWithType.vb: MonoBehaviour.CancelInvoke(String)
  fullName.vb: UnityEngine.MonoBehaviour.CancelInvoke(String)
  name.vb: CancelInvoke(String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    name: CancelInvoke
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    name: CancelInvoke
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsInvoking(string)
  nameWithType: MonoBehaviour.IsInvoking(string)
  fullName: UnityEngine.MonoBehaviour.IsInvoking(string)
  nameWithType.vb: MonoBehaviour.IsInvoking(String)
  fullName.vb: UnityEngine.MonoBehaviour.IsInvoking(String)
  name.vb: IsInvoking(String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
    name: IsInvoking
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
    name: IsInvoking
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: StartCoroutine(string)
  nameWithType: MonoBehaviour.StartCoroutine(string)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(string)
  nameWithType.vb: MonoBehaviour.StartCoroutine(String)
  fullName.vb: UnityEngine.MonoBehaviour.StartCoroutine(String)
  name.vb: StartCoroutine(String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: StartCoroutine(string, object)
  nameWithType: MonoBehaviour.StartCoroutine(string, object)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(string, object)
  nameWithType.vb: MonoBehaviour.StartCoroutine(String, Object)
  fullName.vb: UnityEngine.MonoBehaviour.StartCoroutine(String, Object)
  name.vb: StartCoroutine(String, Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: StartCoroutine(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutine(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: StartCoroutine_Auto(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutine_Auto(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    name: StartCoroutine_Auto
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    name: StartCoroutine_Auto
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: StopCoroutine(IEnumerator)
  nameWithType: MonoBehaviour.StopCoroutine(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutine(Coroutine)
  nameWithType: MonoBehaviour.StopCoroutine(Coroutine)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    isExternal: true
  - name: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: StopCoroutine(string)
  nameWithType: MonoBehaviour.StopCoroutine(string)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(string)
  nameWithType.vb: MonoBehaviour.StopCoroutine(String)
  fullName.vb: UnityEngine.MonoBehaviour.StopCoroutine(String)
  name.vb: StopCoroutine(String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.MonoBehaviour.StopAllCoroutines
  commentId: M:UnityEngine.MonoBehaviour.StopAllCoroutines
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopAllCoroutines()
  nameWithType: MonoBehaviour.StopAllCoroutines()
  fullName: UnityEngine.MonoBehaviour.StopAllCoroutines()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopAllCoroutines
    name: StopAllCoroutines
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopAllCoroutines
    name: StopAllCoroutines
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.MonoBehaviour.print(System.Object)
  commentId: M:UnityEngine.MonoBehaviour.print(System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: print(object)
  nameWithType: MonoBehaviour.print(object)
  fullName: UnityEngine.MonoBehaviour.print(object)
  nameWithType.vb: MonoBehaviour.print(Object)
  fullName.vb: UnityEngine.MonoBehaviour.print(Object)
  name.vb: print(Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.print(System.Object)
    name: print
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.print(System.Object)
    name: print
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.MonoBehaviour.destroyCancellationToken
  commentId: P:UnityEngine.MonoBehaviour.destroyCancellationToken
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: destroyCancellationToken
  nameWithType: MonoBehaviour.destroyCancellationToken
  fullName: UnityEngine.MonoBehaviour.destroyCancellationToken
- uid: UnityEngine.MonoBehaviour.useGUILayout
  commentId: P:UnityEngine.MonoBehaviour.useGUILayout
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: useGUILayout
  nameWithType: MonoBehaviour.useGUILayout
  fullName: UnityEngine.MonoBehaviour.useGUILayout
- uid: UnityEngine.MonoBehaviour.runInEditMode
  commentId: P:UnityEngine.MonoBehaviour.runInEditMode
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: runInEditMode
  nameWithType: MonoBehaviour.runInEditMode
  fullName: UnityEngine.MonoBehaviour.runInEditMode
- uid: UnityEngine.Behaviour.enabled
  commentId: P:UnityEngine.Behaviour.enabled
  parent: UnityEngine.Behaviour
  isExternal: true
  name: enabled
  nameWithType: Behaviour.enabled
  fullName: UnityEngine.Behaviour.enabled
- uid: UnityEngine.Behaviour.isActiveAndEnabled
  commentId: P:UnityEngine.Behaviour.isActiveAndEnabled
  parent: UnityEngine.Behaviour
  isExternal: true
  name: isActiveAndEnabled
  nameWithType: Behaviour.isActiveAndEnabled
  fullName: UnityEngine.Behaviour.isActiveAndEnabled
- uid: UnityEngine.Component.GetComponent(System.Type)
  commentId: M:UnityEngine.Component.GetComponent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponent(Type)
  nameWithType: Component.GetComponent(Type)
  fullName: UnityEngine.Component.GetComponent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent(System.Type)
    name: GetComponent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent(System.Type)
    name: GetComponent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponent``1
  commentId: M:UnityEngine.Component.GetComponent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponent<T>()
  nameWithType: Component.GetComponent<T>()
  fullName: UnityEngine.Component.GetComponent<T>()
  nameWithType.vb: Component.GetComponent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponent(Of T)()
  name.vb: GetComponent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent``1
    name: GetComponent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent``1
    name: GetComponent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  commentId: M:UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: TryGetComponent(Type, out Component)
  nameWithType: Component.TryGetComponent(Type, out Component)
  fullName: UnityEngine.Component.TryGetComponent(System.Type, out UnityEngine.Component)
  nameWithType.vb: Component.TryGetComponent(Type, Component)
  fullName.vb: UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component)
  name.vb: TryGetComponent(Type, Component)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    name: TryGetComponent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: UnityEngine.Component
    name: Component
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    name: TryGetComponent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.Component
    name: Component
    isExternal: true
  - name: )
- uid: UnityEngine.Component.TryGetComponent``1({T}@)
  commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  parent: UnityEngine.Component
  definition: UnityEngine.Component.TryGetComponent``1(``0@)
  name: TryGetComponent<T>(out T)
  nameWithType: Component.TryGetComponent<T>(out T)
  fullName: UnityEngine.Component.TryGetComponent<T>(out T)
  nameWithType.vb: Component.TryGetComponent(Of T)(T)
  fullName.vb: UnityEngine.Component.TryGetComponent(Of T)(T)
  name.vb: TryGetComponent(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Component.GetComponent(System.String)
  commentId: M:UnityEngine.Component.GetComponent(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetComponent(string)
  nameWithType: Component.GetComponent(string)
  fullName: UnityEngine.Component.GetComponent(string)
  nameWithType.vb: Component.GetComponent(String)
  fullName.vb: UnityEngine.Component.GetComponent(String)
  name.vb: GetComponent(String)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent(System.String)
    name: GetComponent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent(System.String)
    name: GetComponent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentInChildren(Type, bool)
  nameWithType: Component.GetComponentInChildren(Type, bool)
  fullName: UnityEngine.Component.GetComponentInChildren(System.Type, bool)
  nameWithType.vb: Component.GetComponentInChildren(Type, Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInChildren(System.Type, Boolean)
  name.vb: GetComponentInChildren(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentInChildren(System.Type)
  commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentInChildren(Type)
  nameWithType: Component.GetComponentInChildren(Type)
  fullName: UnityEngine.Component.GetComponentInChildren(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentInChildren<T>(bool)
  nameWithType: Component.GetComponentInChildren<T>(bool)
  fullName: UnityEngine.Component.GetComponentInChildren<T>(bool)
  nameWithType.vb: Component.GetComponentInChildren(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInChildren(Of T)(Boolean)
  name.vb: GetComponentInChildren(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    name: GetComponentInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentInChildren``1
  commentId: M:UnityEngine.Component.GetComponentInChildren``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren<T>()
  nameWithType: Component.GetComponentInChildren<T>()
  fullName: UnityEngine.Component.GetComponentInChildren<T>()
  nameWithType.vb: Component.GetComponentInChildren(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentInChildren(Of T)()
  name.vb: GetComponentInChildren(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren``1
    name: GetComponentInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren``1
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentsInChildren(Type, bool)
  nameWithType: Component.GetComponentsInChildren(Type, bool)
  fullName: UnityEngine.Component.GetComponentsInChildren(System.Type, bool)
  nameWithType.vb: Component.GetComponentsInChildren(Type, Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(System.Type, Boolean)
  name.vb: GetComponentsInChildren(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
  commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentsInChildren(Type)
  nameWithType: Component.GetComponentsInChildren(Type)
  fullName: UnityEngine.Component.GetComponentsInChildren(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInChildren<T>(bool)
  nameWithType: Component.GetComponentsInChildren<T>(bool)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(bool)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(Boolean)
  name.vb: GetComponentsInChildren(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInChildren<T>(bool, List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(bool, List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren<T>()
  nameWithType: Component.GetComponentsInChildren<T>()
  fullName: UnityEngine.Component.GetComponentsInChildren<T>()
  nameWithType.vb: Component.GetComponentsInChildren(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)()
  name.vb: GetComponentsInChildren(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetComponentsInChildren<T>(List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentInParent(Type, bool)
  nameWithType: Component.GetComponentInParent(Type, bool)
  fullName: UnityEngine.Component.GetComponentInParent(System.Type, bool)
  nameWithType.vb: Component.GetComponentInParent(Type, Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInParent(System.Type, Boolean)
  name.vb: GetComponentInParent(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentInParent(System.Type)
  commentId: M:UnityEngine.Component.GetComponentInParent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentInParent(Type)
  nameWithType: Component.GetComponentInParent(Type)
  fullName: UnityEngine.Component.GetComponentInParent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentInParent<T>(bool)
  nameWithType: Component.GetComponentInParent<T>(bool)
  fullName: UnityEngine.Component.GetComponentInParent<T>(bool)
  nameWithType.vb: Component.GetComponentInParent(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInParent(Of T)(Boolean)
  name.vb: GetComponentInParent(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    name: GetComponentInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentInParent``1
  commentId: M:UnityEngine.Component.GetComponentInParent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInParent<T>()
  nameWithType: Component.GetComponentInParent<T>()
  fullName: UnityEngine.Component.GetComponentInParent<T>()
  nameWithType.vb: Component.GetComponentInParent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentInParent(Of T)()
  name.vb: GetComponentInParent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent``1
    name: GetComponentInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent``1
    name: GetComponentInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentsInParent(Type, bool)
  nameWithType: Component.GetComponentsInParent(Type, bool)
  fullName: UnityEngine.Component.GetComponentsInParent(System.Type, bool)
  nameWithType.vb: Component.GetComponentsInParent(Type, Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInParent(System.Type, Boolean)
  name.vb: GetComponentsInParent(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent(System.Type)
  commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentsInParent(Type)
  nameWithType: Component.GetComponentsInParent(Type)
  fullName: UnityEngine.Component.GetComponentsInParent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInParent<T>(bool)
  nameWithType: Component.GetComponentsInParent<T>(bool)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(bool)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(Boolean)
  name.vb: GetComponentsInParent(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    name: GetComponentsInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInParent<T>(bool, List<T>)
  nameWithType: Component.GetComponentsInParent<T>(bool, List<T>)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInParent(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent``1
  commentId: M:UnityEngine.Component.GetComponentsInParent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent<T>()
  nameWithType: Component.GetComponentsInParent<T>()
  fullName: UnityEngine.Component.GetComponentsInParent<T>()
  nameWithType.vb: Component.GetComponentsInParent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)()
  name.vb: GetComponentsInParent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1
    name: GetComponentsInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.GetComponents(System.Type)
  commentId: M:UnityEngine.Component.GetComponents(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponents(Type)
  nameWithType: Component.GetComponents(Type)
  fullName: UnityEngine.Component.GetComponents(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents(System.Type)
    name: GetComponents
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents(System.Type)
    name: GetComponents
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  commentId: M:UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponents(Type, List<Component>)
  nameWithType: Component.GetComponents(Type, List<Component>)
  fullName: UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>)
  nameWithType.vb: Component.GetComponents(Type, List(Of Component))
  fullName.vb: UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List(Of UnityEngine.Component))
  name.vb: GetComponents(Type, List(Of Component))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    name: GetComponents
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Component
    name: Component
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    name: GetComponents
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Component
    name: Component
    isExternal: true
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetComponents<T>(List<T>)
  nameWithType: Component.GetComponents<T>(List<T>)
  fullName: UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponents(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponents(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponents(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponents``1
  commentId: M:UnityEngine.Component.GetComponents``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponents<T>()
  nameWithType: Component.GetComponents<T>()
  fullName: UnityEngine.Component.GetComponents<T>()
  nameWithType.vb: Component.GetComponents(Of T)()
  fullName.vb: UnityEngine.Component.GetComponents(Of T)()
  name.vb: GetComponents(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1
    name: GetComponents
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1
    name: GetComponents
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.CompareTag(System.String)
  commentId: M:UnityEngine.Component.CompareTag(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CompareTag(string)
  nameWithType: Component.CompareTag(string)
  fullName: UnityEngine.Component.CompareTag(string)
  nameWithType.vb: Component.CompareTag(String)
  fullName.vb: UnityEngine.Component.CompareTag(String)
  name.vb: CompareTag(String)
  spec.csharp:
  - uid: UnityEngine.Component.CompareTag(System.String)
    name: CompareTag
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.CompareTag(System.String)
    name: CompareTag
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessageUpwards(string, object, SendMessageOptions)
  nameWithType: Component.SendMessageUpwards(string, object, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessageUpwards(string, object, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.SendMessageUpwards(String, Object, SendMessageOptions)
  fullName.vb: UnityEngine.Component.SendMessageUpwards(String, Object, UnityEngine.SendMessageOptions)
  name.vb: SendMessageUpwards(String, Object, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessageUpwards(string, object)
  nameWithType: Component.SendMessageUpwards(string, object)
  fullName: UnityEngine.Component.SendMessageUpwards(string, object)
  nameWithType.vb: Component.SendMessageUpwards(String, Object)
  fullName.vb: UnityEngine.Component.SendMessageUpwards(String, Object)
  name.vb: SendMessageUpwards(String, Object)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessageUpwards(string)
  nameWithType: Component.SendMessageUpwards(string)
  fullName: UnityEngine.Component.SendMessageUpwards(string)
  nameWithType.vb: Component.SendMessageUpwards(String)
  fullName.vb: UnityEngine.Component.SendMessageUpwards(String)
  name.vb: SendMessageUpwards(String)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessageUpwards(string, SendMessageOptions)
  nameWithType: Component.SendMessageUpwards(string, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessageUpwards(string, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.SendMessageUpwards(String, SendMessageOptions)
  fullName.vb: UnityEngine.Component.SendMessageUpwards(String, UnityEngine.SendMessageOptions)
  name.vb: SendMessageUpwards(String, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.SendMessage(System.String,System.Object)
  commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessage(string, object)
  nameWithType: Component.SendMessage(string, object)
  fullName: UnityEngine.Component.SendMessage(string, object)
  nameWithType.vb: Component.SendMessage(String, Object)
  fullName.vb: UnityEngine.Component.SendMessage(String, Object)
  name.vb: SendMessage(String, Object)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Component.SendMessage(System.String)
  commentId: M:UnityEngine.Component.SendMessage(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessage(string)
  nameWithType: Component.SendMessage(string)
  fullName: UnityEngine.Component.SendMessage(string)
  nameWithType.vb: Component.SendMessage(String)
  fullName.vb: UnityEngine.Component.SendMessage(String)
  name.vb: SendMessage(String)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessage(string, object, SendMessageOptions)
  nameWithType: Component.SendMessage(string, object, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessage(string, object, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.SendMessage(String, Object, SendMessageOptions)
  fullName.vb: UnityEngine.Component.SendMessage(String, Object, UnityEngine.SendMessageOptions)
  name.vb: SendMessage(String, Object, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessage(string, SendMessageOptions)
  nameWithType: Component.SendMessage(string, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessage(string, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.SendMessage(String, SendMessageOptions)
  fullName.vb: UnityEngine.Component.SendMessage(String, UnityEngine.SendMessageOptions)
  name.vb: SendMessage(String, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BroadcastMessage(string, object, SendMessageOptions)
  nameWithType: Component.BroadcastMessage(string, object, SendMessageOptions)
  fullName: UnityEngine.Component.BroadcastMessage(string, object, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.BroadcastMessage(String, Object, SendMessageOptions)
  fullName.vb: UnityEngine.Component.BroadcastMessage(String, Object, UnityEngine.SendMessageOptions)
  name.vb: BroadcastMessage(String, Object, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BroadcastMessage(string, object)
  nameWithType: Component.BroadcastMessage(string, object)
  fullName: UnityEngine.Component.BroadcastMessage(string, object)
  nameWithType.vb: Component.BroadcastMessage(String, Object)
  fullName.vb: UnityEngine.Component.BroadcastMessage(String, Object)
  name.vb: BroadcastMessage(String, Object)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Component.BroadcastMessage(System.String)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BroadcastMessage(string)
  nameWithType: Component.BroadcastMessage(string)
  fullName: UnityEngine.Component.BroadcastMessage(string)
  nameWithType.vb: Component.BroadcastMessage(String)
  fullName.vb: UnityEngine.Component.BroadcastMessage(String)
  name.vb: BroadcastMessage(String)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BroadcastMessage(string, SendMessageOptions)
  nameWithType: Component.BroadcastMessage(string, SendMessageOptions)
  fullName: UnityEngine.Component.BroadcastMessage(string, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.BroadcastMessage(String, SendMessageOptions)
  fullName.vb: UnityEngine.Component.BroadcastMessage(String, UnityEngine.SendMessageOptions)
  name.vb: BroadcastMessage(String, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.transform
  commentId: P:UnityEngine.Component.transform
  parent: UnityEngine.Component
  isExternal: true
  name: transform
  nameWithType: Component.transform
  fullName: UnityEngine.Component.transform
- uid: UnityEngine.Component.gameObject
  commentId: P:UnityEngine.Component.gameObject
  parent: UnityEngine.Component
  isExternal: true
  name: gameObject
  nameWithType: Component.gameObject
  fullName: UnityEngine.Component.gameObject
- uid: UnityEngine.Component.tag
  commentId: P:UnityEngine.Component.tag
  parent: UnityEngine.Component
  isExternal: true
  name: tag
  nameWithType: Component.tag
  fullName: UnityEngine.Component.tag
- uid: UnityEngine.Object.GetInstanceID
  commentId: M:UnityEngine.Object.GetInstanceID
  parent: UnityEngine.Object
  isExternal: true
  name: GetInstanceID()
  nameWithType: Object.GetInstanceID()
  fullName: UnityEngine.Object.GetInstanceID()
  spec.csharp:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Equals(object)
  nameWithType: Object.Equals(object)
  fullName: UnityEngine.Object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: UnityEngine.Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object)
  nameWithType: Object.Instantiate(Object)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform)
  nameWithType: Object.Instantiate(Object, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate(Object, Transform, bool)
  nameWithType: Object.Instantiate(Object, Transform, bool)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Object, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Object, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T})
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0)
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Destroy(Object, float)
  nameWithType: Object.Destroy(Object, float)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object, float)
  nameWithType.vb: Object.Destroy(Object, Single)
  fullName.vb: UnityEngine.Object.Destroy(UnityEngine.Object, Single)
  name.vb: Destroy(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object)
  nameWithType: Object.Destroy(Object)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DestroyImmediate(Object, bool)
  nameWithType: Object.DestroyImmediate(Object, bool)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, bool)
  nameWithType.vb: Object.DestroyImmediate(Object, Boolean)
  fullName.vb: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, Boolean)
  name.vb: DestroyImmediate(Object, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object)
  nameWithType: Object.DestroyImmediate(Object)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type)
  nameWithType: Object.FindObjectsOfType(Type)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type, bool)
  nameWithType: Object.FindObjectsOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectsOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(System.Type, Boolean)
  name.vb: FindObjectsOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DontDestroyOnLoad(Object)
  nameWithType: Object.DontDestroyOnLoad(Object)
  fullName: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DestroyObject(Object, float)
  nameWithType: Object.DestroyObject(Object, float)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object, float)
  nameWithType.vb: Object.DestroyObject(Object, Single)
  fullName.vb: UnityEngine.Object.DestroyObject(UnityEngine.Object, Single)
  name.vb: DestroyObject(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object)
  nameWithType: Object.DestroyObject(Object)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindSceneObjectsOfType(Type)
  nameWithType: Object.FindSceneObjectsOfType(Type)
  fullName: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeIncludingAssets(Type)
  nameWithType: Object.FindObjectsOfTypeIncludingAssets(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1
  commentId: M:UnityEngine.Object.FindObjectsOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>()
  nameWithType: Object.FindObjectsOfType<T>()
  fullName: UnityEngine.Object.FindObjectsOfType<T>()
  nameWithType.vb: Object.FindObjectsOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)()
  name.vb: FindObjectsOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectsOfType<T>(bool)
  nameWithType: Object.FindObjectsOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectsOfType<T>(bool)
  nameWithType.vb: Object.FindObjectsOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)(Boolean)
  name.vb: FindObjectsOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1
  commentId: M:UnityEngine.Object.FindObjectOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>()
  nameWithType: Object.FindObjectOfType<T>()
  fullName: UnityEngine.Object.FindObjectOfType<T>()
  nameWithType.vb: Object.FindObjectOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)()
  name.vb: FindObjectOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectOfType<T>(bool)
  nameWithType: Object.FindObjectOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectOfType<T>(bool)
  nameWithType.vb: Object.FindObjectOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)(Boolean)
  name.vb: FindObjectOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>()
  nameWithType: Object.FindFirstObjectByType<T>()
  fullName: UnityEngine.Object.FindFirstObjectByType<T>()
  nameWithType.vb: Object.FindFirstObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)()
  name.vb: FindFirstObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>()
  nameWithType: Object.FindAnyObjectByType<T>()
  fullName: UnityEngine.Object.FindAnyObjectByType<T>()
  nameWithType.vb: Object.FindAnyObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)()
  name.vb: FindAnyObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindFirstObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindFirstObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindAnyObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindAnyObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeAll(Type)
  nameWithType: Object.FindObjectsOfTypeAll(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type)
  nameWithType: Object.FindObjectOfType(Type)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type)
  nameWithType: Object.FindFirstObjectByType(Type)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type)
  nameWithType: Object.FindAnyObjectByType(Type)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type, bool)
  nameWithType: Object.FindObjectOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(System.Type, Boolean)
  name.vb: FindObjectOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.ToString
  commentId: M:UnityEngine.Object.ToString
  parent: UnityEngine.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: UnityEngine.Object.ToString()
  spec.csharp:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  parent: UnityEngine.Object
  isExternal: true
  name: name
  nameWithType: Object.name
  fullName: UnityEngine.Object.name
- uid: UnityEngine.Object.hideFlags
  commentId: P:UnityEngine.Object.hideFlags
  parent: UnityEngine.Object
  isExternal: true
  name: hideFlags
  nameWithType: Object.hideFlags
  fullName: UnityEngine.Object.hideFlags
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Pathfinding
  commentId: N:Pathfinding
  href: Pathfinding.html
  name: Pathfinding
  nameWithType: Pathfinding
  fullName: Pathfinding
- uid: UnityEngine.Component.TryGetComponent``1(``0@)
  commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  isExternal: true
  name: TryGetComponent<T>(out T)
  nameWithType: Component.TryGetComponent<T>(out T)
  fullName: UnityEngine.Component.TryGetComponent<T>(out T)
  nameWithType.vb: Component.TryGetComponent(Of T)(T)
  fullName.vb: UnityEngine.Component.TryGetComponent(Of T)(T)
  name.vb: TryGetComponent(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInChildren<T>(bool, List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(bool, List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetComponentsInChildren<T>(List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInParent<T>(bool, List<T>)
  nameWithType: Component.GetComponentsInParent<T>(bool, List<T>)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInParent(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetComponents<T>(List<T>)
  nameWithType: Component.GetComponents<T>(List<T>)
  fullName: UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponents(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponents(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponents(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0)
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  isExternal: true
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.version
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Global.AstarPath.AstarDistribution
  commentId: T:Global.AstarPath.AstarDistribution
  href: AstarPath.html
  name: AstarPath.AstarDistribution
  nameWithType: AstarPath.AstarDistribution
  fullName: AstarPath.AstarDistribution
  spec.csharp:
  - uid: Global.AstarPath
    name: AstarPath
    href: AstarPath.html
  - name: .
  - uid: Global.AstarPath.AstarDistribution
    name: AstarDistribution
    href: AstarPath.AstarDistribution.html
  spec.vb:
  - uid: Global.AstarPath
    name: AstarPath
    href: AstarPath.html
  - name: .
  - uid: Global.AstarPath.AstarDistribution
    name: AstarDistribution
    href: AstarPath.AstarDistribution.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.AstarPath.graphTypes*
  commentId: Overload:Global.AstarPath.graphTypes
  href: Global.AstarPath.html#AstarPath.graphTypes
  name: graphTypes
  nameWithType: AstarPath.graphTypes
  fullName: AstarPath.graphTypes
- uid: System.Type[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
- uid: Pathfinding.AstarData
  commentId: T:Pathfinding.AstarData
  parent: Pathfinding
  href: Pathfinding.AstarData.html
  name: AstarData
  nameWithType: AstarData
  fullName: Pathfinding.AstarData
- uid: Global.AstarPath.astarData*
  commentId: Overload:Global.AstarPath.astarData
  href: Global.AstarPath.html#AstarPath.astarData
  name: astarData
  nameWithType: AstarPath.astarData
  fullName: AstarPath.astarData
- uid: Global.AstarPath
  commentId: T:Global.AstarPath
  href: AstarPath.html
  name: AstarPath
  nameWithType: AstarPath
  fullName: AstarPath
- uid: Global.AstarPath.graphs*
  commentId: Overload:Global.AstarPath.graphs
  href: Global.AstarPath.html#AstarPath.graphs
  name: graphs
  nameWithType: AstarPath.graphs
  fullName: AstarPath.graphs
- uid: Pathfinding.NavGraph[]
  isExternal: true
  href: Pathfinding.NavGraph.html
  name: NavGraph[]
  nameWithType: NavGraph[]
  fullName: Pathfinding.NavGraph[]
  nameWithType.vb: NavGraph()
  fullName.vb: Pathfinding.NavGraph()
  name.vb: NavGraph()
  spec.csharp:
  - uid: Pathfinding.NavGraph
    name: NavGraph
    href: Pathfinding.NavGraph.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Pathfinding.NavGraph
    name: NavGraph
    href: Pathfinding.NavGraph.html
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AstarPath.unwalkableNodeDebugSize
  commentId: F:AstarPath.unwalkableNodeDebugSize
  href: Global.AstarPath.html#AstarPath.unwalkableNodeDebugSize
  name: unwalkableNodeDebugSize
  nameWithType: AstarPath.unwalkableNodeDebugSize
  fullName: AstarPath.unwalkableNodeDebugSize
- uid: Pathfinding.GraphDebugMode
  commentId: T:Pathfinding.GraphDebugMode
  parent: Pathfinding
  href: Pathfinding.GraphDebugMode.html
  name: GraphDebugMode
  nameWithType: GraphDebugMode
  fullName: Pathfinding.GraphDebugMode
- uid: AstarPath.debugMode
  commentId: F:AstarPath.debugMode
  href: Global.AstarPath.html#AstarPath.debugMode
  name: debugMode
  nameWithType: AstarPath.debugMode
  fullName: AstarPath.debugMode
- uid: AstarPath.debugRoof
  commentId: F:AstarPath.debugRoof
  href: Global.AstarPath.html#AstarPath.debugRoof
  name: debugRoof
  nameWithType: AstarPath.debugRoof
  fullName: AstarPath.debugRoof
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: AstarPath.debugFloor
  commentId: F:AstarPath.debugFloor
  href: Global.AstarPath.html#AstarPath.debugFloor
  name: debugFloor
  nameWithType: AstarPath.debugFloor
  fullName: AstarPath.debugFloor
- uid: AstarPath.showUnwalkableNodes
  commentId: F:AstarPath.showUnwalkableNodes
  href: Global.AstarPath.html#AstarPath.showUnwalkableNodes
  name: showUnwalkableNodes
  nameWithType: AstarPath.showUnwalkableNodes
  fullName: AstarPath.showUnwalkableNodes
- uid: Pathfinding.PathLog
  commentId: T:Pathfinding.PathLog
  parent: Pathfinding
  href: Pathfinding.PathLog.html
  name: PathLog
  nameWithType: PathLog
  fullName: Pathfinding.PathLog
- uid: AstarPath.maxNearestNodeDistance
  commentId: F:AstarPath.maxNearestNodeDistance
  href: Global.AstarPath.html#AstarPath.maxNearestNodeDistance
  name: maxNearestNodeDistance
  nameWithType: AstarPath.maxNearestNodeDistance
  fullName: AstarPath.maxNearestNodeDistance
- uid: Global.AstarPath.maxNearestNodeDistanceSqr*
  commentId: Overload:Global.AstarPath.maxNearestNodeDistanceSqr
  href: Global.AstarPath.html#AstarPath.maxNearestNodeDistanceSqr
  name: maxNearestNodeDistanceSqr
  nameWithType: AstarPath.maxNearestNodeDistanceSqr
  fullName: AstarPath.maxNearestNodeDistanceSqr
- uid: AstarPath.Scan(Pathfinding.NavGraph)
  commentId: M:AstarPath.Scan(Pathfinding.NavGraph)
  href: Global.AstarPath.html#AstarPath.Scan(Pathfinding.NavGraph)
  name: Scan(NavGraph)
  nameWithType: AstarPath.Scan(NavGraph)
  fullName: AstarPath.Scan(Pathfinding.NavGraph)
  spec.csharp:
  - uid: Global.AstarPath.Scan(Pathfinding.NavGraph)
    name: Scan
    href: Global.AstarPath.html#AstarPath.Scan(Pathfinding.NavGraph)
  - name: (
  - uid: Pathfinding.NavGraph
    name: NavGraph
    href: Pathfinding.NavGraph.html
  - name: )
  spec.vb:
  - uid: Global.AstarPath.Scan(Pathfinding.NavGraph)
    name: Scan
    href: Global.AstarPath.html#AstarPath.Scan(Pathfinding.NavGraph)
  - name: (
  - uid: Pathfinding.NavGraph
    name: NavGraph
    href: Pathfinding.NavGraph.html
  - name: )
- uid: AstarPath.ScanAsync(Pathfinding.NavGraph)
  commentId: M:AstarPath.ScanAsync(Pathfinding.NavGraph)
  href: Global.AstarPath.html#AstarPath.ScanAsync(Pathfinding.NavGraph)
  name: ScanAsync(NavGraph)
  nameWithType: AstarPath.ScanAsync(NavGraph)
  fullName: AstarPath.ScanAsync(Pathfinding.NavGraph)
  spec.csharp:
  - uid: Global.AstarPath.ScanAsync(Pathfinding.NavGraph)
    name: ScanAsync
    href: Global.AstarPath.html#AstarPath.ScanAsync(Pathfinding.NavGraph)
  - name: (
  - uid: Pathfinding.NavGraph
    name: NavGraph
    href: Pathfinding.NavGraph.html
  - name: )
  spec.vb:
  - uid: Global.AstarPath.ScanAsync(Pathfinding.NavGraph)
    name: ScanAsync
    href: Global.AstarPath.html#AstarPath.ScanAsync(Pathfinding.NavGraph)
  - name: (
  - uid: Pathfinding.NavGraph
    name: NavGraph
    href: Pathfinding.NavGraph.html
  - name: )
- uid: AstarPath.prioritizeGraphsLimit
  commentId: F:AstarPath.prioritizeGraphsLimit
  href: Global.AstarPath.html#AstarPath.prioritizeGraphsLimit
  name: prioritizeGraphsLimit
  nameWithType: AstarPath.prioritizeGraphsLimit
  fullName: AstarPath.prioritizeGraphsLimit
- uid: AstarPath.prioritizeGraphs
  commentId: F:AstarPath.prioritizeGraphs
  href: Global.AstarPath.html#AstarPath.prioritizeGraphs
  name: prioritizeGraphs
  nameWithType: AstarPath.prioritizeGraphs
  fullName: AstarPath.prioritizeGraphs
- uid: Pathfinding.AstarColor
  commentId: T:Pathfinding.AstarColor
  parent: Pathfinding
  href: Pathfinding.AstarColor.html
  name: AstarColor
  nameWithType: AstarColor
  fullName: Pathfinding.AstarColor
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Pathfinding.Heuristic
  commentId: T:Pathfinding.Heuristic
  parent: Pathfinding
  href: Pathfinding.Heuristic.html
  name: Heuristic
  nameWithType: Heuristic
  fullName: Pathfinding.Heuristic
- uid: AstarPath.heuristic
  commentId: F:AstarPath.heuristic
  href: Global.AstarPath.html#AstarPath.heuristic
  name: heuristic
  nameWithType: AstarPath.heuristic
  fullName: AstarPath.heuristic
- uid: AstarPath.AddWorkItem(System.Action)
  commentId: M:AstarPath.AddWorkItem(System.Action)
  isExternal: true
  href: Global.AstarPath.html#AstarPath.AddWorkItem(System.Action)
  name: AddWorkItem(Action)
  nameWithType: AstarPath.AddWorkItem(Action)
  fullName: AstarPath.AddWorkItem(System.Action)
  spec.csharp:
  - uid: Global.AstarPath.AddWorkItem(System.Action)
    name: AddWorkItem
    href: Global.AstarPath.html#AstarPath.AddWorkItem(System.Action)
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: Global.AstarPath.AddWorkItem(System.Action)
    name: AddWorkItem
    href: Global.AstarPath.html#AstarPath.AddWorkItem(System.Action)
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: Pathfinding.ThreadCount
  commentId: T:Pathfinding.ThreadCount
  parent: Pathfinding
  href: Pathfinding.ThreadCount.html
  name: ThreadCount
  nameWithType: ThreadCount
  fullName: Pathfinding.ThreadCount
- uid: AstarPath.graphUpdateBatchingInterval
  commentId: F:AstarPath.graphUpdateBatchingInterval
  href: Global.AstarPath.html#AstarPath.graphUpdateBatchingInterval
  name: graphUpdateBatchingInterval
  nameWithType: AstarPath.graphUpdateBatchingInterval
  fullName: AstarPath.graphUpdateBatchingInterval
- uid: AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  commentId: M:AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  isExternal: true
  href: Global.AstarPath.html#AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  name: UpdateGraphs(Bounds, float)
  nameWithType: AstarPath.UpdateGraphs(Bounds, float)
  fullName: AstarPath.UpdateGraphs(UnityEngine.Bounds, float)
  nameWithType.vb: AstarPath.UpdateGraphs(Bounds, Single)
  fullName.vb: AstarPath.UpdateGraphs(UnityEngine.Bounds, Single)
  name.vb: UpdateGraphs(Bounds, Single)
  spec.csharp:
  - uid: Global.AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
    name: UpdateGraphs
    href: Global.AstarPath.html#AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  - name: (
  - uid: UnityEngine.Bounds
    name: Bounds
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
    name: UpdateGraphs
    href: Global.AstarPath.html#AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  - name: (
  - uid: UnityEngine.Bounds
    name: Bounds
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: AstarPath.RegisterSafeUpdate(System.Action)
  commentId: M:AstarPath.RegisterSafeUpdate(System.Action)
  isExternal: true
  href: Global.AstarPath.html#AstarPath.RegisterSafeUpdate(System.Action)
  name: RegisterSafeUpdate(Action)
  nameWithType: AstarPath.RegisterSafeUpdate(Action)
  fullName: AstarPath.RegisterSafeUpdate(System.Action)
  spec.csharp:
  - uid: Global.AstarPath.RegisterSafeUpdate(System.Action)
    name: RegisterSafeUpdate
    href: Global.AstarPath.html#AstarPath.RegisterSafeUpdate(System.Action)
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: Global.AstarPath.RegisterSafeUpdate(System.Action)
    name: RegisterSafeUpdate
    href: Global.AstarPath.html#AstarPath.RegisterSafeUpdate(System.Action)
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: AstarPath.FlushGraphUpdates
  commentId: M:AstarPath.FlushGraphUpdates
  href: Global.AstarPath.html#AstarPath.FlushGraphUpdates
  name: FlushGraphUpdates()
  nameWithType: AstarPath.FlushGraphUpdates()
  fullName: AstarPath.FlushGraphUpdates()
  spec.csharp:
  - uid: Global.AstarPath.FlushGraphUpdates
    name: FlushGraphUpdates
    href: Global.AstarPath.html#AstarPath.FlushGraphUpdates
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AstarPath.FlushGraphUpdates
    name: FlushGraphUpdates
    href: Global.AstarPath.html#AstarPath.FlushGraphUpdates
  - name: (
  - name: )
- uid: AstarPath.batchGraphUpdates
  commentId: F:AstarPath.batchGraphUpdates
  href: Global.AstarPath.html#AstarPath.batchGraphUpdates
  name: batchGraphUpdates
  nameWithType: AstarPath.batchGraphUpdates
  fullName: AstarPath.batchGraphUpdates
- uid: Global.AstarPath.limitGraphUpdates*
  commentId: Overload:Global.AstarPath.limitGraphUpdates
  href: Global.AstarPath.html#AstarPath.limitGraphUpdates
  name: limitGraphUpdates
  nameWithType: AstarPath.limitGraphUpdates
  fullName: AstarPath.limitGraphUpdates
- uid: Global.AstarPath.maxGraphUpdateFreq*
  commentId: Overload:Global.AstarPath.maxGraphUpdateFreq
  href: Global.AstarPath.html#AstarPath.maxGraphUpdateFreq
  name: maxGraphUpdateFreq
  nameWithType: AstarPath.maxGraphUpdateFreq
  fullName: AstarPath.maxGraphUpdateFreq
- uid: Global.AstarPath.lastScanTime*
  commentId: Overload:Global.AstarPath.lastScanTime
  href: Global.AstarPath.html#AstarPath.lastScanTime
  name: lastScanTime
  nameWithType: AstarPath.lastScanTime
  fullName: AstarPath.lastScanTime
- uid: Pathfinding.PathHandler
  commentId: T:Pathfinding.PathHandler
  parent: Pathfinding
  href: Pathfinding.PathHandler.html
  name: PathHandler
  nameWithType: PathHandler
  fullName: Pathfinding.PathHandler
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Global.AstarPath.isScanning*
  commentId: Overload:Global.AstarPath.isScanning
  href: Global.AstarPath.html#AstarPath.isScanning
  name: isScanning
  nameWithType: AstarPath.isScanning
  fullName: AstarPath.isScanning
- uid: Global.AstarPath.NumParallelThreads*
  commentId: Overload:Global.AstarPath.NumParallelThreads
  href: Global.AstarPath.html#AstarPath.NumParallelThreads
  name: NumParallelThreads
  nameWithType: AstarPath.NumParallelThreads
  fullName: AstarPath.NumParallelThreads
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AstarPath.IsUsingMultithreading*
  commentId: Overload:Global.AstarPath.IsUsingMultithreading
  href: Global.AstarPath.html#AstarPath.IsUsingMultithreading
  name: IsUsingMultithreading
  nameWithType: AstarPath.IsUsingMultithreading
  fullName: AstarPath.IsUsingMultithreading
- uid: Global.AstarPath.IsAnyGraphUpdatesQueued*
  commentId: Overload:Global.AstarPath.IsAnyGraphUpdatesQueued
  href: Global.AstarPath.html#AstarPath.IsAnyGraphUpdatesQueued
  name: IsAnyGraphUpdatesQueued
  nameWithType: AstarPath.IsAnyGraphUpdatesQueued
  fullName: AstarPath.IsAnyGraphUpdatesQueued
- uid: Global.AstarPath.IsAnyGraphUpdateQueued*
  commentId: Overload:Global.AstarPath.IsAnyGraphUpdateQueued
  href: Global.AstarPath.html#AstarPath.IsAnyGraphUpdateQueued
  name: IsAnyGraphUpdateQueued
  nameWithType: AstarPath.IsAnyGraphUpdateQueued
  fullName: AstarPath.IsAnyGraphUpdateQueued
- uid: Global.AstarPath.IsAnyGraphUpdateInProgress*
  commentId: Overload:Global.AstarPath.IsAnyGraphUpdateInProgress
  href: Global.AstarPath.html#AstarPath.IsAnyGraphUpdateInProgress
  name: IsAnyGraphUpdateInProgress
  nameWithType: AstarPath.IsAnyGraphUpdateInProgress
  fullName: AstarPath.IsAnyGraphUpdateInProgress
- uid: Global.AstarPath.IsAnyWorkItemInProgress*
  commentId: Overload:Global.AstarPath.IsAnyWorkItemInProgress
  href: Global.AstarPath.html#AstarPath.IsAnyWorkItemInProgress
  name: IsAnyWorkItemInProgress
  nameWithType: AstarPath.IsAnyWorkItemInProgress
  fullName: AstarPath.IsAnyWorkItemInProgress
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Pathfinding.OnGraphDelegate
  commentId: T:Pathfinding.OnGraphDelegate
  parent: Pathfinding
  href: Pathfinding.OnGraphDelegate.html
  name: OnGraphDelegate
  nameWithType: OnGraphDelegate
  fullName: Pathfinding.OnGraphDelegate
- uid: Pathfinding.OnPathDelegate
  commentId: T:Pathfinding.OnPathDelegate
  parent: Pathfinding
  href: Pathfinding.OnPathDelegate.html
  name: OnPathDelegate
  nameWithType: OnPathDelegate
  fullName: Pathfinding.OnPathDelegate
- uid: Pathfinding.OnScanDelegate
  commentId: T:Pathfinding.OnScanDelegate
  parent: Pathfinding
  href: Pathfinding.OnScanDelegate.html
  name: OnScanDelegate
  nameWithType: OnScanDelegate
  fullName: Pathfinding.OnScanDelegate
- uid: Pathfinding.NavmeshUpdates
  commentId: T:Pathfinding.NavmeshUpdates
  parent: Pathfinding
  href: Pathfinding.NavmeshUpdates.html
  name: NavmeshUpdates
  nameWithType: NavmeshUpdates
  fullName: Pathfinding.NavmeshUpdates
- uid: Pathfinding.EuclideanEmbedding
  commentId: T:Pathfinding.EuclideanEmbedding
  parent: Pathfinding
  href: Pathfinding.EuclideanEmbedding.html
  name: EuclideanEmbedding
  nameWithType: EuclideanEmbedding
  fullName: Pathfinding.EuclideanEmbedding
- uid: Global.AstarPath.GetTagNames*
  commentId: Overload:Global.AstarPath.GetTagNames
  href: Global.AstarPath.html#AstarPath.GetTagNames
  name: GetTagNames
  nameWithType: AstarPath.GetTagNames
  fullName: AstarPath.GetTagNames
- uid: AstarPath.active
  commentId: F:AstarPath.active
  href: Global.AstarPath.html#AstarPath.active
  name: active
  nameWithType: AstarPath.active
  fullName: AstarPath.active
- uid: Global.AstarPath.FindAstarPath*
  commentId: Overload:Global.AstarPath.FindAstarPath
  href: Global.AstarPath.html#AstarPath.FindAstarPath
  name: FindAstarPath
  nameWithType: AstarPath.FindAstarPath
  fullName: AstarPath.FindAstarPath
- uid: Global.AstarPath.FindTagNames*
  commentId: Overload:Global.AstarPath.FindTagNames
  href: Global.AstarPath.html#AstarPath.FindTagNames
  name: FindTagNames
  nameWithType: AstarPath.FindTagNames
  fullName: AstarPath.FindTagNames
- uid: Pathfinding.IWorkItemContext
  commentId: T:Pathfinding.IWorkItemContext
  href: Pathfinding.IWorkItemContext.html
  name: IWorkItemContext
  nameWithType: IWorkItemContext
  fullName: Pathfinding.IWorkItemContext
- uid: Global.AstarPath.QueueWorkItemFloodFill*
  commentId: Overload:Global.AstarPath.QueueWorkItemFloodFill
  href: Global.AstarPath.html#AstarPath.QueueWorkItemFloodFill
  name: QueueWorkItemFloodFill
  nameWithType: AstarPath.QueueWorkItemFloodFill
  fullName: AstarPath.QueueWorkItemFloodFill
- uid: Global.AstarPath.EnsureValidFloodFill*
  commentId: Overload:Global.AstarPath.EnsureValidFloodFill
  href: Global.AstarPath.html#AstarPath.EnsureValidFloodFill
  name: EnsureValidFloodFill
  nameWithType: AstarPath.EnsureValidFloodFill
  fullName: AstarPath.EnsureValidFloodFill
- uid: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  commentId: M:AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  href: Global.AstarPath.html#AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  name: AddWorkItem(AstarWorkItem)
  nameWithType: AstarPath.AddWorkItem(AstarWorkItem)
  fullName: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  spec.csharp:
  - uid: Global.AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
    name: AddWorkItem
    href: Global.AstarPath.html#AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  - name: (
  - uid: Pathfinding.AstarWorkItem
    name: AstarWorkItem
    href: Pathfinding.AstarWorkItem.html
  - name: )
  spec.vb:
  - uid: Global.AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
    name: AddWorkItem
    href: Global.AstarPath.html#AstarPath.AddWorkItem(Pathfinding.AstarWorkItem)
  - name: (
  - uid: Pathfinding.AstarWorkItem
    name: AstarWorkItem
    href: Pathfinding.AstarWorkItem.html
  - name: )
- uid: Global.AstarPath.AddWorkItem*
  commentId: Overload:Global.AstarPath.AddWorkItem
  href: Global.AstarPath.html#AstarPath.AddWorkItem(System.Action)
  name: AddWorkItem
  nameWithType: AstarPath.AddWorkItem
  fullName: AstarPath.AddWorkItem
- uid: System.Action{Pathfinding.IWorkItemContext}
  commentId: T:System.Action{Pathfinding.IWorkItemContext}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IWorkItemContext>
  nameWithType: Action<IWorkItemContext>
  fullName: System.Action<Pathfinding.IWorkItemContext>
  nameWithType.vb: Action(Of IWorkItemContext)
  fullName.vb: System.Action(Of Pathfinding.IWorkItemContext)
  name.vb: Action(Of IWorkItemContext)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Pathfinding.IWorkItemContext
    name: IWorkItemContext
    href: Pathfinding.IWorkItemContext.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Pathfinding.IWorkItemContext
    name: IWorkItemContext
    href: Pathfinding.IWorkItemContext.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AstarPath.FlushWorkItems
  commentId: M:AstarPath.FlushWorkItems
  href: Global.AstarPath.html#AstarPath.FlushWorkItems
  name: FlushWorkItems()
  nameWithType: AstarPath.FlushWorkItems()
  fullName: AstarPath.FlushWorkItems()
  spec.csharp:
  - uid: Global.AstarPath.FlushWorkItems
    name: FlushWorkItems
    href: Global.AstarPath.html#AstarPath.FlushWorkItems
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AstarPath.FlushWorkItems
    name: FlushWorkItems
    href: Global.AstarPath.html#AstarPath.FlushWorkItems
  - name: (
  - name: )
- uid: Pathfinding.AstarWorkItem
  commentId: T:Pathfinding.AstarWorkItem
  parent: Pathfinding
  href: Pathfinding.AstarWorkItem.html
  name: AstarWorkItem
  nameWithType: AstarWorkItem
  fullName: Pathfinding.AstarWorkItem
- uid: Global.AstarPath.QueueGraphUpdates*
  commentId: Overload:Global.AstarPath.QueueGraphUpdates
  href: Global.AstarPath.html#AstarPath.QueueGraphUpdates
  name: QueueGraphUpdates
  nameWithType: AstarPath.QueueGraphUpdates
  fullName: AstarPath.QueueGraphUpdates
- uid: Global.AstarPath.UpdateGraphs*
  commentId: Overload:Global.AstarPath.UpdateGraphs
  href: Global.AstarPath.html#AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single)
  name: UpdateGraphs
  nameWithType: AstarPath.UpdateGraphs
  fullName: AstarPath.UpdateGraphs
- uid: UnityEngine.Bounds
  commentId: T:UnityEngine.Bounds
  parent: UnityEngine
  isExternal: true
  name: Bounds
  nameWithType: Bounds
  fullName: UnityEngine.Bounds
- uid: Pathfinding.GraphUpdateObject
  commentId: T:Pathfinding.GraphUpdateObject
  parent: Pathfinding
  href: Pathfinding.GraphUpdateObject.html
  name: GraphUpdateObject
  nameWithType: GraphUpdateObject
  fullName: Pathfinding.GraphUpdateObject
- uid: Global.AstarPath.FlushGraphUpdates*
  commentId: Overload:Global.AstarPath.FlushGraphUpdates
  href: Global.AstarPath.html#AstarPath.FlushGraphUpdates
  name: FlushGraphUpdates
  nameWithType: AstarPath.FlushGraphUpdates
  fullName: AstarPath.FlushGraphUpdates
- uid: Global.AstarPath.FlushWorkItems*
  commentId: Overload:Global.AstarPath.FlushWorkItems
  href: Global.AstarPath.html#AstarPath.FlushWorkItems
  name: FlushWorkItems
  nameWithType: AstarPath.FlushWorkItems
  fullName: AstarPath.FlushWorkItems
- uid: Global.AstarPath.FlushThreadSafeCallbacks*
  commentId: Overload:Global.AstarPath.FlushThreadSafeCallbacks
  href: Global.AstarPath.html#AstarPath.FlushThreadSafeCallbacks
  name: FlushThreadSafeCallbacks
  nameWithType: AstarPath.FlushThreadSafeCallbacks
  fullName: AstarPath.FlushThreadSafeCallbacks
- uid: Global.AstarPath.CalculateThreadCount*
  commentId: Overload:Global.AstarPath.CalculateThreadCount
  href: Global.AstarPath.html#AstarPath.CalculateThreadCount(Pathfinding.ThreadCount)
  name: CalculateThreadCount
  nameWithType: AstarPath.CalculateThreadCount
  fullName: AstarPath.CalculateThreadCount
- uid: AstarPath.OnAwakeSettings
  commentId: F:AstarPath.OnAwakeSettings
  href: Global.AstarPath.html#AstarPath.OnAwakeSettings
  name: OnAwakeSettings
  nameWithType: AstarPath.OnAwakeSettings
  fullName: AstarPath.OnAwakeSettings
- uid: Pathfinding.VersionedMonoBehaviour.Awake
  commentId: M:Pathfinding.VersionedMonoBehaviour.Awake
  parent: Pathfinding.VersionedMonoBehaviour
  href: Pathfinding.VersionedMonoBehaviour.html#Pathfinding.VersionedMonoBehaviour.Awake
  name: Awake()
  nameWithType: VersionedMonoBehaviour.Awake()
  fullName: Pathfinding.VersionedMonoBehaviour.Awake()
  spec.csharp:
  - uid: Pathfinding.VersionedMonoBehaviour.Awake
    name: Awake
    href: Pathfinding.VersionedMonoBehaviour.html#Pathfinding.VersionedMonoBehaviour.Awake
  - name: (
  - name: )
  spec.vb:
  - uid: Pathfinding.VersionedMonoBehaviour.Awake
    name: Awake
    href: Pathfinding.VersionedMonoBehaviour.html#Pathfinding.VersionedMonoBehaviour.Awake
  - name: (
  - name: )
- uid: Global.AstarPath.Awake*
  commentId: Overload:Global.AstarPath.Awake
  href: Global.AstarPath.html#AstarPath.Awake
  name: Awake
  nameWithType: AstarPath.Awake
  fullName: AstarPath.Awake
- uid: AstarPath.data
  commentId: F:AstarPath.data
  href: Global.AstarPath.html#AstarPath.data
  name: data
  nameWithType: AstarPath.data
  fullName: AstarPath.data
- uid: AstarPath.colorSettings
  commentId: F:AstarPath.colorSettings
  href: Global.AstarPath.html#AstarPath.colorSettings
  name: colorSettings
  nameWithType: AstarPath.colorSettings
  fullName: AstarPath.colorSettings
- uid: Global.AstarPath.ConfigureReferencesInternal*
  commentId: Overload:Global.AstarPath.ConfigureReferencesInternal
  href: Global.AstarPath.html#AstarPath.ConfigureReferencesInternal
  name: ConfigureReferencesInternal
  nameWithType: AstarPath.ConfigureReferencesInternal
  fullName: AstarPath.ConfigureReferencesInternal
- uid: Global.AstarPath.FloodFill*
  commentId: Overload:Global.AstarPath.FloodFill
  href: Global.AstarPath.html#AstarPath.FloodFill(Pathfinding.GraphNode)
  name: FloodFill
  nameWithType: AstarPath.FloodFill
  fullName: AstarPath.FloodFill
- uid: Pathfinding.GraphNode
  commentId: T:Pathfinding.GraphNode
  parent: Pathfinding
  href: Pathfinding.GraphNode.html
  name: GraphNode
  nameWithType: GraphNode
  fullName: Pathfinding.GraphNode
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: AstarPath.PausePathfinding
  commentId: M:AstarPath.PausePathfinding
  href: Global.AstarPath.html#AstarPath.PausePathfinding
  name: PausePathfinding()
  nameWithType: AstarPath.PausePathfinding()
  fullName: AstarPath.PausePathfinding()
  spec.csharp:
  - uid: Global.AstarPath.PausePathfinding
    name: PausePathfinding
    href: Global.AstarPath.html#AstarPath.PausePathfinding
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AstarPath.PausePathfinding
    name: PausePathfinding
    href: Global.AstarPath.html#AstarPath.PausePathfinding
  - name: (
  - name: )
- uid: Global.AstarPath.BlockUntilPathQueueBlocked*
  commentId: Overload:Global.AstarPath.BlockUntilPathQueueBlocked
  href: Global.AstarPath.html#AstarPath.BlockUntilPathQueueBlocked
  name: BlockUntilPathQueueBlocked
  nameWithType: AstarPath.BlockUntilPathQueueBlocked
  fullName: AstarPath.BlockUntilPathQueueBlocked
- uid: Pathfinding.PathProcessor.GraphUpdateLock.Release
  commentId: M:Pathfinding.PathProcessor.GraphUpdateLock.Release
  href: Pathfinding.PathProcessor.GraphUpdateLock.html#Pathfinding.PathProcessor.GraphUpdateLock.Release
  name: Release()
  nameWithType: PathProcessor.GraphUpdateLock.Release()
  fullName: Pathfinding.PathProcessor.GraphUpdateLock.Release()
  spec.csharp:
  - uid: Pathfinding.PathProcessor.GraphUpdateLock.Release
    name: Release
    href: Pathfinding.PathProcessor.GraphUpdateLock.html#Pathfinding.PathProcessor.GraphUpdateLock.Release
  - name: (
  - name: )
  spec.vb:
  - uid: Pathfinding.PathProcessor.GraphUpdateLock.Release
    name: Release
    href: Pathfinding.PathProcessor.GraphUpdateLock.html#Pathfinding.PathProcessor.GraphUpdateLock.Release
  - name: (
  - name: )
- uid: Global.AstarPath.PausePathfinding*
  commentId: Overload:Global.AstarPath.PausePathfinding
  href: Global.AstarPath.html#AstarPath.PausePathfinding
  name: PausePathfinding
  nameWithType: AstarPath.PausePathfinding
  fullName: AstarPath.PausePathfinding
- uid: Pathfinding.PathProcessor.GraphUpdateLock
  commentId: T:Pathfinding.PathProcessor.GraphUpdateLock
  parent: Pathfinding
  href: Pathfinding.PathProcessor.html
  name: PathProcessor.GraphUpdateLock
  nameWithType: PathProcessor.GraphUpdateLock
  fullName: Pathfinding.PathProcessor.GraphUpdateLock
  spec.csharp:
  - uid: Pathfinding.PathProcessor
    name: PathProcessor
    href: Pathfinding.PathProcessor.html
  - name: .
  - uid: Pathfinding.PathProcessor.GraphUpdateLock
    name: GraphUpdateLock
    href: Pathfinding.PathProcessor.GraphUpdateLock.html
  spec.vb:
  - uid: Pathfinding.PathProcessor
    name: PathProcessor
    href: Pathfinding.PathProcessor.html
  - name: .
  - uid: Pathfinding.PathProcessor.GraphUpdateLock
    name: GraphUpdateLock
    href: Pathfinding.PathProcessor.GraphUpdateLock.html
- uid: Global.AstarPath.Scan*
  commentId: Overload:Global.AstarPath.Scan
  href: Global.AstarPath.html#AstarPath.Scan(Pathfinding.NavGraph)
  name: Scan
  nameWithType: AstarPath.Scan
  fullName: AstarPath.Scan
- uid: Pathfinding.NavGraph
  commentId: T:Pathfinding.NavGraph
  parent: Pathfinding
  href: Pathfinding.NavGraph.html
  name: NavGraph
  nameWithType: NavGraph
  fullName: Pathfinding.NavGraph
- uid: Global.AstarPath.ScanAsync*
  commentId: Overload:Global.AstarPath.ScanAsync
  href: Global.AstarPath.html#AstarPath.ScanAsync(Pathfinding.NavGraph)
  name: ScanAsync
  nameWithType: AstarPath.ScanAsync
  fullName: AstarPath.ScanAsync
- uid: System.Collections.Generic.IEnumerable{Pathfinding.Progress}
  commentId: T:System.Collections.Generic.IEnumerable{Pathfinding.Progress}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Progress>
  nameWithType: IEnumerable<Progress>
  fullName: System.Collections.Generic.IEnumerable<Pathfinding.Progress>
  nameWithType.vb: IEnumerable(Of Progress)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Pathfinding.Progress)
  name.vb: IEnumerable(Of Progress)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Pathfinding.Progress
    name: Progress
    href: Pathfinding.Progress.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Pathfinding.Progress
    name: Progress
    href: Pathfinding.Progress.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AstarPath.BlockUntilCalculated(Pathfinding.Path)
  commentId: M:AstarPath.BlockUntilCalculated(Pathfinding.Path)
  href: Global.AstarPath.html#AstarPath.BlockUntilCalculated(Pathfinding.Path)
  name: BlockUntilCalculated(Path)
  nameWithType: AstarPath.BlockUntilCalculated(Path)
  fullName: AstarPath.BlockUntilCalculated(Pathfinding.Path)
  spec.csharp:
  - uid: Global.AstarPath.BlockUntilCalculated(Pathfinding.Path)
    name: BlockUntilCalculated
    href: Global.AstarPath.html#AstarPath.BlockUntilCalculated(Pathfinding.Path)
  - name: (
  - uid: Pathfinding.Path
    name: Path
    href: Pathfinding.Path.html
  - name: )
  spec.vb:
  - uid: Global.AstarPath.BlockUntilCalculated(Pathfinding.Path)
    name: BlockUntilCalculated
    href: Global.AstarPath.html#AstarPath.BlockUntilCalculated(Pathfinding.Path)
  - name: (
  - uid: Pathfinding.Path
    name: Path
    href: Pathfinding.Path.html
  - name: )
- uid: Global.AstarPath.WaitForPath*
  commentId: Overload:Global.AstarPath.WaitForPath
  href: Global.AstarPath.html#AstarPath.WaitForPath(Pathfinding.Path)
  name: WaitForPath
  nameWithType: AstarPath.WaitForPath
  fullName: AstarPath.WaitForPath
- uid: Pathfinding.Path
  commentId: T:Pathfinding.Path
  parent: Pathfinding
  href: Pathfinding.Path.html
  name: Path
  nameWithType: Path
  fullName: Pathfinding.Path
- uid: Global.AstarPath.BlockUntilCalculated*
  commentId: Overload:Global.AstarPath.BlockUntilCalculated
  href: Global.AstarPath.html#AstarPath.BlockUntilCalculated(Pathfinding.Path)
  name: BlockUntilCalculated
  nameWithType: AstarPath.BlockUntilCalculated
  fullName: AstarPath.BlockUntilCalculated
- uid: Global.AstarPath.RegisterSafeUpdate*
  commentId: Overload:Global.AstarPath.RegisterSafeUpdate
  href: Global.AstarPath.html#AstarPath.RegisterSafeUpdate(System.Action)
  name: RegisterSafeUpdate
  nameWithType: AstarPath.RegisterSafeUpdate
  fullName: AstarPath.RegisterSafeUpdate
- uid: Global.AstarPath.StartPath*
  commentId: Overload:Global.AstarPath.StartPath
  href: Global.AstarPath.html#AstarPath.StartPath(Pathfinding.Path,System.Boolean)
  name: StartPath
  nameWithType: AstarPath.StartPath
  fullName: AstarPath.StartPath
- uid: Global.AstarPath.GetNearest*
  commentId: Overload:Global.AstarPath.GetNearest
  href: Global.AstarPath.html#AstarPath.GetNearest(UnityEngine.Vector3)
  name: GetNearest
  nameWithType: AstarPath.GetNearest
  fullName: AstarPath.GetNearest
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Pathfinding.NNInfo
  commentId: T:Pathfinding.NNInfo
  parent: Pathfinding
  href: Pathfinding.NNInfo.html
  name: NNInfo
  nameWithType: NNInfo
  fullName: Pathfinding.NNInfo
- uid: Pathfinding.NNConstraint
  commentId: T:Pathfinding.NNConstraint
  parent: Pathfinding
  href: Pathfinding.NNConstraint.html
  name: NNConstraint
  nameWithType: NNConstraint
  fullName: Pathfinding.NNConstraint
- uid: UnityEngine.Ray
  commentId: T:UnityEngine.Ray
  parent: UnityEngine
  isExternal: true
  name: Ray
  nameWithType: Ray
  fullName: UnityEngine.Ray
