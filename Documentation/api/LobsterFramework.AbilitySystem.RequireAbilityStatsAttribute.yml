### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute
  commentId: T:LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute
  id: RequireAbilityStatsAttribute
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.#ctor(System.Type,System.Type[])
  - LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.Init(System.Type)
  - LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.requirement
  - LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.rev_requirement
  langs:
  - csharp
  - vb
  name: RequireAbilityStatsAttribute
  nameWithType: RequireAbilityStatsAttribute
  fullName: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute
  type: Class
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    id: RequireAbilityStatsAttribute
    path: ../Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    startLine: 10
  assemblies:
  - MyScripts
  namespace: LobsterFramework.AbilitySystem
  summary: "\nMarks this ability as requiring specified AbilityStats to run\n"
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class)]

      public class RequireAbilityStatsAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class)>

      Public Class RequireAbilityStatsAttribute Inherits Attribute
  inheritance:
  - System.Object
  - System.Attribute
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 4
- uid: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.requirement
  commentId: F:LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.requirement
  id: requirement
  parent: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute
  langs:
  - csharp
  - vb
  name: requirement
  nameWithType: RequireAbilityStatsAttribute.requirement
  fullName: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.requirement
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    id: requirement
    path: ../Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    startLine: 13
  assemblies:
  - MyScripts
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public static Dictionary<Type, HashSet<Type>> requirement
    return:
      type: System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.HashSet{System.Type}}
    content.vb: Public Shared requirement As Dictionary(Of Type, HashSet(Of Type))
- uid: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.rev_requirement
  commentId: F:LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.rev_requirement
  id: rev_requirement
  parent: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute
  langs:
  - csharp
  - vb
  name: rev_requirement
  nameWithType: RequireAbilityStatsAttribute.rev_requirement
  fullName: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.rev_requirement
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    id: rev_requirement
    path: ../Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    startLine: 14
  assemblies:
  - MyScripts
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public static Dictionary<Type, HashSet<Type>> rev_requirement
    return:
      type: System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.HashSet{System.Type}}
    content.vb: Public Shared rev_requirement As Dictionary(Of Type, HashSet(Of Type))
- uid: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.#ctor(System.Type,System.Type[])
  commentId: M:LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.#ctor(System.Type,System.Type[])
  id: '#ctor(System.Type,System.Type[])'
  parent: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute
  langs:
  - csharp
  - vb
  name: RequireAbilityStatsAttribute(Type, params Type[])
  nameWithType: RequireAbilityStatsAttribute.RequireAbilityStatsAttribute(Type, params Type[])
  fullName: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.RequireAbilityStatsAttribute(System.Type, params System.Type[])
  type: Constructor
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    id: .ctor
    path: ../Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    startLine: 18
  assemblies:
  - MyScripts
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public RequireAbilityStatsAttribute(Type ability, params Type[] abilityStats)
    parameters:
    - id: ability
      type: System.Type
    - id: abilityStats
      type: System.Type[]
    content.vb: Public Sub New(ability As Type, ParamArray abilityStats As Type())
  overload: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.#ctor*
  nameWithType.vb: RequireAbilityStatsAttribute.New(Type, ParamArray Type())
  fullName.vb: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.New(System.Type, ParamArray System.Type())
  name.vb: New(Type, ParamArray Type())
- uid: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.Init(System.Type)
  commentId: M:LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.Init(System.Type)
  id: Init(System.Type)
  parent: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute
  langs:
  - csharp
  - vb
  name: Init(Type)
  nameWithType: RequireAbilityStatsAttribute.Init(Type)
  fullName: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.Init(System.Type)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    id: Init
    path: ../Assets/Scripts/Editor/Attributes/RequireAbilityStatsAttribute.cs
    startLine: 23
  assemblies:
  - MyScripts
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void Init(Type ability)
    parameters:
    - id: ability
      type: System.Type
    content.vb: Public Sub Init(ability As Type)
  overload: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.Init*
references:
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.HashSet{System.Type}}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.HashSet{System.Type}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Type, HashSet<Type>>
  nameWithType: Dictionary<Type, HashSet<Type>>
  fullName: System.Collections.Generic.Dictionary<System.Type, System.Collections.Generic.HashSet<System.Type>>
  nameWithType.vb: Dictionary(Of Type, HashSet(Of Type))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, System.Collections.Generic.HashSet(Of System.Type))
  name.vb: Dictionary(Of Type, HashSet(Of Type))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.#ctor*
  commentId: Overload:LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.#ctor
  name: RequireAbilityStatsAttribute
  nameWithType: RequireAbilityStatsAttribute.RequireAbilityStatsAttribute
  fullName: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.RequireAbilityStatsAttribute
  nameWithType.vb: RequireAbilityStatsAttribute.New
  fullName.vb: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.New
  name.vb: New
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
- uid: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.Init*
  commentId: Overload:LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.Init
  name: Init
  nameWithType: RequireAbilityStatsAttribute.Init
  fullName: LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.Init
