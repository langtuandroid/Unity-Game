### YamlMime:ManagedReference
items:
- uid: Global.SerializableLinkedList`1
  commentId: T:Global.SerializableLinkedList`1
  id: SerializableLinkedList`1
  parent: Global
  children:
  - Global.SerializableLinkedList`1.Add(`0)
  - Global.SerializableLinkedList`1.Clear
  - Global.SerializableLinkedList`1.Contains(`0)
  - Global.SerializableLinkedList`1.CopyTo(`0[],System.Int32)
  - Global.SerializableLinkedList`1.Count
  - Global.SerializableLinkedList`1.GetEnumerator
  - Global.SerializableLinkedList`1.IsReadOnly
  - Global.SerializableLinkedList`1.OnAfterDeserialize
  - Global.SerializableLinkedList`1.OnBeforeSerialize
  - Global.SerializableLinkedList`1.Remove(`0)
  langs:
  - csharp
  - vb
  name: SerializableLinkedList<T>
  nameWithType: SerializableLinkedList<T>
  fullName: SerializableLinkedList<T>
  type: Class
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: SerializableLinkedList
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 4
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: 'public class SerializableLinkedList<T> : ISerializationCallbackReceiver'
    typeParameters:
    - id: T
    content.vb: Public Class SerializableLinkedList(Of T) Implements ISerializationCallbackReceiver
  inheritance:
  - System.Object
  implements:
  - UnityEngine.ISerializationCallbackReceiver
  nameWithType.vb: SerializableLinkedList(Of T)
  fullName.vb: SerializableLinkedList(Of T)
  name.vb: SerializableLinkedList(Of T)
- uid: Global.SerializableLinkedList`1.Count
  commentId: P:Global.SerializableLinkedList`1.Count
  id: Count
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SerializableLinkedList<T>.Count
  fullName: SerializableLinkedList<T>.Count
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: Count
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 9
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Global.SerializableLinkedList`1.Count*
  nameWithType.vb: SerializableLinkedList(Of T).Count
  fullName.vb: SerializableLinkedList(Of T).Count
- uid: Global.SerializableLinkedList`1.IsReadOnly
  commentId: P:Global.SerializableLinkedList`1.IsReadOnly
  id: IsReadOnly
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: SerializableLinkedList<T>.IsReadOnly
  fullName: SerializableLinkedList<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: IsReadOnly
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 11
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Global.SerializableLinkedList`1.IsReadOnly*
  nameWithType.vb: SerializableLinkedList(Of T).IsReadOnly
  fullName.vb: SerializableLinkedList(Of T).IsReadOnly
- uid: Global.SerializableLinkedList`1.Add(`0)
  commentId: M:Global.SerializableLinkedList`1.Add(`0)
  id: Add(`0)
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: SerializableLinkedList<T>.Add(T)
  fullName: SerializableLinkedList<T>.Add(T)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: Add
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 13
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Add(item As T)
  overload: Global.SerializableLinkedList`1.Add*
  nameWithType.vb: SerializableLinkedList(Of T).Add(T)
  fullName.vb: SerializableLinkedList(Of T).Add(T)
- uid: Global.SerializableLinkedList`1.Clear
  commentId: M:Global.SerializableLinkedList`1.Clear
  id: Clear
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SerializableLinkedList<T>.Clear()
  fullName: SerializableLinkedList<T>.Clear()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: Clear
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 18
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Global.SerializableLinkedList`1.Clear*
  nameWithType.vb: SerializableLinkedList(Of T).Clear()
  fullName.vb: SerializableLinkedList(Of T).Clear()
- uid: Global.SerializableLinkedList`1.Contains(`0)
  commentId: M:Global.SerializableLinkedList`1.Contains(`0)
  id: Contains(`0)
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: SerializableLinkedList<T>.Contains(T)
  fullName: SerializableLinkedList<T>.Contains(T)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: Contains
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 23
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As T) As Boolean
  overload: Global.SerializableLinkedList`1.Contains*
  nameWithType.vb: SerializableLinkedList(Of T).Contains(T)
  fullName.vb: SerializableLinkedList(Of T).Contains(T)
- uid: Global.SerializableLinkedList`1.CopyTo(`0[],System.Int32)
  commentId: M:Global.SerializableLinkedList`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: SerializableLinkedList<T>.CopyTo(T[], int)
  fullName: SerializableLinkedList<T>.CopyTo(T[], int)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: CopyTo
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 28
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: Global.SerializableLinkedList`1.CopyTo*
  nameWithType.vb: SerializableLinkedList(Of T).CopyTo(T(), Integer)
  fullName.vb: SerializableLinkedList(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: Global.SerializableLinkedList`1.GetEnumerator
  commentId: M:Global.SerializableLinkedList`1.GetEnumerator
  id: GetEnumerator
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SerializableLinkedList<T>.GetEnumerator()
  fullName: SerializableLinkedList<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: GetEnumerator
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 33
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: Global.SerializableLinkedList`1.GetEnumerator*
  nameWithType.vb: SerializableLinkedList(Of T).GetEnumerator()
  fullName.vb: SerializableLinkedList(Of T).GetEnumerator()
- uid: Global.SerializableLinkedList`1.OnAfterDeserialize
  commentId: M:Global.SerializableLinkedList`1.OnAfterDeserialize
  id: OnAfterDeserialize
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: OnAfterDeserialize()
  nameWithType: SerializableLinkedList<T>.OnAfterDeserialize()
  fullName: SerializableLinkedList<T>.OnAfterDeserialize()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: OnAfterDeserialize
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 38
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public void OnAfterDeserialize()
    content.vb: Public Sub OnAfterDeserialize()
  overload: Global.SerializableLinkedList`1.OnAfterDeserialize*
  implements:
  - UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
  nameWithType.vb: SerializableLinkedList(Of T).OnAfterDeserialize()
  fullName.vb: SerializableLinkedList(Of T).OnAfterDeserialize()
- uid: Global.SerializableLinkedList`1.OnBeforeSerialize
  commentId: M:Global.SerializableLinkedList`1.OnBeforeSerialize
  id: OnBeforeSerialize
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: OnBeforeSerialize()
  nameWithType: SerializableLinkedList<T>.OnBeforeSerialize()
  fullName: SerializableLinkedList<T>.OnBeforeSerialize()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: OnBeforeSerialize
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 46
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public void OnBeforeSerialize()
    content.vb: Public Sub OnBeforeSerialize()
  overload: Global.SerializableLinkedList`1.OnBeforeSerialize*
  implements:
  - UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
  nameWithType.vb: SerializableLinkedList(Of T).OnBeforeSerialize()
  fullName.vb: SerializableLinkedList(Of T).OnBeforeSerialize()
- uid: Global.SerializableLinkedList`1.Remove(`0)
  commentId: M:Global.SerializableLinkedList`1.Remove(`0)
  id: Remove(`0)
  parent: Global.SerializableLinkedList`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: SerializableLinkedList<T>.Remove(T)
  fullName: SerializableLinkedList<T>.Remove(T)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    id: Remove
    path: ../Assets/Scripts/Utility/SerializableDataStructures/SerializableLinkedList.cs
    startLine: 54
  assemblies:
  - MyScripts
  namespace: Global
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As T) As Boolean
  overload: Global.SerializableLinkedList`1.Remove*
  nameWithType.vb: SerializableLinkedList(Of T).Remove(T)
  fullName.vb: SerializableLinkedList(Of T).Remove(T)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.ISerializationCallbackReceiver
  commentId: T:UnityEngine.ISerializationCallbackReceiver
  parent: UnityEngine
  isExternal: true
  name: ISerializationCallbackReceiver
  nameWithType: ISerializationCallbackReceiver
  fullName: UnityEngine.ISerializationCallbackReceiver
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.SerializableLinkedList`1.Count*
  commentId: Overload:Global.SerializableLinkedList`1.Count
  name: Count
  nameWithType: SerializableLinkedList<T>.Count
  fullName: SerializableLinkedList<T>.Count
  nameWithType.vb: SerializableLinkedList(Of T).Count
  fullName.vb: SerializableLinkedList(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SerializableLinkedList`1.IsReadOnly*
  commentId: Overload:Global.SerializableLinkedList`1.IsReadOnly
  name: IsReadOnly
  nameWithType: SerializableLinkedList<T>.IsReadOnly
  fullName: SerializableLinkedList<T>.IsReadOnly
  nameWithType.vb: SerializableLinkedList(Of T).IsReadOnly
  fullName.vb: SerializableLinkedList(Of T).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SerializableLinkedList`1.Add*
  commentId: Overload:Global.SerializableLinkedList`1.Add
  name: Add
  nameWithType: SerializableLinkedList<T>.Add
  fullName: SerializableLinkedList<T>.Add
  nameWithType.vb: SerializableLinkedList(Of T).Add
  fullName.vb: SerializableLinkedList(Of T).Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.SerializableLinkedList`1.Clear*
  commentId: Overload:Global.SerializableLinkedList`1.Clear
  name: Clear
  nameWithType: SerializableLinkedList<T>.Clear
  fullName: SerializableLinkedList<T>.Clear
  nameWithType.vb: SerializableLinkedList(Of T).Clear
  fullName.vb: SerializableLinkedList(Of T).Clear
- uid: Global.SerializableLinkedList`1.Contains*
  commentId: Overload:Global.SerializableLinkedList`1.Contains
  name: Contains
  nameWithType: SerializableLinkedList<T>.Contains
  fullName: SerializableLinkedList<T>.Contains
  nameWithType.vb: SerializableLinkedList(Of T).Contains
  fullName.vb: SerializableLinkedList(Of T).Contains
- uid: Global.SerializableLinkedList`1.CopyTo*
  commentId: Overload:Global.SerializableLinkedList`1.CopyTo
  name: CopyTo
  nameWithType: SerializableLinkedList<T>.CopyTo
  fullName: SerializableLinkedList<T>.CopyTo
  nameWithType.vb: SerializableLinkedList(Of T).CopyTo
  fullName.vb: SerializableLinkedList(Of T).CopyTo
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: Global.SerializableLinkedList`1.GetEnumerator*
  commentId: Overload:Global.SerializableLinkedList`1.GetEnumerator
  name: GetEnumerator
  nameWithType: SerializableLinkedList<T>.GetEnumerator
  fullName: SerializableLinkedList<T>.GetEnumerator
  nameWithType.vb: SerializableLinkedList(Of T).GetEnumerator
  fullName.vb: SerializableLinkedList(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.SerializableLinkedList`1.OnAfterDeserialize*
  commentId: Overload:Global.SerializableLinkedList`1.OnAfterDeserialize
  name: OnAfterDeserialize
  nameWithType: SerializableLinkedList<T>.OnAfterDeserialize
  fullName: SerializableLinkedList<T>.OnAfterDeserialize
  nameWithType.vb: SerializableLinkedList(Of T).OnAfterDeserialize
  fullName.vb: SerializableLinkedList(Of T).OnAfterDeserialize
- uid: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
  commentId: M:UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
  parent: UnityEngine.ISerializationCallbackReceiver
  isExternal: true
  name: OnAfterDeserialize()
  nameWithType: ISerializationCallbackReceiver.OnAfterDeserialize()
  fullName: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
  spec.csharp:
  - uid: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
    name: OnAfterDeserialize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
    name: OnAfterDeserialize
    isExternal: true
  - name: (
  - name: )
- uid: Global.SerializableLinkedList`1.OnBeforeSerialize*
  commentId: Overload:Global.SerializableLinkedList`1.OnBeforeSerialize
  name: OnBeforeSerialize
  nameWithType: SerializableLinkedList<T>.OnBeforeSerialize
  fullName: SerializableLinkedList<T>.OnBeforeSerialize
  nameWithType.vb: SerializableLinkedList(Of T).OnBeforeSerialize
  fullName.vb: SerializableLinkedList(Of T).OnBeforeSerialize
- uid: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
  commentId: M:UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
  parent: UnityEngine.ISerializationCallbackReceiver
  isExternal: true
  name: OnBeforeSerialize()
  nameWithType: ISerializationCallbackReceiver.OnBeforeSerialize()
  fullName: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
  spec.csharp:
  - uid: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
    name: OnBeforeSerialize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
    name: OnBeforeSerialize
    isExternal: true
  - name: (
  - name: )
- uid: Global.SerializableLinkedList`1.Remove*
  commentId: Overload:Global.SerializableLinkedList`1.Remove
  name: Remove
  nameWithType: SerializableLinkedList<T>.Remove
  fullName: SerializableLinkedList<T>.Remove
  nameWithType.vb: SerializableLinkedList(Of T).Remove
  fullName.vb: SerializableLinkedList(Of T).Remove
