### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.AbilityRunner
  commentId: T:LobsterFramework.AbilitySystem.AbilityRunner
  id: AbilityRunner
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked
  - LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd(UnityEngine.AnimationEvent)
  - LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal(UnityEngine.AnimationEvent)
  - LobsterFramework.AbilitySystem.AbilityRunner.BlockAction
  - LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint``2(System.String,System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility(System.Type,System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility``1(System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe``1(System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat``1
  - LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities
  - LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete``1
  - LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility``1(System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation
  - LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady(System.Type,System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady``1(System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning(System.Type,System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning``1(System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating
  - LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities(System.Type,System.Type,System.String,System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus
  - LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData(System.String,System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.Signal``1(System.String)
  - LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation(LobsterFramework.AbilitySystem.Ability,System.String,UnityEngine.AnimationClip,System.Single)
  - LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction(System.Int32)
  - LobsterFramework.AbilitySystem.AbilityRunner.actionLock
  - LobsterFramework.AbilitySystem.AbilityRunner.onAbilityAnimation
  - LobsterFramework.AbilitySystem.AbilityRunner.onAbilityEnqueued
  - LobsterFramework.AbilitySystem.AbilityRunner.onAbilityFinished
  - LobsterFramework.AbilitySystem.AbilityRunner.onActionBlocked
  - LobsterFramework.AbilitySystem.AbilityRunner.onHyperArmored
  langs:
  - csharp
  - vb
  name: AbilityRunner
  nameWithType: AbilityRunner
  fullName: LobsterFramework.AbilitySystem.AbilityRunner
  type: Class
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: AbilityRunner
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 14
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Component that provides access to a variety of movesets, it acts as a container and platform for 

    different kinds of abilitiess and moves which are provided and fully implemented by associated sub-components.

    Requires actionable data to be supplied.
  example: []
  syntax:
    content: >-
      [AddComponentMenu("AbilityRunner")]

      public class AbilityRunner : SubLevelComponent
    content.vb: >-
      <AddComponentMenu("AbilityRunner")>

      Public Class AbilityRunner Inherits SubLevelComponent
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - LobsterFramework.SubLevelComponent
  inheritedMembers:
  - LobsterFramework.SubLevelComponent.TopLevelTransform
  - LobsterFramework.SubLevelComponent.GetTopLevelComponent``1
  - LobsterFramework.SubLevelComponent.GetComponentInBoth``1
  - UnityEngine.MonoBehaviour.IsInvoking
  - UnityEngine.MonoBehaviour.CancelInvoke
  - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  - UnityEngine.MonoBehaviour.IsInvoking(System.String)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  - UnityEngine.MonoBehaviour.StopAllCoroutines
  - UnityEngine.MonoBehaviour.print(System.Object)
  - UnityEngine.MonoBehaviour.destroyCancellationToken
  - UnityEngine.MonoBehaviour.useGUILayout
  - UnityEngine.MonoBehaviour.runInEditMode
  - UnityEngine.Behaviour.enabled
  - UnityEngine.Behaviour.isActiveAndEnabled
  - UnityEngine.Component.GetComponent(System.Type)
  - UnityEngine.Component.GetComponent``1
  - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  - UnityEngine.Component.TryGetComponent``1({T}@)
  - UnityEngine.Component.GetComponent(System.String)
  - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentInChildren(System.Type)
  - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  - UnityEngine.Component.GetComponentInChildren``1
  - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentsInChildren(System.Type)
  - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentsInChildren``1
  - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentInParent(System.Type)
  - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  - UnityEngine.Component.GetComponentInParent``1
  - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentsInParent(System.Type)
  - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentsInParent``1
  - UnityEngine.Component.GetComponents(System.Type)
  - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponents``1
  - UnityEngine.Component.CompareTag(System.String)
  - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  - UnityEngine.Component.SendMessageUpwards(System.String)
  - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessage(System.String,System.Object)
  - UnityEngine.Component.SendMessage(System.String)
  - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  - UnityEngine.Component.BroadcastMessage(System.String)
  - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.transform
  - UnityEngine.Component.gameObject
  - UnityEngine.Component.tag
  - UnityEngine.Object.GetInstanceID
  - UnityEngine.Object.GetHashCode
  - UnityEngine.Object.Equals(System.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Instantiate``1({T})
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  - UnityEngine.Object.Destroy(UnityEngine.Object)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  - UnityEngine.Object.FindObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object)
  - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  - UnityEngine.Object.FindObjectsOfType``1
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectOfType``1
  - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType``1
  - UnityEngine.Object.FindAnyObjectByType``1
  - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type)
  - UnityEngine.Object.FindFirstObjectByType(System.Type)
  - UnityEngine.Object.FindAnyObjectByType(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.ToString
  - UnityEngine.Object.name
  - UnityEngine.Object.hideFlags
  attributes:
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: AbilityRunner
- uid: LobsterFramework.AbilitySystem.AbilityRunner.onActionBlocked
  commentId: F:LobsterFramework.AbilitySystem.AbilityRunner.onActionBlocked
  id: onActionBlocked
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: onActionBlocked
  nameWithType: AbilityRunner.onActionBlocked
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.onActionBlocked
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: onActionBlocked
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 18
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public Action<bool> onActionBlocked
    return:
      type: System.Action{System.Boolean}
    content.vb: Public onActionBlocked As Action(Of Boolean)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.onHyperArmored
  commentId: F:LobsterFramework.AbilitySystem.AbilityRunner.onHyperArmored
  id: onHyperArmored
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: onHyperArmored
  nameWithType: AbilityRunner.onHyperArmored
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.onHyperArmored
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: onHyperArmored
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 19
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public Action<bool> onHyperArmored
    return:
      type: System.Action{System.Boolean}
    content.vb: Public onHyperArmored As Action(Of Boolean)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.onAbilityEnqueued
  commentId: F:LobsterFramework.AbilitySystem.AbilityRunner.onAbilityEnqueued
  id: onAbilityEnqueued
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: onAbilityEnqueued
  nameWithType: AbilityRunner.onAbilityEnqueued
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.onAbilityEnqueued
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: onAbilityEnqueued
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 20
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public Action<Type> onAbilityEnqueued
    return:
      type: System.Action{System.Type}
    content.vb: Public onAbilityEnqueued As Action(Of Type)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.onAbilityFinished
  commentId: F:LobsterFramework.AbilitySystem.AbilityRunner.onAbilityFinished
  id: onAbilityFinished
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: onAbilityFinished
  nameWithType: AbilityRunner.onAbilityFinished
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.onAbilityFinished
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: onAbilityFinished
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 21
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public Action<Type> onAbilityFinished
    return:
      type: System.Action{System.Type}
    content.vb: Public onAbilityFinished As Action(Of Type)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.onAbilityAnimation
  commentId: F:LobsterFramework.AbilitySystem.AbilityRunner.onAbilityAnimation
  id: onAbilityAnimation
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: onAbilityAnimation
  nameWithType: AbilityRunner.onAbilityAnimation
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.onAbilityAnimation
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: onAbilityAnimation
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 37
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Send true if starting ability animation, false if ending ability animation
  example: []
  syntax:
    content: public Action<bool> onAbilityAnimation
    return:
      type: System.Action{System.Boolean}
    content.vb: Public onAbilityAnimation As Action(Of Boolean)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.actionLock
  commentId: F:LobsterFramework.AbilitySystem.AbilityRunner.actionLock
  id: actionLock
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: actionLock
  nameWithType: AbilityRunner.actionLock
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.actionLock
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: actionLock
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 43
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public readonly BaseOr actionLock
    return:
      type: LobsterFramework.Utility.BaseOr
    content.vb: Public ReadOnly actionLock As BaseOr
- uid: LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked
  commentId: P:LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked
  id: ActionBlocked
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: ActionBlocked
  nameWithType: AbilityRunner.ActionBlocked
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked
  type: Property
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: ActionBlocked
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 49
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool ActionBlocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ActionBlocked As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked*
- uid: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility``1(System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility``1(System.String)
  id: EnqueueAbility``1(System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: EnqueueAbility<T>(string)
  nameWithType: AbilityRunner.EnqueueAbility<T>(string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility<T>(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: EnqueueAbility
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 67
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Add the ability with specified type (T) and config (name) to the executing queue, return the status of this operation. <br />

    For this operation to be successful, the following must be satisfied: <br />

    1. The entity must not be action blocked. (i.e Not affected by stun effect) <br />

    2. The specified ability of Type (T) as well as the config (name) must be present in the ability data.<br />

    3. The precondition of the specified ability must be satisfied as well as the cooldown of the config if the ability uses cooldowns. <br />

    4. The specified ability must not be currently running or enqueued. <br />

    <br />

    Note that this method should only be called inside Update(), calling it elsewhere will have unpredictable results.
  example: []
  syntax:
    content: 'public bool EnqueueAbility<T>(string configName = "default") where T : Ability'
    parameters:
    - id: configName
      type: System.String
      description: Name of the configuration to be enqueued
    typeParameters:
    - id: T
      description: Type of the Action to be enqueued
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function EnqueueAbility(Of T As Ability)(configName As String = "default") As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility*
  nameWithType.vb: AbilityRunner.EnqueueAbility(Of T)(String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility(Of T)(String)
  name.vb: EnqueueAbility(Of T)(String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility(System.Type,System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility(System.Type,System.String)
  id: EnqueueAbility(System.Type,System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: EnqueueAbility(Type, string)
  nameWithType: AbilityRunner.EnqueueAbility(Type, string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility(System.Type, string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: EnqueueAbility
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 87
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool EnqueueAbility(Type abilityType, string configName = "default")
    parameters:
    - id: abilityType
      type: System.Type
    - id: configName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function EnqueueAbility(abilityType As Type, configName As String = "default") As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility*
  nameWithType.vb: AbilityRunner.EnqueueAbility(Type, String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility(System.Type, String)
  name.vb: EnqueueAbility(Type, String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint``2(System.String,System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint``2(System.String,System.String)
  id: EnqueueAbilitiesInJoint``2(System.String,System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: EnqueueAbilitiesInJoint<T, V>(string, string)
  nameWithType: AbilityRunner.EnqueueAbilitiesInJoint<T, V>(string, string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint<T, V>(string, string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: EnqueueAbilitiesInJoint
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 115
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Enqueue two abilities of different types together with the second one being guaranteed to <br />

    terminate no later than the first one.
  example: []
  syntax:
    content: 'public bool EnqueueAbilitiesInJoint<T, V>(string configName1 = "default", string configName2 = "default") where T : Ability where V : Ability'
    parameters:
    - id: configName1
      type: System.String
      description: Name of the configuration for the first ability
    - id: configName2
      type: System.String
      description: Name of the configuration for the second ability
    typeParameters:
    - id: T
      description: The type of the first ability
    - id: V
      description: The type of the second ability
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function EnqueueAbilitiesInJoint(Of T As Ability, V As Ability)(configName1 As String = "default", configName2 As String = "default") As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint*
  nameWithType.vb: AbilityRunner.EnqueueAbilitiesInJoint(Of T, V)(String, String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint(Of T, V)(String, String)
  name.vb: EnqueueAbilitiesInJoint(Of T, V)(String, String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat``1
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat``1
  id: GetAbilityStat``1
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: GetAbilityStat<T>()
  nameWithType: AbilityRunner.GetAbilityStat<T>()
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat<T>()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: GetAbilityStat
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 144
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Get the ability stat of type T attached to this Component if it is present.
  example: []
  syntax:
    content: 'public T GetAbilityStat<T>() where T : AbilityStat'
    typeParameters:
    - id: T
      description: Type of the AbilityStat being requested
    return:
      type: '{T}'
      description: Return the ability stat if it is present, otherwise null
    content.vb: Public Function GetAbilityStat(Of T As AbilityStat)() As T
  overload: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat*
  nameWithType.vb: AbilityRunner.GetAbilityStat(Of T)()
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat(Of T)()
  name.vb: GetAbilityStat(Of T)()
- uid: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe``1(System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe``1(System.String)
  id: GetAbilityPipe``1(System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: GetAbilityPipe<T>(string)
  nameWithType: AbilityRunner.GetAbilityPipe<T>(string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe<T>(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: GetAbilityPipe
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 160
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Get the ability pipe of specified ability and configuration
  example: []
  syntax:
    content: 'public Ability.AbilityPipe GetAbilityPipe<T>(string configName = "default") where T : Ability'
    parameters:
    - id: configName
      type: System.String
      description: The name of the ability configuration to pipe to
    typeParameters:
    - id: T
      description: The type of Ability to pipe to.
    return:
      type: LobsterFramework.AbilitySystem.Ability.AbilityPipe
      description: The pipe that connects to the specified ability and configuration if it exists, otherwise return null.
    content.vb: Public Function GetAbilityPipe(Of T As Ability)(configName As String = "default") As Ability.AbilityPipe
  overload: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe*
  nameWithType.vb: AbilityRunner.GetAbilityPipe(Of T)(String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe(Of T)(String)
  name.vb: GetAbilityPipe(Of T)(String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility``1(System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility``1(System.String)
  id: HaltAbility``1(System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: HaltAbility<T>(string)
  nameWithType: AbilityRunner.HaltAbility<T>(string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility<T>(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: HaltAbility
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 174
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Stops the execution of the action and returns the status of this operation
  example: []
  syntax:
    content: 'public bool HaltAbility<T>(string name = "default") where T : Ability'
    parameters:
    - id: name
      type: System.String
      description: Name of the config of T to be halted
    typeParameters:
    - id: T
      description: Type of the action to be halted
    return:
      type: System.Boolean
      description: Return the status of this operation
    content.vb: Public Function HaltAbility(Of T As Ability)(name As String = "default") As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility*
  nameWithType.vb: AbilityRunner.HaltAbility(Of T)(String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility(Of T)(String)
  name.vb: HaltAbility(Of T)(String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete``1
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete``1
  id: HaltAbilityComplete``1
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: HaltAbilityComplete<T>()
  nameWithType: AbilityRunner.HaltAbilityComplete<T>()
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete<T>()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: HaltAbilityComplete
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 190
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Stop the execution of the specified ability on all of its configs
  example: []
  syntax:
    content: 'public bool HaltAbilityComplete<T>() where T : Ability'
    typeParameters:
    - id: T
      description: The type of the ability to be stopped
    return:
      type: System.Boolean
      description: true if the ability exists, otherwise false
    content.vb: Public Function HaltAbilityComplete(Of T As Ability)() As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete*
  nameWithType.vb: AbilityRunner.HaltAbilityComplete(Of T)()
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete(Of T)()
  name.vb: HaltAbilityComplete(Of T)()
- uid: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities
  id: HaltAbilities
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: HaltAbilities()
  nameWithType: AbilityRunner.HaltAbilities()
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: HaltAbilities
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 202
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Stops execution of all active abilities
  example: []
  syntax:
    content: public void HaltAbilities()
    content.vb: Public Sub HaltAbilities()
  overload: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities*
- uid: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady``1(System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady``1(System.String)
  id: IsAbilityReady``1(System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: IsAbilityReady<T>(string)
  nameWithType: AbilityRunner.IsAbilityReady<T>(string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady<T>(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: IsAbilityReady
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 215
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Check if the action instance of type T with config is ready. <br />

    If T is not present or config is not available, return false.
  example: []
  syntax:
    content: 'public bool IsAbilityReady<T>(string config = "default") where T : Ability'
    parameters:
    - id: config
      type: System.String
      description: Name of the config to be queried
    typeParameters:
    - id: T
      description: Type of the Ability to be queried
    return:
      type: System.Boolean
      description: The result of the query
    content.vb: Public Function IsAbilityReady(Of T As Ability)(config As String = "default") As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady*
  nameWithType.vb: AbilityRunner.IsAbilityReady(Of T)(String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady(Of T)(String)
  name.vb: IsAbilityReady(Of T)(String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady(System.Type,System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady(System.Type,System.String)
  id: IsAbilityReady(System.Type,System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: IsAbilityReady(Type, string)
  nameWithType: AbilityRunner.IsAbilityReady(Type, string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady(System.Type, string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: IsAbilityReady
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 225
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool IsAbilityReady(Type abilityType, string config = "default")
    parameters:
    - id: abilityType
      type: System.Type
    - id: config
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsAbilityReady(abilityType As Type, config As String = "default") As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady*
  nameWithType.vb: AbilityRunner.IsAbilityReady(Type, String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady(System.Type, String)
  name.vb: IsAbilityReady(Type, String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning``1(System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning``1(System.String)
  id: IsAbilityRunning``1(System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: IsAbilityRunning<T>(string)
  nameWithType: AbilityRunner.IsAbilityRunning<T>(string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning<T>(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: IsAbilityRunning
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 244
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Check if the ability with specified config is running
  example: []
  syntax:
    content: 'public bool IsAbilityRunning<T>(string configName = "default") where T : Ability'
    parameters:
    - id: configName
      type: System.String
      description: The name of the config being queried
    typeParameters:
    - id: T
      description: The type of the ability being queried
    return:
      type: System.Boolean
      description: true if the ability exists and is running, otherwise false
    content.vb: Public Function IsAbilityRunning(Of T As Ability)(configName As String = "default") As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning*
  nameWithType.vb: AbilityRunner.IsAbilityRunning(Of T)(String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning(Of T)(String)
  name.vb: IsAbilityRunning(Of T)(String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning(System.Type,System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning(System.Type,System.String)
  id: IsAbilityRunning(System.Type,System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: IsAbilityRunning(Type, string)
  nameWithType: AbilityRunner.IsAbilityRunning(Type, string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning(System.Type, string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: IsAbilityRunning
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 258
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Check if the ability with specified config is running
  example: []
  syntax:
    content: public bool IsAbilityRunning(Type abilityType, string configName = "default")
    parameters:
    - id: abilityType
      type: System.Type
    - id: configName
      type: System.String
      description: The name of the config being queried
    return:
      type: System.Boolean
      description: true if the ability exists and is running, otherwise false
    content.vb: Public Function IsAbilityRunning(abilityType As Type, configName As String = "default") As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning*
  nameWithType.vb: AbilityRunner.IsAbilityRunning(Type, String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning(System.Type, String)
  name.vb: IsAbilityRunning(Type, String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities(System.Type,System.Type,System.String,System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities(System.Type,System.Type,System.String,System.String)
  id: JoinAbilities(System.Type,System.Type,System.String,System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: JoinAbilities(Type, Type, string, string)
  nameWithType: AbilityRunner.JoinAbilities(Type, Type, string, string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities(System.Type, System.Type, string, string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: JoinAbilities
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 268
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool JoinAbilities(Type primaryAbility, Type secondaryAbility, string config1, string config2)
    parameters:
    - id: primaryAbility
      type: System.Type
    - id: secondaryAbility
      type: System.Type
    - id: config1
      type: System.String
    - id: config2
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function JoinAbilities(primaryAbility As Type, secondaryAbility As Type, config1 As String, config2 As String) As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities*
  nameWithType.vb: AbilityRunner.JoinAbilities(Type, Type, String, String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities(System.Type, System.Type, String, String)
  name.vb: JoinAbilities(Type, Type, String, String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.BlockAction
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.BlockAction
  id: BlockAction
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: BlockAction()
  nameWithType: AbilityRunner.BlockAction()
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.BlockAction()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: BlockAction
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 283
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Add an effector to block actions, actions will be blocked if there's at least 1 effector.

    An event will be sent to all subscribers on action blocked.
  example: []
  syntax:
    content: public int BlockAction()
    return:
      type: System.Int32
      description: The id of the newly added effector
    content.vb: Public Function BlockAction() As Integer
  overload: LobsterFramework.AbilitySystem.AbilityRunner.BlockAction*
- uid: LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction(System.Int32)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction(System.Int32)
  id: UnblockAction(System.Int32)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: UnblockAction(int)
  nameWithType: AbilityRunner.UnblockAction(int)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction(int)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: UnblockAction
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 300
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Remvoe the specified effector that blocks the action if it exists.

    An event will be sent to subscribers on action unblocked.
  example: []
  syntax:
    content: public bool UnblockAction(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The id of the effector to be removed
    return:
      type: System.Boolean
      description: On successfully removal return true, otherwise false
    content.vb: Public Function UnblockAction(id As Integer) As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction*
  nameWithType.vb: AbilityRunner.UnblockAction(Integer)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction(Integer)
  name.vb: UnblockAction(Integer)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus
  id: ResetStatus
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: ResetStatus()
  nameWithType: AbilityRunner.ResetStatus()
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: ResetStatus
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 315
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Reset the status of all abilities and their configs to their initial state
  example: []
  syntax:
    content: public void ResetStatus()
    content.vb: Public Sub ResetStatus()
  overload: LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus*
- uid: LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData(System.String,System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData(System.String,System.String)
  id: SaveAbilityData(System.String,System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: SaveAbilityData(string, string)
  nameWithType: AbilityRunner.SaveAbilityData(string, string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData(string, string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: SaveAbilityData
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 334
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Only to be called inside play mode! Save the current ability data as an asset with specified assetName to the default path.
  example: []
  syntax:
    content: public void SaveAbilityData(string assetName, string path)
    parameters:
    - id: assetName
      type: System.String
      description: Name of the asset to be saved
    - id: path
      type: System.String
    content.vb: Public Sub SaveAbilityData(assetName As String, path As String)
  overload: LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData*
  nameWithType.vb: AbilityRunner.SaveAbilityData(String, String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData(String, String)
  name.vb: SaveAbilityData(String, String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating
  id: IsAnimating
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: IsAnimating()
  nameWithType: AbilityRunner.IsAnimating()
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: IsAnimating
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 471
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool IsAnimating()
    return:
      type: System.Boolean
    content.vb: Public Function IsAnimating() As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating*
- uid: LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation(LobsterFramework.AbilitySystem.Ability,System.String,UnityEngine.AnimationClip,System.Single)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation(LobsterFramework.AbilitySystem.Ability,System.String,UnityEngine.AnimationClip,System.Single)
  id: StartAnimation(LobsterFramework.AbilitySystem.Ability,System.String,UnityEngine.AnimationClip,System.Single)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: StartAnimation(Ability, string, AnimationClip, float)
  nameWithType: AbilityRunner.StartAnimation(Ability, string, AnimationClip, float)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation(LobsterFramework.AbilitySystem.Ability, string, UnityEngine.AnimationClip, float)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: StartAnimation
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 482
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Used by abilities to initiate animations, will override any currently running animations by other abilities
  example: []
  syntax:
    content: public AnimancerState StartAnimation(Ability ability, string configName, AnimationClip animation, float speed = 1)
    parameters:
    - id: ability
      type: LobsterFramework.AbilitySystem.Ability
    - id: configName
      type: System.String
      description: ''
    - id: animation
      type: UnityEngine.AnimationClip
      description: ''
    - id: speed
      type: System.Single
    return:
      type: Animancer.AnimancerState
    content.vb: Public Function StartAnimation(ability As Ability, configName As String, animation As AnimationClip, speed As Single = 1) As AnimancerState
  overload: LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation*
  nameWithType.vb: AbilityRunner.StartAnimation(Ability, String, AnimationClip, Single)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation(LobsterFramework.AbilitySystem.Ability, String, UnityEngine.AnimationClip, Single)
  name.vb: StartAnimation(Ability, String, AnimationClip, Single)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation
  id: InterruptAbilityAnimation
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: InterruptAbilityAnimation()
  nameWithType: AbilityRunner.InterruptAbilityAnimation()
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: InterruptAbilityAnimation
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 519
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void InterruptAbilityAnimation()
    content.vb: Public Sub InterruptAbilityAnimation()
  overload: LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation*
- uid: LobsterFramework.AbilitySystem.AbilityRunner.Signal``1(System.String)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.Signal``1(System.String)
  id: Signal``1(System.String)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: Signal<T>(string)
  nameWithType: AbilityRunner.Signal<T>(string)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.Signal<T>(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: Signal
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 531
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Send a signal to the specified ability.
  example: []
  syntax:
    content: 'public void Signal<T>(string configName = "default") where T : Ability'
    parameters:
    - id: configName
      type: System.String
    typeParameters:
    - id: T
    content.vb: Public Sub Signal(Of T As Ability)(configName As String = "default")
  overload: LobsterFramework.AbilitySystem.AbilityRunner.Signal*
  nameWithType.vb: AbilityRunner.Signal(Of T)(String)
  fullName.vb: LobsterFramework.AbilitySystem.AbilityRunner.Signal(Of T)(String)
  name.vb: Signal(Of T)(String)
- uid: LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal(UnityEngine.AnimationEvent)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal(UnityEngine.AnimationEvent)
  id: AnimationSignal(UnityEngine.AnimationEvent)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: AnimationSignal(AnimationEvent)
  nameWithType: AbilityRunner.AnimationSignal(AnimationEvent)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal(UnityEngine.AnimationEvent)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: AnimationSignal
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 543
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Used by animation events to send signals
  example: []
  syntax:
    content: public void AnimationSignal(AnimationEvent animationEvent)
    parameters:
    - id: animationEvent
      type: UnityEngine.AnimationEvent
    content.vb: Public Sub AnimationSignal(animationEvent As AnimationEvent)
  overload: LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal*
- uid: LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd(UnityEngine.AnimationEvent)
  commentId: M:LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd(UnityEngine.AnimationEvent)
  id: AnimationEnd(UnityEngine.AnimationEvent)
  parent: LobsterFramework.AbilitySystem.AbilityRunner
  langs:
  - csharp
  - vb
  name: AnimationEnd(AnimationEvent)
  nameWithType: AbilityRunner.AnimationEnd(AnimationEvent)
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd(UnityEngine.AnimationEvent)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/AbilitySystem/AbilityRunner.cs
    id: AnimationEnd
    path: ../Assets/Framework/AbilitySystem/AbilityRunner.cs
    startLine: 550
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void AnimationEnd(AnimationEvent animationEvent)
    parameters:
    - id: animationEvent
      type: UnityEngine.AnimationEvent
    content.vb: Public Sub AnimationEnd(animationEvent As AnimationEvent)
  overload: LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd*
references:
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  href: LobsterFramework.html
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: LobsterFramework.SubLevelComponent
  commentId: T:LobsterFramework.SubLevelComponent
  parent: LobsterFramework
  href: LobsterFramework.SubLevelComponent.html
  name: SubLevelComponent
  nameWithType: SubLevelComponent
  fullName: LobsterFramework.SubLevelComponent
- uid: LobsterFramework.SubLevelComponent.TopLevelTransform
  commentId: P:LobsterFramework.SubLevelComponent.TopLevelTransform
  parent: LobsterFramework.SubLevelComponent
  href: LobsterFramework.SubLevelComponent.html#LobsterFramework.SubLevelComponent.TopLevelTransform
  name: TopLevelTransform
  nameWithType: SubLevelComponent.TopLevelTransform
  fullName: LobsterFramework.SubLevelComponent.TopLevelTransform
- uid: LobsterFramework.SubLevelComponent.GetTopLevelComponent``1
  commentId: M:LobsterFramework.SubLevelComponent.GetTopLevelComponent``1
  parent: LobsterFramework.SubLevelComponent
  href: LobsterFramework.SubLevelComponent.html#LobsterFramework.SubLevelComponent.GetTopLevelComponent``1
  name: GetTopLevelComponent<T>()
  nameWithType: SubLevelComponent.GetTopLevelComponent<T>()
  fullName: LobsterFramework.SubLevelComponent.GetTopLevelComponent<T>()
  nameWithType.vb: SubLevelComponent.GetTopLevelComponent(Of T)()
  fullName.vb: LobsterFramework.SubLevelComponent.GetTopLevelComponent(Of T)()
  name.vb: GetTopLevelComponent(Of T)()
  spec.csharp:
  - uid: LobsterFramework.SubLevelComponent.GetTopLevelComponent``1
    name: GetTopLevelComponent
    href: LobsterFramework.SubLevelComponent.html#LobsterFramework.SubLevelComponent.GetTopLevelComponent``1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.SubLevelComponent.GetTopLevelComponent``1
    name: GetTopLevelComponent
    href: LobsterFramework.SubLevelComponent.html#LobsterFramework.SubLevelComponent.GetTopLevelComponent``1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: LobsterFramework.SubLevelComponent.GetComponentInBoth``1
  commentId: M:LobsterFramework.SubLevelComponent.GetComponentInBoth``1
  parent: LobsterFramework.SubLevelComponent
  href: LobsterFramework.SubLevelComponent.html#LobsterFramework.SubLevelComponent.GetComponentInBoth``1
  name: GetComponentInBoth<T>()
  nameWithType: SubLevelComponent.GetComponentInBoth<T>()
  fullName: LobsterFramework.SubLevelComponent.GetComponentInBoth<T>()
  nameWithType.vb: SubLevelComponent.GetComponentInBoth(Of T)()
  fullName.vb: LobsterFramework.SubLevelComponent.GetComponentInBoth(Of T)()
  name.vb: GetComponentInBoth(Of T)()
  spec.csharp:
  - uid: LobsterFramework.SubLevelComponent.GetComponentInBoth``1
    name: GetComponentInBoth
    href: LobsterFramework.SubLevelComponent.html#LobsterFramework.SubLevelComponent.GetComponentInBoth``1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.SubLevelComponent.GetComponentInBoth``1
    name: GetComponentInBoth
    href: LobsterFramework.SubLevelComponent.html#LobsterFramework.SubLevelComponent.GetComponentInBoth``1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.MonoBehaviour.IsInvoking
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: IsInvoking()
  nameWithType: MonoBehaviour.IsInvoking()
  fullName: UnityEngine.MonoBehaviour.IsInvoking()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking
    name: IsInvoking
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking
    name: IsInvoking
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: CancelInvoke()
  nameWithType: MonoBehaviour.CancelInvoke()
  fullName: UnityEngine.MonoBehaviour.CancelInvoke()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke
    name: CancelInvoke
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke
    name: CancelInvoke
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Invoke(string, float)
  nameWithType: MonoBehaviour.Invoke(string, float)
  fullName: UnityEngine.MonoBehaviour.Invoke(string, float)
  nameWithType.vb: MonoBehaviour.Invoke(String, Single)
  fullName.vb: UnityEngine.MonoBehaviour.Invoke(String, Single)
  name.vb: Invoke(String, Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    name: Invoke
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    name: Invoke
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: InvokeRepeating(string, float, float)
  nameWithType: MonoBehaviour.InvokeRepeating(string, float, float)
  fullName: UnityEngine.MonoBehaviour.InvokeRepeating(string, float, float)
  nameWithType.vb: MonoBehaviour.InvokeRepeating(String, Single, Single)
  fullName.vb: UnityEngine.MonoBehaviour.InvokeRepeating(String, Single, Single)
  name.vb: InvokeRepeating(String, Single, Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    name: InvokeRepeating
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    name: InvokeRepeating
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CancelInvoke(string)
  nameWithType: MonoBehaviour.CancelInvoke(string)
  fullName: UnityEngine.MonoBehaviour.CancelInvoke(string)
  nameWithType.vb: MonoBehaviour.CancelInvoke(String)
  fullName.vb: UnityEngine.MonoBehaviour.CancelInvoke(String)
  name.vb: CancelInvoke(String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    name: CancelInvoke
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    name: CancelInvoke
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsInvoking(string)
  nameWithType: MonoBehaviour.IsInvoking(string)
  fullName: UnityEngine.MonoBehaviour.IsInvoking(string)
  nameWithType.vb: MonoBehaviour.IsInvoking(String)
  fullName.vb: UnityEngine.MonoBehaviour.IsInvoking(String)
  name.vb: IsInvoking(String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
    name: IsInvoking
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
    name: IsInvoking
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: StartCoroutine(string)
  nameWithType: MonoBehaviour.StartCoroutine(string)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(string)
  nameWithType.vb: MonoBehaviour.StartCoroutine(String)
  fullName.vb: UnityEngine.MonoBehaviour.StartCoroutine(String)
  name.vb: StartCoroutine(String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: StartCoroutine(string, object)
  nameWithType: MonoBehaviour.StartCoroutine(string, object)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(string, object)
  nameWithType.vb: MonoBehaviour.StartCoroutine(String, Object)
  fullName.vb: UnityEngine.MonoBehaviour.StartCoroutine(String, Object)
  name.vb: StartCoroutine(String, Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: StartCoroutine(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutine(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: StartCoroutine_Auto(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutine_Auto(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    name: StartCoroutine_Auto
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    name: StartCoroutine_Auto
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: StopCoroutine(IEnumerator)
  nameWithType: MonoBehaviour.StopCoroutine(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  - name: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutine(Coroutine)
  nameWithType: MonoBehaviour.StopCoroutine(Coroutine)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    isExternal: true
  - name: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: StopCoroutine(string)
  nameWithType: MonoBehaviour.StopCoroutine(string)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(string)
  nameWithType.vb: MonoBehaviour.StopCoroutine(String)
  fullName.vb: UnityEngine.MonoBehaviour.StopCoroutine(String)
  name.vb: StopCoroutine(String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    name: StopCoroutine
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.MonoBehaviour.StopAllCoroutines
  commentId: M:UnityEngine.MonoBehaviour.StopAllCoroutines
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopAllCoroutines()
  nameWithType: MonoBehaviour.StopAllCoroutines()
  fullName: UnityEngine.MonoBehaviour.StopAllCoroutines()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopAllCoroutines
    name: StopAllCoroutines
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopAllCoroutines
    name: StopAllCoroutines
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.MonoBehaviour.print(System.Object)
  commentId: M:UnityEngine.MonoBehaviour.print(System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: print(object)
  nameWithType: MonoBehaviour.print(object)
  fullName: UnityEngine.MonoBehaviour.print(object)
  nameWithType.vb: MonoBehaviour.print(Object)
  fullName.vb: UnityEngine.MonoBehaviour.print(Object)
  name.vb: print(Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.print(System.Object)
    name: print
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.print(System.Object)
    name: print
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.MonoBehaviour.destroyCancellationToken
  commentId: P:UnityEngine.MonoBehaviour.destroyCancellationToken
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: destroyCancellationToken
  nameWithType: MonoBehaviour.destroyCancellationToken
  fullName: UnityEngine.MonoBehaviour.destroyCancellationToken
- uid: UnityEngine.MonoBehaviour.useGUILayout
  commentId: P:UnityEngine.MonoBehaviour.useGUILayout
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: useGUILayout
  nameWithType: MonoBehaviour.useGUILayout
  fullName: UnityEngine.MonoBehaviour.useGUILayout
- uid: UnityEngine.MonoBehaviour.runInEditMode
  commentId: P:UnityEngine.MonoBehaviour.runInEditMode
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: runInEditMode
  nameWithType: MonoBehaviour.runInEditMode
  fullName: UnityEngine.MonoBehaviour.runInEditMode
- uid: UnityEngine.Behaviour.enabled
  commentId: P:UnityEngine.Behaviour.enabled
  parent: UnityEngine.Behaviour
  isExternal: true
  name: enabled
  nameWithType: Behaviour.enabled
  fullName: UnityEngine.Behaviour.enabled
- uid: UnityEngine.Behaviour.isActiveAndEnabled
  commentId: P:UnityEngine.Behaviour.isActiveAndEnabled
  parent: UnityEngine.Behaviour
  isExternal: true
  name: isActiveAndEnabled
  nameWithType: Behaviour.isActiveAndEnabled
  fullName: UnityEngine.Behaviour.isActiveAndEnabled
- uid: UnityEngine.Component.GetComponent(System.Type)
  commentId: M:UnityEngine.Component.GetComponent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponent(Type)
  nameWithType: Component.GetComponent(Type)
  fullName: UnityEngine.Component.GetComponent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent(System.Type)
    name: GetComponent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent(System.Type)
    name: GetComponent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponent``1
  commentId: M:UnityEngine.Component.GetComponent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponent<T>()
  nameWithType: Component.GetComponent<T>()
  fullName: UnityEngine.Component.GetComponent<T>()
  nameWithType.vb: Component.GetComponent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponent(Of T)()
  name.vb: GetComponent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent``1
    name: GetComponent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent``1
    name: GetComponent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  commentId: M:UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: TryGetComponent(Type, out Component)
  nameWithType: Component.TryGetComponent(Type, out Component)
  fullName: UnityEngine.Component.TryGetComponent(System.Type, out UnityEngine.Component)
  nameWithType.vb: Component.TryGetComponent(Type, Component)
  fullName.vb: UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component)
  name.vb: TryGetComponent(Type, Component)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    name: TryGetComponent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: UnityEngine.Component
    name: Component
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    name: TryGetComponent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.Component
    name: Component
    isExternal: true
  - name: )
- uid: UnityEngine.Component.TryGetComponent``1({T}@)
  commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  parent: UnityEngine.Component
  definition: UnityEngine.Component.TryGetComponent``1(``0@)
  name: TryGetComponent<T>(out T)
  nameWithType: Component.TryGetComponent<T>(out T)
  fullName: UnityEngine.Component.TryGetComponent<T>(out T)
  nameWithType.vb: Component.TryGetComponent(Of T)(T)
  fullName.vb: UnityEngine.Component.TryGetComponent(Of T)(T)
  name.vb: TryGetComponent(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Component.GetComponent(System.String)
  commentId: M:UnityEngine.Component.GetComponent(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetComponent(string)
  nameWithType: Component.GetComponent(string)
  fullName: UnityEngine.Component.GetComponent(string)
  nameWithType.vb: Component.GetComponent(String)
  fullName.vb: UnityEngine.Component.GetComponent(String)
  name.vb: GetComponent(String)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent(System.String)
    name: GetComponent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent(System.String)
    name: GetComponent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentInChildren(Type, bool)
  nameWithType: Component.GetComponentInChildren(Type, bool)
  fullName: UnityEngine.Component.GetComponentInChildren(System.Type, bool)
  nameWithType.vb: Component.GetComponentInChildren(Type, Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInChildren(System.Type, Boolean)
  name.vb: GetComponentInChildren(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentInChildren(System.Type)
  commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentInChildren(Type)
  nameWithType: Component.GetComponentInChildren(Type)
  fullName: UnityEngine.Component.GetComponentInChildren(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentInChildren<T>(bool)
  nameWithType: Component.GetComponentInChildren<T>(bool)
  fullName: UnityEngine.Component.GetComponentInChildren<T>(bool)
  nameWithType.vb: Component.GetComponentInChildren(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInChildren(Of T)(Boolean)
  name.vb: GetComponentInChildren(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    name: GetComponentInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentInChildren``1
  commentId: M:UnityEngine.Component.GetComponentInChildren``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren<T>()
  nameWithType: Component.GetComponentInChildren<T>()
  fullName: UnityEngine.Component.GetComponentInChildren<T>()
  nameWithType.vb: Component.GetComponentInChildren(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentInChildren(Of T)()
  name.vb: GetComponentInChildren(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren``1
    name: GetComponentInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren``1
    name: GetComponentInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentsInChildren(Type, bool)
  nameWithType: Component.GetComponentsInChildren(Type, bool)
  fullName: UnityEngine.Component.GetComponentsInChildren(System.Type, bool)
  nameWithType.vb: Component.GetComponentsInChildren(Type, Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(System.Type, Boolean)
  name.vb: GetComponentsInChildren(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
  commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentsInChildren(Type)
  nameWithType: Component.GetComponentsInChildren(Type)
  fullName: UnityEngine.Component.GetComponentsInChildren(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInChildren<T>(bool)
  nameWithType: Component.GetComponentsInChildren<T>(bool)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(bool)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(Boolean)
  name.vb: GetComponentsInChildren(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInChildren<T>(bool, List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(bool, List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren<T>()
  nameWithType: Component.GetComponentsInChildren<T>()
  fullName: UnityEngine.Component.GetComponentsInChildren<T>()
  nameWithType.vb: Component.GetComponentsInChildren(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)()
  name.vb: GetComponentsInChildren(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetComponentsInChildren<T>(List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentInParent(Type, bool)
  nameWithType: Component.GetComponentInParent(Type, bool)
  fullName: UnityEngine.Component.GetComponentInParent(System.Type, bool)
  nameWithType.vb: Component.GetComponentInParent(Type, Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInParent(System.Type, Boolean)
  name.vb: GetComponentInParent(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentInParent(System.Type)
  commentId: M:UnityEngine.Component.GetComponentInParent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentInParent(Type)
  nameWithType: Component.GetComponentInParent(Type)
  fullName: UnityEngine.Component.GetComponentInParent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentInParent<T>(bool)
  nameWithType: Component.GetComponentInParent<T>(bool)
  fullName: UnityEngine.Component.GetComponentInParent<T>(bool)
  nameWithType.vb: Component.GetComponentInParent(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInParent(Of T)(Boolean)
  name.vb: GetComponentInParent(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    name: GetComponentInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    name: GetComponentInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentInParent``1
  commentId: M:UnityEngine.Component.GetComponentInParent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInParent<T>()
  nameWithType: Component.GetComponentInParent<T>()
  fullName: UnityEngine.Component.GetComponentInParent<T>()
  nameWithType.vb: Component.GetComponentInParent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentInParent(Of T)()
  name.vb: GetComponentInParent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent``1
    name: GetComponentInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent``1
    name: GetComponentInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentsInParent(Type, bool)
  nameWithType: Component.GetComponentsInParent(Type, bool)
  fullName: UnityEngine.Component.GetComponentsInParent(System.Type, bool)
  nameWithType.vb: Component.GetComponentsInParent(Type, Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInParent(System.Type, Boolean)
  name.vb: GetComponentsInParent(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent(System.Type)
  commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponentsInParent(Type)
  nameWithType: Component.GetComponentsInParent(Type)
  fullName: UnityEngine.Component.GetComponentsInParent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInParent<T>(bool)
  nameWithType: Component.GetComponentsInParent<T>(bool)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(bool)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(Boolean)
  name.vb: GetComponentsInParent(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    name: GetComponentsInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInParent<T>(bool, List<T>)
  nameWithType: Component.GetComponentsInParent<T>(bool, List<T>)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInParent(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent``1
  commentId: M:UnityEngine.Component.GetComponentsInParent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent<T>()
  nameWithType: Component.GetComponentsInParent<T>()
  fullName: UnityEngine.Component.GetComponentsInParent<T>()
  nameWithType.vb: Component.GetComponentsInParent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)()
  name.vb: GetComponentsInParent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1
    name: GetComponentsInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.GetComponents(System.Type)
  commentId: M:UnityEngine.Component.GetComponents(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponents(Type)
  nameWithType: Component.GetComponents(Type)
  fullName: UnityEngine.Component.GetComponents(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents(System.Type)
    name: GetComponents
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents(System.Type)
    name: GetComponents
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  commentId: M:UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetComponents(Type, List<Component>)
  nameWithType: Component.GetComponents(Type, List<Component>)
  fullName: UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>)
  nameWithType.vb: Component.GetComponents(Type, List(Of Component))
  fullName.vb: UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List(Of UnityEngine.Component))
  name.vb: GetComponents(Type, List(Of Component))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    name: GetComponents
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Component
    name: Component
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    name: GetComponents
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Component
    name: Component
    isExternal: true
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetComponents<T>(List<T>)
  nameWithType: Component.GetComponents<T>(List<T>)
  fullName: UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponents(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponents(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponents(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponents``1
  commentId: M:UnityEngine.Component.GetComponents``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponents<T>()
  nameWithType: Component.GetComponents<T>()
  fullName: UnityEngine.Component.GetComponents<T>()
  nameWithType.vb: Component.GetComponents(Of T)()
  fullName.vb: UnityEngine.Component.GetComponents(Of T)()
  name.vb: GetComponents(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1
    name: GetComponents
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1
    name: GetComponents
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Component.CompareTag(System.String)
  commentId: M:UnityEngine.Component.CompareTag(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CompareTag(string)
  nameWithType: Component.CompareTag(string)
  fullName: UnityEngine.Component.CompareTag(string)
  nameWithType.vb: Component.CompareTag(String)
  fullName.vb: UnityEngine.Component.CompareTag(String)
  name.vb: CompareTag(String)
  spec.csharp:
  - uid: UnityEngine.Component.CompareTag(System.String)
    name: CompareTag
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.CompareTag(System.String)
    name: CompareTag
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessageUpwards(string, object, SendMessageOptions)
  nameWithType: Component.SendMessageUpwards(string, object, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessageUpwards(string, object, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.SendMessageUpwards(String, Object, SendMessageOptions)
  fullName.vb: UnityEngine.Component.SendMessageUpwards(String, Object, UnityEngine.SendMessageOptions)
  name.vb: SendMessageUpwards(String, Object, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessageUpwards(string, object)
  nameWithType: Component.SendMessageUpwards(string, object)
  fullName: UnityEngine.Component.SendMessageUpwards(string, object)
  nameWithType.vb: Component.SendMessageUpwards(String, Object)
  fullName.vb: UnityEngine.Component.SendMessageUpwards(String, Object)
  name.vb: SendMessageUpwards(String, Object)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessageUpwards(string)
  nameWithType: Component.SendMessageUpwards(string)
  fullName: UnityEngine.Component.SendMessageUpwards(string)
  nameWithType.vb: Component.SendMessageUpwards(String)
  fullName.vb: UnityEngine.Component.SendMessageUpwards(String)
  name.vb: SendMessageUpwards(String)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessageUpwards(string, SendMessageOptions)
  nameWithType: Component.SendMessageUpwards(string, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessageUpwards(string, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.SendMessageUpwards(String, SendMessageOptions)
  fullName.vb: UnityEngine.Component.SendMessageUpwards(String, UnityEngine.SendMessageOptions)
  name.vb: SendMessageUpwards(String, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.SendMessage(System.String,System.Object)
  commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessage(string, object)
  nameWithType: Component.SendMessage(string, object)
  fullName: UnityEngine.Component.SendMessage(string, object)
  nameWithType.vb: Component.SendMessage(String, Object)
  fullName.vb: UnityEngine.Component.SendMessage(String, Object)
  name.vb: SendMessage(String, Object)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Component.SendMessage(System.String)
  commentId: M:UnityEngine.Component.SendMessage(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessage(string)
  nameWithType: Component.SendMessage(string)
  fullName: UnityEngine.Component.SendMessage(string)
  nameWithType.vb: Component.SendMessage(String)
  fullName.vb: UnityEngine.Component.SendMessage(String)
  name.vb: SendMessage(String)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessage(string, object, SendMessageOptions)
  nameWithType: Component.SendMessage(string, object, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessage(string, object, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.SendMessage(String, Object, SendMessageOptions)
  fullName.vb: UnityEngine.Component.SendMessage(String, Object, UnityEngine.SendMessageOptions)
  name.vb: SendMessage(String, Object, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SendMessage(string, SendMessageOptions)
  nameWithType: Component.SendMessage(string, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessage(string, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.SendMessage(String, SendMessageOptions)
  fullName.vb: UnityEngine.Component.SendMessage(String, UnityEngine.SendMessageOptions)
  name.vb: SendMessage(String, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    name: SendMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BroadcastMessage(string, object, SendMessageOptions)
  nameWithType: Component.BroadcastMessage(string, object, SendMessageOptions)
  fullName: UnityEngine.Component.BroadcastMessage(string, object, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.BroadcastMessage(String, Object, SendMessageOptions)
  fullName.vb: UnityEngine.Component.BroadcastMessage(String, Object, UnityEngine.SendMessageOptions)
  name.vb: BroadcastMessage(String, Object, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BroadcastMessage(string, object)
  nameWithType: Component.BroadcastMessage(string, object)
  fullName: UnityEngine.Component.BroadcastMessage(string, object)
  nameWithType.vb: Component.BroadcastMessage(String, Object)
  fullName.vb: UnityEngine.Component.BroadcastMessage(String, Object)
  name.vb: BroadcastMessage(String, Object)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Component.BroadcastMessage(System.String)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BroadcastMessage(string)
  nameWithType: Component.BroadcastMessage(string)
  fullName: UnityEngine.Component.BroadcastMessage(string)
  nameWithType.vb: Component.BroadcastMessage(String)
  fullName.vb: UnityEngine.Component.BroadcastMessage(String)
  name.vb: BroadcastMessage(String)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BroadcastMessage(string, SendMessageOptions)
  nameWithType: Component.BroadcastMessage(string, SendMessageOptions)
  fullName: UnityEngine.Component.BroadcastMessage(string, UnityEngine.SendMessageOptions)
  nameWithType.vb: Component.BroadcastMessage(String, SendMessageOptions)
  fullName.vb: UnityEngine.Component.BroadcastMessage(String, UnityEngine.SendMessageOptions)
  name.vb: BroadcastMessage(String, SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    isExternal: true
  - name: )
- uid: UnityEngine.Component.transform
  commentId: P:UnityEngine.Component.transform
  parent: UnityEngine.Component
  isExternal: true
  name: transform
  nameWithType: Component.transform
  fullName: UnityEngine.Component.transform
- uid: UnityEngine.Component.gameObject
  commentId: P:UnityEngine.Component.gameObject
  parent: UnityEngine.Component
  isExternal: true
  name: gameObject
  nameWithType: Component.gameObject
  fullName: UnityEngine.Component.gameObject
- uid: UnityEngine.Component.tag
  commentId: P:UnityEngine.Component.tag
  parent: UnityEngine.Component
  isExternal: true
  name: tag
  nameWithType: Component.tag
  fullName: UnityEngine.Component.tag
- uid: UnityEngine.Object.GetInstanceID
  commentId: M:UnityEngine.Object.GetInstanceID
  parent: UnityEngine.Object
  isExternal: true
  name: GetInstanceID()
  nameWithType: Object.GetInstanceID()
  fullName: UnityEngine.Object.GetInstanceID()
  spec.csharp:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Equals(object)
  nameWithType: Object.Equals(object)
  fullName: UnityEngine.Object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: UnityEngine.Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object)
  nameWithType: Object.Instantiate(Object)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform)
  nameWithType: Object.Instantiate(Object, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate(Object, Transform, bool)
  nameWithType: Object.Instantiate(Object, Transform, bool)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Object, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Object, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T})
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0)
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Destroy(Object, float)
  nameWithType: Object.Destroy(Object, float)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object, float)
  nameWithType.vb: Object.Destroy(Object, Single)
  fullName.vb: UnityEngine.Object.Destroy(UnityEngine.Object, Single)
  name.vb: Destroy(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object)
  nameWithType: Object.Destroy(Object)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DestroyImmediate(Object, bool)
  nameWithType: Object.DestroyImmediate(Object, bool)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, bool)
  nameWithType.vb: Object.DestroyImmediate(Object, Boolean)
  fullName.vb: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, Boolean)
  name.vb: DestroyImmediate(Object, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object)
  nameWithType: Object.DestroyImmediate(Object)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type)
  nameWithType: Object.FindObjectsOfType(Type)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type, bool)
  nameWithType: Object.FindObjectsOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectsOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(System.Type, Boolean)
  name.vb: FindObjectsOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DontDestroyOnLoad(Object)
  nameWithType: Object.DontDestroyOnLoad(Object)
  fullName: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DestroyObject(Object, float)
  nameWithType: Object.DestroyObject(Object, float)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object, float)
  nameWithType.vb: Object.DestroyObject(Object, Single)
  fullName.vb: UnityEngine.Object.DestroyObject(UnityEngine.Object, Single)
  name.vb: DestroyObject(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object)
  nameWithType: Object.DestroyObject(Object)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindSceneObjectsOfType(Type)
  nameWithType: Object.FindSceneObjectsOfType(Type)
  fullName: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeIncludingAssets(Type)
  nameWithType: Object.FindObjectsOfTypeIncludingAssets(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1
  commentId: M:UnityEngine.Object.FindObjectsOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>()
  nameWithType: Object.FindObjectsOfType<T>()
  fullName: UnityEngine.Object.FindObjectsOfType<T>()
  nameWithType.vb: Object.FindObjectsOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)()
  name.vb: FindObjectsOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectsOfType<T>(bool)
  nameWithType: Object.FindObjectsOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectsOfType<T>(bool)
  nameWithType.vb: Object.FindObjectsOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)(Boolean)
  name.vb: FindObjectsOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1
  commentId: M:UnityEngine.Object.FindObjectOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>()
  nameWithType: Object.FindObjectOfType<T>()
  fullName: UnityEngine.Object.FindObjectOfType<T>()
  nameWithType.vb: Object.FindObjectOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)()
  name.vb: FindObjectOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectOfType<T>(bool)
  nameWithType: Object.FindObjectOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectOfType<T>(bool)
  nameWithType.vb: Object.FindObjectOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)(Boolean)
  name.vb: FindObjectOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>()
  nameWithType: Object.FindFirstObjectByType<T>()
  fullName: UnityEngine.Object.FindFirstObjectByType<T>()
  nameWithType.vb: Object.FindFirstObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)()
  name.vb: FindFirstObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>()
  nameWithType: Object.FindAnyObjectByType<T>()
  fullName: UnityEngine.Object.FindAnyObjectByType<T>()
  nameWithType.vb: Object.FindAnyObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)()
  name.vb: FindAnyObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindFirstObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindFirstObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindAnyObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindAnyObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeAll(Type)
  nameWithType: Object.FindObjectsOfTypeAll(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type)
  nameWithType: Object.FindObjectOfType(Type)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type)
  nameWithType: Object.FindFirstObjectByType(Type)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type)
  nameWithType: Object.FindAnyObjectByType(Type)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type, bool)
  nameWithType: Object.FindObjectOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(System.Type, Boolean)
  name.vb: FindObjectOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.ToString
  commentId: M:UnityEngine.Object.ToString
  parent: UnityEngine.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: UnityEngine.Object.ToString()
  spec.csharp:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  parent: UnityEngine.Object
  isExternal: true
  name: name
  nameWithType: Object.name
  fullName: UnityEngine.Object.name
- uid: UnityEngine.Object.hideFlags
  commentId: P:UnityEngine.Object.hideFlags
  parent: UnityEngine.Object
  isExternal: true
  name: hideFlags
  nameWithType: Object.hideFlags
  fullName: UnityEngine.Object.hideFlags
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: LobsterFramework
  commentId: N:LobsterFramework
  href: LobsterFramework.html
  name: LobsterFramework
  nameWithType: LobsterFramework
  fullName: LobsterFramework
- uid: UnityEngine.Component.TryGetComponent``1(``0@)
  commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  isExternal: true
  name: TryGetComponent<T>(out T)
  nameWithType: Component.TryGetComponent<T>(out T)
  fullName: UnityEngine.Component.TryGetComponent<T>(out T)
  nameWithType.vb: Component.TryGetComponent(Of T)(T)
  fullName.vb: UnityEngine.Component.TryGetComponent(Of T)(T)
  name.vb: TryGetComponent(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInChildren<T>(bool, List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(bool, List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetComponentsInChildren<T>(List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetComponentsInParent<T>(bool, List<T>)
  nameWithType: Component.GetComponentsInParent<T>(bool, List<T>)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInParent(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetComponents<T>(List<T>)
  nameWithType: Component.GetComponents<T>(List<T>)
  fullName: UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponents(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponents(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponents(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0)
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  isExternal: true
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action{System.Boolean}
  commentId: T:System.Action{System.Boolean}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<bool>
  nameWithType: Action<bool>
  fullName: System.Action<bool>
  nameWithType.vb: Action(Of Boolean)
  fullName.vb: System.Action(Of Boolean)
  name.vb: Action(Of Boolean)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{System.Type}
  commentId: T:System.Action{System.Type}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Type>
  nameWithType: Action<Type>
  fullName: System.Action<System.Type>
  nameWithType.vb: Action(Of Type)
  fullName.vb: System.Action(Of System.Type)
  name.vb: Action(Of Type)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: LobsterFramework.Utility.BaseOr
  commentId: T:LobsterFramework.Utility.BaseOr
  parent: LobsterFramework.Utility
  href: LobsterFramework.Utility.BaseOr.html
  name: BaseOr
  nameWithType: BaseOr
  fullName: LobsterFramework.Utility.BaseOr
- uid: LobsterFramework.Utility
  commentId: N:LobsterFramework.Utility
  href: LobsterFramework.html
  name: LobsterFramework.Utility
  nameWithType: LobsterFramework.Utility
  fullName: LobsterFramework.Utility
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
- uid: LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked
  name: ActionBlocked
  nameWithType: AbilityRunner.ActionBlocked
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.ActionBlocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility``1(System.String)
  name: EnqueueAbility
  nameWithType: AbilityRunner.EnqueueAbility
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbility
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint``2(System.String,System.String)
  name: EnqueueAbilitiesInJoint
  nameWithType: AbilityRunner.EnqueueAbilitiesInJoint
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.EnqueueAbilitiesInJoint
- uid: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat``1
  name: GetAbilityStat
  nameWithType: AbilityRunner.GetAbilityStat
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityStat
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe``1(System.String)
  name: GetAbilityPipe
  nameWithType: AbilityRunner.GetAbilityPipe
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.GetAbilityPipe
- uid: LobsterFramework.AbilitySystem.Ability.AbilityPipe
  commentId: T:LobsterFramework.AbilitySystem.Ability.AbilityPipe
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.Ability.html
  name: Ability.AbilityPipe
  nameWithType: Ability.AbilityPipe
  fullName: LobsterFramework.AbilitySystem.Ability.AbilityPipe
  spec.csharp:
  - uid: LobsterFramework.AbilitySystem.Ability
    name: Ability
    href: LobsterFramework.AbilitySystem.Ability.html
  - name: .
  - uid: LobsterFramework.AbilitySystem.Ability.AbilityPipe
    name: AbilityPipe
    href: LobsterFramework.AbilitySystem.Ability.AbilityPipe.html
  spec.vb:
  - uid: LobsterFramework.AbilitySystem.Ability
    name: Ability
    href: LobsterFramework.AbilitySystem.Ability.html
  - name: .
  - uid: LobsterFramework.AbilitySystem.Ability.AbilityPipe
    name: AbilityPipe
    href: LobsterFramework.AbilitySystem.Ability.AbilityPipe.html
- uid: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility``1(System.String)
  name: HaltAbility
  nameWithType: AbilityRunner.HaltAbility
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbility
- uid: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete``1
  name: HaltAbilityComplete
  nameWithType: AbilityRunner.HaltAbilityComplete
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilityComplete
- uid: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities
  name: HaltAbilities
  nameWithType: AbilityRunner.HaltAbilities
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.HaltAbilities
- uid: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady``1(System.String)
  name: IsAbilityReady
  nameWithType: AbilityRunner.IsAbilityReady
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityReady
- uid: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning``1(System.String)
  name: IsAbilityRunning
  nameWithType: AbilityRunner.IsAbilityRunning
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.IsAbilityRunning
- uid: LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities(System.Type,System.Type,System.String,System.String)
  name: JoinAbilities
  nameWithType: AbilityRunner.JoinAbilities
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.JoinAbilities
- uid: LobsterFramework.AbilitySystem.AbilityRunner.BlockAction*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.BlockAction
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.BlockAction
  name: BlockAction
  nameWithType: AbilityRunner.BlockAction
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.BlockAction
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction(System.Int32)
  name: UnblockAction
  nameWithType: AbilityRunner.UnblockAction
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.UnblockAction
- uid: LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus
  name: ResetStatus
  nameWithType: AbilityRunner.ResetStatus
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.ResetStatus
- uid: LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData(System.String,System.String)
  name: SaveAbilityData
  nameWithType: AbilityRunner.SaveAbilityData
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.SaveAbilityData
- uid: LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating
  name: IsAnimating
  nameWithType: AbilityRunner.IsAnimating
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.IsAnimating
- uid: LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation(LobsterFramework.AbilitySystem.Ability,System.String,UnityEngine.AnimationClip,System.Single)
  name: StartAnimation
  nameWithType: AbilityRunner.StartAnimation
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.StartAnimation
- uid: LobsterFramework.AbilitySystem.Ability
  commentId: T:LobsterFramework.AbilitySystem.Ability
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.Ability.html
  name: Ability
  nameWithType: Ability
  fullName: LobsterFramework.AbilitySystem.Ability
- uid: UnityEngine.AnimationClip
  commentId: T:UnityEngine.AnimationClip
  parent: UnityEngine
  isExternal: true
  name: AnimationClip
  nameWithType: AnimationClip
  fullName: UnityEngine.AnimationClip
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Animancer.AnimancerState
  commentId: T:Animancer.AnimancerState
  parent: Animancer
  isExternal: true
  name: AnimancerState
  nameWithType: AnimancerState
  fullName: Animancer.AnimancerState
- uid: Animancer
  commentId: N:Animancer
  isExternal: true
  name: Animancer
  nameWithType: Animancer
  fullName: Animancer
- uid: LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation
  name: InterruptAbilityAnimation
  nameWithType: AbilityRunner.InterruptAbilityAnimation
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.InterruptAbilityAnimation
- uid: LobsterFramework.AbilitySystem.AbilityRunner.Signal*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.Signal
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.Signal``1(System.String)
  name: Signal
  nameWithType: AbilityRunner.Signal
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.Signal
- uid: LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal(UnityEngine.AnimationEvent)
  name: AnimationSignal
  nameWithType: AbilityRunner.AnimationSignal
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.AnimationSignal
- uid: UnityEngine.AnimationEvent
  commentId: T:UnityEngine.AnimationEvent
  parent: UnityEngine
  isExternal: true
  name: AnimationEvent
  nameWithType: AnimationEvent
  fullName: UnityEngine.AnimationEvent
- uid: LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd
  href: LobsterFramework.AbilitySystem.AbilityRunner.html#LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd(UnityEngine.AnimationEvent)
  name: AnimationEnd
  nameWithType: AbilityRunner.AnimationEnd
  fullName: LobsterFramework.AbilitySystem.AbilityRunner.AnimationEnd
