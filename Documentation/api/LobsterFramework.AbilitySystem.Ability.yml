### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.Ability
  commentId: T:LobsterFramework.AbilitySystem.Ability
  id: Ability
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.Ability.Action(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  - LobsterFramework.AbilitySystem.Ability.CleanUp
  - LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  - LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  - LobsterFramework.AbilitySystem.Ability.ConditionSatisfied(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  - LobsterFramework.AbilitySystem.Ability.HaltAbilities
  - LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution(System.String)
  - LobsterFramework.AbilitySystem.Ability.HasConfig(System.String)
  - LobsterFramework.AbilitySystem.Ability.Initialize
  - LobsterFramework.AbilitySystem.Ability.IsExecuting(System.String)
  - LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  - LobsterFramework.AbilitySystem.Ability.OnActionFinish(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  - LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  - LobsterFramework.AbilitySystem.Ability.OnEnqueue(LobsterFramework.AbilitySystem.Ability.AbilityConfig,System.String)
  - LobsterFramework.AbilitySystem.Ability.OnStartUp
  - LobsterFramework.AbilitySystem.Ability.OnTermination
  - LobsterFramework.AbilitySystem.Ability.RemoveConfig(System.String)
  - LobsterFramework.AbilitySystem.Ability.ResetStatus
  - LobsterFramework.AbilitySystem.Ability.RunningCount
  - LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset
  - LobsterFramework.AbilitySystem.Ability.Signal(System.String)
  - LobsterFramework.AbilitySystem.Ability.SignalBody(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  - LobsterFramework.AbilitySystem.Ability.abilityPriority
  - LobsterFramework.AbilitySystem.Ability.abilityRunner
  langs:
  - csharp
  - vb
  name: Ability
  nameWithType: Ability
  fullName: LobsterFramework.AbilitySystem.Ability
  type: Class
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: Ability
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 32
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Abilities defines the kind of actions the parent object can make. <br />

    Each subclass of Ability defines its own AbilityConfig and can be runned on multiple instances of its AbilityConfigs.
  example: []
  syntax:
    content: 'public abstract class Ability : ScriptableObject'
    content.vb: Public MustInherit Class Ability Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  derivedClasses:
  - LobsterFramework.AbilitySystem.Weapon.WeaponAbility
  inheritedMembers:
  - UnityEngine.ScriptableObject.SetDirty
  - UnityEngine.ScriptableObject.CreateInstance(System.String)
  - UnityEngine.ScriptableObject.CreateInstance(System.Type)
  - UnityEngine.ScriptableObject.CreateInstance``1
  - UnityEngine.Object.GetInstanceID
  - UnityEngine.Object.GetHashCode
  - UnityEngine.Object.Equals(System.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Instantiate``1({T})
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  - UnityEngine.Object.Destroy(UnityEngine.Object)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  - UnityEngine.Object.FindObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object)
  - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  - UnityEngine.Object.FindObjectsOfType``1
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectOfType``1
  - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType``1
  - UnityEngine.Object.FindAnyObjectByType``1
  - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type)
  - UnityEngine.Object.FindFirstObjectByType(System.Type)
  - UnityEngine.Object.FindAnyObjectByType(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.ToString
  - UnityEngine.Object.name
  - UnityEngine.Object.hideFlags
- uid: LobsterFramework.AbilitySystem.Ability.abilityRunner
  commentId: F:LobsterFramework.AbilitySystem.Ability.abilityRunner
  id: abilityRunner
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: abilityRunner
  nameWithType: Ability.abilityRunner
  fullName: LobsterFramework.AbilitySystem.Ability.abilityRunner
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: abilityRunner
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 37
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: >-
      [HideInInspector]

      public AbilityRunner abilityRunner
    return:
      type: LobsterFramework.AbilitySystem.AbilityRunner
    content.vb: >-
      <HideInInspector>

      Public abilityRunner As AbilityRunner
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: LobsterFramework.AbilitySystem.Ability.abilityPriority
  commentId: F:LobsterFramework.AbilitySystem.Ability.abilityPriority
  id: abilityPriority
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: abilityPriority
  nameWithType: Ability.abilityPriority
  fullName: LobsterFramework.AbilitySystem.Ability.abilityPriority
  type: Field
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: abilityPriority
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 38
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public RefAbilityPriority abilityPriority
    return:
      type: Global.RefAbilityPriority
    content.vb: Public abilityPriority As RefAbilityPriority
- uid: LobsterFramework.AbilitySystem.Ability.RemoveConfig(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.RemoveConfig(System.String)
  id: RemoveConfig(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: RemoveConfig(string)
  nameWithType: Ability.RemoveConfig(string)
  fullName: LobsterFramework.AbilitySystem.Ability.RemoveConfig(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: RemoveConfig
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 92
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Remove the config with specified name if present, this should only be called by editor scripts
  example: []
  syntax:
    content: public bool RemoveConfig(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the config to be removed
    return:
      type: System.Boolean
      description: The status of this operation
    content.vb: Public Function RemoveConfig(name As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.RemoveConfig*
  nameWithType.vb: Ability.RemoveConfig(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.RemoveConfig(String)
  name.vb: RemoveConfig(String)
- uid: LobsterFramework.AbilitySystem.Ability.CleanUp
  commentId: M:LobsterFramework.AbilitySystem.Ability.CleanUp
  id: CleanUp
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: CleanUp()
  nameWithType: Ability.CleanUp()
  fullName: LobsterFramework.AbilitySystem.Ability.CleanUp()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: CleanUp
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 108
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback when the gameobject is about to be disabled or destroyed
  example: []
  syntax:
    content: public virtual void CleanUp()
    content.vb: Public Overridable Sub CleanUp()
  overload: LobsterFramework.AbilitySystem.Ability.CleanUp*
- uid: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  commentId: M:LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  id: CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: CompareByExecutionPriority(Ability)
  nameWithType: Ability.CompareByExecutionPriority(Ability)
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: CompareByExecutionPriority
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 111
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public int CompareByExecutionPriority(Ability other)
    parameters:
    - id: other
      type: LobsterFramework.AbilitySystem.Ability
    return:
      type: System.Int32
    content.vb: Public Function CompareByExecutionPriority(other As Ability) As Integer
  overload: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority*
- uid: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  commentId: M:LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  id: CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: CompareByEnqueuePriority(Ability)
  nameWithType: Ability.CompareByEnqueuePriority(Ability)
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: CompareByEnqueuePriority
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 116
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public int CompareByEnqueuePriority(Ability other)
    parameters:
    - id: other
      type: LobsterFramework.AbilitySystem.Ability
    return:
      type: System.Int32
    content.vb: Public Function CompareByEnqueuePriority(other As Ability) As Integer
  overload: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority*
- uid: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  commentId: M:LobsterFramework.AbilitySystem.Ability.ConditionSatisfied(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  id: ConditionSatisfied(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: ConditionSatisfied(AbilityConfig)
  nameWithType: Ability.ConditionSatisfied(Ability.AbilityConfig)
  fullName: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: ConditionSatisfied
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 126
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Additionaly utility method for skill check that can be imeplemented if the ability have additional requirements, this may varies beween different configs
  example: []
  syntax:
    content: protected virtual bool ConditionSatisfied(Ability.AbilityConfig config)
    parameters:
    - id: config
      type: LobsterFramework.AbilitySystem.Ability.AbilityConfig
      description: The config being queried
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Overridable Function ConditionSatisfied(config As Ability.AbilityConfig) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied*
- uid: LobsterFramework.AbilitySystem.Ability.RunningCount
  commentId: M:LobsterFramework.AbilitySystem.Ability.RunningCount
  id: RunningCount
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: RunningCount()
  nameWithType: Ability.RunningCount()
  fullName: LobsterFramework.AbilitySystem.Ability.RunningCount()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: RunningCount
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 178
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public int RunningCount()
    return:
      type: System.Int32
    content.vb: Public Function RunningCount() As Integer
  overload: LobsterFramework.AbilitySystem.Ability.RunningCount*
- uid: LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution(System.String)
  id: HaltAbilityExecution(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: HaltAbilityExecution(string)
  nameWithType: Ability.HaltAbilityExecution(string)
  fullName: LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: HaltAbilityExecution
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 185
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Suspend the execution of provided action and force it to finish at the current frame
  example: []
  syntax:
    content: public bool HaltAbilityExecution(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the configuration to terminate
    return:
      type: System.Boolean
      description: The status of this operation
    content.vb: Public Function HaltAbilityExecution(name As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution*
  nameWithType.vb: Ability.HaltAbilityExecution(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution(String)
  name.vb: HaltAbilityExecution(String)
- uid: LobsterFramework.AbilitySystem.Ability.HaltAbilities
  commentId: M:LobsterFramework.AbilitySystem.Ability.HaltAbilities
  id: HaltAbilities
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: HaltAbilities()
  nameWithType: Ability.HaltAbilities()
  fullName: LobsterFramework.AbilitySystem.Ability.HaltAbilities()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: HaltAbilities
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 208
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Halt the execution of all abilities
  example: []
  syntax:
    content: public void HaltAbilities()
    content.vb: Public Sub HaltAbilities()
  overload: LobsterFramework.AbilitySystem.Ability.HaltAbilities*
- uid: LobsterFramework.AbilitySystem.Ability.Initialize
  commentId: M:LobsterFramework.AbilitySystem.Ability.Initialize
  id: Initialize
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: Ability.Initialize()
  fullName: LobsterFramework.AbilitySystem.Ability.Initialize()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: Initialize
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 219
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback when the gameobject is being initialized during Start()
  example: []
  syntax:
    content: protected virtual void Initialize()
    content.vb: Protected Overridable Sub Initialize()
  overload: LobsterFramework.AbilitySystem.Ability.Initialize*
- uid: LobsterFramework.AbilitySystem.Ability.IsExecuting(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.IsExecuting(System.String)
  id: IsExecuting(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: IsExecuting(string)
  nameWithType: Ability.IsExecuting(string)
  fullName: LobsterFramework.AbilitySystem.Ability.IsExecuting(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: IsExecuting
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 226
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Check if the provided config is executing, this method will return false if the config is not present
  example: []
  syntax:
    content: public bool IsExecuting(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the config to be examined
    return:
      type: System.Boolean
      description: True if the specified config is executing, otherwise false
    content.vb: Public Function IsExecuting(name As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.IsExecuting*
  nameWithType.vb: Ability.IsExecuting(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.IsExecuting(String)
  name.vb: IsExecuting(String)
- uid: LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  id: IsReady(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: IsReady(string)
  nameWithType: Ability.IsReady(string)
  fullName: LobsterFramework.AbilitySystem.Ability.IsReady(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: IsReady
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 232
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool IsReady(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsReady(name As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.IsReady*
  nameWithType.vb: Ability.IsReady(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.IsReady(String)
  name.vb: IsReady(String)
- uid: LobsterFramework.AbilitySystem.Ability.OnStartUp
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnStartUp
  id: OnStartUp
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnStartUp()
  nameWithType: Ability.OnStartUp()
  fullName: LobsterFramework.AbilitySystem.Ability.OnStartUp()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: OnStartUp
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 244
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void OnStartUp()
    content.vb: Public Sub OnStartUp()
  overload: LobsterFramework.AbilitySystem.Ability.OnStartUp*
- uid: LobsterFramework.AbilitySystem.Ability.OnTermination
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnTermination
  id: OnTermination
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnTermination()
  nameWithType: Ability.OnTermination()
  fullName: LobsterFramework.AbilitySystem.Ability.OnTermination()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: OnTermination
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 258
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void OnTermination()
    content.vb: Public Sub OnTermination()
  overload: LobsterFramework.AbilitySystem.Ability.OnTermination*
- uid: LobsterFramework.AbilitySystem.Ability.ResetStatus
  commentId: M:LobsterFramework.AbilitySystem.Ability.ResetStatus
  id: ResetStatus
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: ResetStatus()
  nameWithType: Ability.ResetStatus()
  fullName: LobsterFramework.AbilitySystem.Ability.ResetStatus()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: ResetStatus
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 268
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void ResetStatus()
    content.vb: Public Sub ResetStatus()
  overload: LobsterFramework.AbilitySystem.Ability.ResetStatus*
- uid: LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset
  commentId: M:LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset
  id: SaveConfigsAsAsset
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: SaveConfigsAsAsset()
  nameWithType: Ability.SaveConfigsAsAsset()
  fullName: LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset()
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: SaveConfigsAsAsset
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 283
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void SaveConfigsAsAsset()
    content.vb: Public Sub SaveConfigsAsAsset()
  overload: LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset*
- uid: LobsterFramework.AbilitySystem.Ability.Action(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  commentId: M:LobsterFramework.AbilitySystem.Ability.Action(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  id: Action(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Action(AbilityConfig)
  nameWithType: Ability.Action(Ability.AbilityConfig)
  fullName: LobsterFramework.AbilitySystem.Ability.Action(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: Action
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 295
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Main body of the ability execution, implement this to create different abilities!
  example: []
  syntax:
    content: protected abstract bool Action(Ability.AbilityConfig config)
    parameters:
    - id: config
      type: LobsterFramework.AbilitySystem.Ability.AbilityConfig
      description: The config being executed with
    return:
      type: System.Boolean
      description: False if the ability has finished, otherwise true
    content.vb: Protected MustOverride Function Action(config As Ability.AbilityConfig) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.Action*
- uid: LobsterFramework.AbilitySystem.Ability.OnActionFinish(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnActionFinish(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  id: OnActionFinish(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnActionFinish(AbilityConfig)
  nameWithType: Ability.OnActionFinish(Ability.AbilityConfig)
  fullName: LobsterFramework.AbilitySystem.Ability.OnActionFinish(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: OnActionFinish
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 301
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback when the action is finished or halted, override this to clean up temporary data generated during the action.
  example: []
  syntax:
    content: protected virtual void OnActionFinish(Ability.AbilityConfig config)
    parameters:
    - id: config
      type: LobsterFramework.AbilitySystem.Ability.AbilityConfig
      description: The config being processed
    content.vb: Protected Overridable Sub OnActionFinish(config As Ability.AbilityConfig)
  overload: LobsterFramework.AbilitySystem.Ability.OnActionFinish*
- uid: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  id: OnAnimationInterrupt(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnAnimationInterrupt(AbilityConfig)
  nameWithType: Ability.OnAnimationInterrupt(Ability.AbilityConfig)
  fullName: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: OnAnimationInterrupt
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 307
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback when the animation of the ability is interrupted by other abilities. Useful when abilities relies on animation events.
  example: []
  syntax:
    content: protected virtual void OnAnimationInterrupt(Ability.AbilityConfig config)
    parameters:
    - id: config
      type: LobsterFramework.AbilitySystem.Ability.AbilityConfig
      description: ''
    content.vb: Protected Overridable Sub OnAnimationInterrupt(config As Ability.AbilityConfig)
  overload: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt*
- uid: LobsterFramework.AbilitySystem.Ability.OnEnqueue(LobsterFramework.AbilitySystem.Ability.AbilityConfig,System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnEnqueue(LobsterFramework.AbilitySystem.Ability.AbilityConfig,System.String)
  id: OnEnqueue(LobsterFramework.AbilitySystem.Ability.AbilityConfig,System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnEnqueue(AbilityConfig, string)
  nameWithType: Ability.OnEnqueue(Ability.AbilityConfig, string)
  fullName: LobsterFramework.AbilitySystem.Ability.OnEnqueue(LobsterFramework.AbilitySystem.Ability.AbilityConfig, string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: OnEnqueue
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 323
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback when the ability is added to the action executing queue
  example: []
  syntax:
    content: protected virtual void OnEnqueue(Ability.AbilityConfig config, string configName)
    parameters:
    - id: config
      type: LobsterFramework.AbilitySystem.Ability.AbilityConfig
      description: ''
    - id: configName
      type: System.String
      description: ''
    content.vb: Protected Overridable Sub OnEnqueue(config As Ability.AbilityConfig, configName As String)
  overload: LobsterFramework.AbilitySystem.Ability.OnEnqueue*
  nameWithType.vb: Ability.OnEnqueue(Ability.AbilityConfig, String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.OnEnqueue(LobsterFramework.AbilitySystem.Ability.AbilityConfig, String)
  name.vb: OnEnqueue(AbilityConfig, String)
- uid: LobsterFramework.AbilitySystem.Ability.HasConfig(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.HasConfig(System.String)
  id: HasConfig(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: HasConfig(string)
  nameWithType: Ability.HasConfig(string)
  fullName: LobsterFramework.AbilitySystem.Ability.HasConfig(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: HasConfig
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 340
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool HasConfig(string configName)
    parameters:
    - id: configName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasConfig(configName As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.HasConfig*
  nameWithType.vb: Ability.HasConfig(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.HasConfig(String)
  name.vb: HasConfig(String)
- uid: LobsterFramework.AbilitySystem.Ability.Signal(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.Signal(System.String)
  id: Signal(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Signal(string)
  nameWithType: Ability.Signal(string)
  fullName: LobsterFramework.AbilitySystem.Ability.Signal(string)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: Signal
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 344
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void Signal(string configName)
    parameters:
    - id: configName
      type: System.String
    content.vb: Public Sub Signal(configName As String)
  overload: LobsterFramework.AbilitySystem.Ability.Signal*
  nameWithType.vb: Ability.Signal(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.Signal(String)
  name.vb: Signal(String)
- uid: LobsterFramework.AbilitySystem.Ability.SignalBody(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  commentId: M:LobsterFramework.AbilitySystem.Ability.SignalBody(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  id: SignalBody(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: SignalBody(AbilityConfig)
  nameWithType: Ability.SignalBody(Ability.AbilityConfig)
  fullName: LobsterFramework.AbilitySystem.Ability.SignalBody(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  type: Method
  source:
    remote:
      path: H:/Stuff/BallField/Assets/Framework/Components/ActionComponents/Ability.cs
    id: SignalBody
    path: ../Assets/Framework/Components/ActionComponents/Ability.cs
    startLine: 354
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Override this to implement signal event handler
  example: []
  syntax:
    content: protected virtual void SignalBody(Ability.AbilityConfig config)
    parameters:
    - id: config
      type: LobsterFramework.AbilitySystem.Ability.AbilityConfig
      description: Config to be signaled
    content.vb: Protected Overridable Sub SignalBody(config As Ability.AbilityConfig)
  overload: LobsterFramework.AbilitySystem.Ability.SignalBody*
references:
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  href: LobsterFramework.html
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEngine.ScriptableObject.SetDirty
  commentId: M:UnityEngine.ScriptableObject.SetDirty
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: SetDirty()
  nameWithType: ScriptableObject.SetDirty()
  fullName: UnityEngine.ScriptableObject.SetDirty()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.String)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CreateInstance(string)
  nameWithType: ScriptableObject.CreateInstance(string)
  fullName: UnityEngine.ScriptableObject.CreateInstance(string)
  nameWithType.vb: ScriptableObject.CreateInstance(String)
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(String)
  name.vb: CreateInstance(String)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.Type)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CreateInstance(Type)
  nameWithType: ScriptableObject.CreateInstance(Type)
  fullName: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance``1
  commentId: M:UnityEngine.ScriptableObject.CreateInstance``1
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: CreateInstance<T>()
  nameWithType: ScriptableObject.CreateInstance<T>()
  fullName: UnityEngine.ScriptableObject.CreateInstance<T>()
  nameWithType.vb: ScriptableObject.CreateInstance(Of T)()
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(Of T)()
  name.vb: CreateInstance(Of T)()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.GetInstanceID
  commentId: M:UnityEngine.Object.GetInstanceID
  parent: UnityEngine.Object
  isExternal: true
  name: GetInstanceID()
  nameWithType: Object.GetInstanceID()
  fullName: UnityEngine.Object.GetInstanceID()
  spec.csharp:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Equals(object)
  nameWithType: Object.Equals(object)
  fullName: UnityEngine.Object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: UnityEngine.Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object)
  nameWithType: Object.Instantiate(Object)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform)
  nameWithType: Object.Instantiate(Object, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate(Object, Transform, bool)
  nameWithType: Object.Instantiate(Object, Transform, bool)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Object, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Object, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T})
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0)
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Destroy(Object, float)
  nameWithType: Object.Destroy(Object, float)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object, float)
  nameWithType.vb: Object.Destroy(Object, Single)
  fullName.vb: UnityEngine.Object.Destroy(UnityEngine.Object, Single)
  name.vb: Destroy(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object)
  nameWithType: Object.Destroy(Object)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DestroyImmediate(Object, bool)
  nameWithType: Object.DestroyImmediate(Object, bool)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, bool)
  nameWithType.vb: Object.DestroyImmediate(Object, Boolean)
  fullName.vb: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, Boolean)
  name.vb: DestroyImmediate(Object, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object)
  nameWithType: Object.DestroyImmediate(Object)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type)
  nameWithType: Object.FindObjectsOfType(Type)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type, bool)
  nameWithType: Object.FindObjectsOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectsOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(System.Type, Boolean)
  name.vb: FindObjectsOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DontDestroyOnLoad(Object)
  nameWithType: Object.DontDestroyOnLoad(Object)
  fullName: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DestroyObject(Object, float)
  nameWithType: Object.DestroyObject(Object, float)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object, float)
  nameWithType.vb: Object.DestroyObject(Object, Single)
  fullName.vb: UnityEngine.Object.DestroyObject(UnityEngine.Object, Single)
  name.vb: DestroyObject(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object)
  nameWithType: Object.DestroyObject(Object)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindSceneObjectsOfType(Type)
  nameWithType: Object.FindSceneObjectsOfType(Type)
  fullName: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeIncludingAssets(Type)
  nameWithType: Object.FindObjectsOfTypeIncludingAssets(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1
  commentId: M:UnityEngine.Object.FindObjectsOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>()
  nameWithType: Object.FindObjectsOfType<T>()
  fullName: UnityEngine.Object.FindObjectsOfType<T>()
  nameWithType.vb: Object.FindObjectsOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)()
  name.vb: FindObjectsOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectsOfType<T>(bool)
  nameWithType: Object.FindObjectsOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectsOfType<T>(bool)
  nameWithType.vb: Object.FindObjectsOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)(Boolean)
  name.vb: FindObjectsOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1
  commentId: M:UnityEngine.Object.FindObjectOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>()
  nameWithType: Object.FindObjectOfType<T>()
  fullName: UnityEngine.Object.FindObjectOfType<T>()
  nameWithType.vb: Object.FindObjectOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)()
  name.vb: FindObjectOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectOfType<T>(bool)
  nameWithType: Object.FindObjectOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectOfType<T>(bool)
  nameWithType.vb: Object.FindObjectOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)(Boolean)
  name.vb: FindObjectOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>()
  nameWithType: Object.FindFirstObjectByType<T>()
  fullName: UnityEngine.Object.FindFirstObjectByType<T>()
  nameWithType.vb: Object.FindFirstObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)()
  name.vb: FindFirstObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>()
  nameWithType: Object.FindAnyObjectByType<T>()
  fullName: UnityEngine.Object.FindAnyObjectByType<T>()
  nameWithType.vb: Object.FindAnyObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)()
  name.vb: FindAnyObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindFirstObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindFirstObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindAnyObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindAnyObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeAll(Type)
  nameWithType: Object.FindObjectsOfTypeAll(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type)
  nameWithType: Object.FindObjectOfType(Type)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type)
  nameWithType: Object.FindFirstObjectByType(Type)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type)
  nameWithType: Object.FindAnyObjectByType(Type)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type, bool)
  nameWithType: Object.FindObjectOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(System.Type, Boolean)
  name.vb: FindObjectOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.ToString
  commentId: M:UnityEngine.Object.ToString
  parent: UnityEngine.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: UnityEngine.Object.ToString()
  spec.csharp:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  parent: UnityEngine.Object
  isExternal: true
  name: name
  nameWithType: Object.name
  fullName: UnityEngine.Object.name
- uid: UnityEngine.Object.hideFlags
  commentId: P:UnityEngine.Object.hideFlags
  parent: UnityEngine.Object
  isExternal: true
  name: hideFlags
  nameWithType: Object.hideFlags
  fullName: UnityEngine.Object.hideFlags
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Object.Instantiate``1(``0)
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  isExternal: true
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: LobsterFramework.AbilitySystem.AbilityRunner
  commentId: T:LobsterFramework.AbilitySystem.AbilityRunner
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityRunner.html
  name: AbilityRunner
  nameWithType: AbilityRunner
  fullName: LobsterFramework.AbilitySystem.AbilityRunner
- uid: Global.RefAbilityPriority
  commentId: T:Global.RefAbilityPriority
  href: RefAbilityPriority.html
  name: RefAbilityPriority
  nameWithType: RefAbilityPriority
  fullName: RefAbilityPriority
- uid: LobsterFramework.AbilitySystem.Ability.RemoveConfig*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.RemoveConfig
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.RemoveConfig(System.String)
  name: RemoveConfig
  nameWithType: Ability.RemoveConfig
  fullName: LobsterFramework.AbilitySystem.Ability.RemoveConfig
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LobsterFramework.AbilitySystem.Ability.CleanUp*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.CleanUp
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.CleanUp
  name: CleanUp
  nameWithType: Ability.CleanUp
  fullName: LobsterFramework.AbilitySystem.Ability.CleanUp
- uid: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  name: CompareByExecutionPriority
  nameWithType: Ability.CompareByExecutionPriority
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority
- uid: LobsterFramework.AbilitySystem.Ability
  commentId: T:LobsterFramework.AbilitySystem.Ability
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.Ability.html
  name: Ability
  nameWithType: Ability
  fullName: LobsterFramework.AbilitySystem.Ability
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  name: CompareByEnqueuePriority
  nameWithType: Ability.CompareByEnqueuePriority
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority
- uid: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.ConditionSatisfied(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  name: ConditionSatisfied
  nameWithType: Ability.ConditionSatisfied
  fullName: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
- uid: LobsterFramework.AbilitySystem.Ability.AbilityConfig
  commentId: T:LobsterFramework.AbilitySystem.Ability.AbilityConfig
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.Ability.html
  name: Ability.AbilityConfig
  nameWithType: Ability.AbilityConfig
  fullName: LobsterFramework.AbilitySystem.Ability.AbilityConfig
  spec.csharp:
  - uid: LobsterFramework.AbilitySystem.Ability
    name: Ability
    href: LobsterFramework.AbilitySystem.Ability.html
  - name: .
  - uid: LobsterFramework.AbilitySystem.Ability.AbilityConfig
    name: AbilityConfig
    href: LobsterFramework.AbilitySystem.Ability.AbilityConfig.html
  spec.vb:
  - uid: LobsterFramework.AbilitySystem.Ability
    name: Ability
    href: LobsterFramework.AbilitySystem.Ability.html
  - name: .
  - uid: LobsterFramework.AbilitySystem.Ability.AbilityConfig
    name: AbilityConfig
    href: LobsterFramework.AbilitySystem.Ability.AbilityConfig.html
- uid: LobsterFramework.AbilitySystem.Ability.RunningCount*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.RunningCount
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.RunningCount
  name: RunningCount
  nameWithType: Ability.RunningCount
  fullName: LobsterFramework.AbilitySystem.Ability.RunningCount
- uid: LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution(System.String)
  name: HaltAbilityExecution
  nameWithType: Ability.HaltAbilityExecution
  fullName: LobsterFramework.AbilitySystem.Ability.HaltAbilityExecution
- uid: LobsterFramework.AbilitySystem.Ability.HaltAbilities*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.HaltAbilities
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.HaltAbilities
  name: HaltAbilities
  nameWithType: Ability.HaltAbilities
  fullName: LobsterFramework.AbilitySystem.Ability.HaltAbilities
- uid: LobsterFramework.AbilitySystem.Ability.Initialize*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Initialize
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Initialize
  name: Initialize
  nameWithType: Ability.Initialize
  fullName: LobsterFramework.AbilitySystem.Ability.Initialize
- uid: LobsterFramework.AbilitySystem.Ability.IsExecuting*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.IsExecuting
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.IsExecuting(System.String)
  name: IsExecuting
  nameWithType: Ability.IsExecuting
  fullName: LobsterFramework.AbilitySystem.Ability.IsExecuting
- uid: LobsterFramework.AbilitySystem.Ability.IsReady*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.IsReady
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  name: IsReady
  nameWithType: Ability.IsReady
  fullName: LobsterFramework.AbilitySystem.Ability.IsReady
- uid: LobsterFramework.AbilitySystem.Ability.OnStartUp*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnStartUp
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnStartUp
  name: OnStartUp
  nameWithType: Ability.OnStartUp
  fullName: LobsterFramework.AbilitySystem.Ability.OnStartUp
- uid: LobsterFramework.AbilitySystem.Ability.OnTermination*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnTermination
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnTermination
  name: OnTermination
  nameWithType: Ability.OnTermination
  fullName: LobsterFramework.AbilitySystem.Ability.OnTermination
- uid: LobsterFramework.AbilitySystem.Ability.ResetStatus*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.ResetStatus
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.ResetStatus
  name: ResetStatus
  nameWithType: Ability.ResetStatus
  fullName: LobsterFramework.AbilitySystem.Ability.ResetStatus
- uid: LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset
  name: SaveConfigsAsAsset
  nameWithType: Ability.SaveConfigsAsAsset
  fullName: LobsterFramework.AbilitySystem.Ability.SaveConfigsAsAsset
- uid: LobsterFramework.AbilitySystem.Ability.Action*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Action
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Action(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  name: Action
  nameWithType: Ability.Action
  fullName: LobsterFramework.AbilitySystem.Ability.Action
- uid: LobsterFramework.AbilitySystem.Ability.OnActionFinish*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnActionFinish
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnActionFinish(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  name: OnActionFinish
  nameWithType: Ability.OnActionFinish
  fullName: LobsterFramework.AbilitySystem.Ability.OnActionFinish
- uid: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  name: OnAnimationInterrupt
  nameWithType: Ability.OnAnimationInterrupt
  fullName: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt
- uid: LobsterFramework.AbilitySystem.Ability.OnEnqueue*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnEnqueue
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnEnqueue(LobsterFramework.AbilitySystem.Ability.AbilityConfig,System.String)
  name: OnEnqueue
  nameWithType: Ability.OnEnqueue
  fullName: LobsterFramework.AbilitySystem.Ability.OnEnqueue
- uid: LobsterFramework.AbilitySystem.Ability.HasConfig*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.HasConfig
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.HasConfig(System.String)
  name: HasConfig
  nameWithType: Ability.HasConfig
  fullName: LobsterFramework.AbilitySystem.Ability.HasConfig
- uid: LobsterFramework.AbilitySystem.Ability.Signal*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Signal
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Signal(System.String)
  name: Signal
  nameWithType: Ability.Signal
  fullName: LobsterFramework.AbilitySystem.Ability.Signal
- uid: LobsterFramework.AbilitySystem.Ability.SignalBody*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.SignalBody
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.SignalBody(LobsterFramework.AbilitySystem.Ability.AbilityConfig)
  name: SignalBody
  nameWithType: Ability.SignalBody
  fullName: LobsterFramework.AbilitySystem.Ability.SignalBody
