{
  "api/Global.ActionDataSODrawer.html": {
    "href": "api/Global.ActionDataSODrawer.html",
    "title": "Class ActionDataSODrawer | LobsterFramework documentation",
    "keywords": "Class ActionDataSODrawer Inheritance object GUIDrawer PropertyDrawer ActionDataSODrawer Namespace: Global Assembly: MyScripts.dll Syntax public class ActionDataSODrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.ActionPriority.html": {
    "href": "api/Global.ActionPriority.html",
    "title": "Struct ActionPriority | LobsterFramework documentation",
    "keywords": "Struct ActionPriority Namespace: Global Assembly: MyScripts.dll Syntax [Serializable] public struct ActionPriority Fields enqueuePriority Declaration public int enqueuePriority Field Value Type Description int executionPriority Declaration public int executionPriority Field Value Type Description int"
  },
  "api/Global.ActionPrioritySO.html": {
    "href": "api/Global.ActionPrioritySO.html",
    "title": "Class ActionPrioritySO | LobsterFramework documentation",
    "keywords": "Class ActionPrioritySO Inheritance object Object ScriptableObject ActionPrioritySO Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Ability/ActionPrioritySO\")] public class ActionPrioritySO : ScriptableObject Properties EnqueuePriority Declaration public int EnqueuePriority { get; } Property Value Type Description int ExecutionPriority Declaration public int ExecutionPriority { get; } Property Value Type Description int Methods Extract() Declaration public ActionPriority Extract() Returns Type Description ActionPriority"
  },
  "api/Global.AIAnimationConfigurator.html": {
    "href": "api/Global.AIAnimationConfigurator.html",
    "title": "Class AIAnimationConfigurator | LobsterFramework documentation",
    "keywords": "Class AIAnimationConfigurator Inheritance object Object Component Behaviour MonoBehaviour AIAnimationConfigurator Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [RequireComponent(typeof(AIPath))] [RequireComponent(typeof(Animator))] public class AIAnimationConfigurator : MonoBehaviour"
  },
  "api/Global.AITrackData.html": {
    "href": "api/Global.AITrackData.html",
    "title": "Class AITrackData | LobsterFramework documentation",
    "keywords": "Class AITrackData Inheritance object Object ScriptableObject ControllerData AITrackData Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"StateMachine/ControllerData/AITrackData\")] public class AITrackData : ControllerData Fields chaseDistance Declaration public RefFloat chaseDistance Field Value Type Description RefFloat engageDistance Declaration public RefFloat engageDistance Field Value Type Description RefFloat keepDistance Declaration public RefFloat keepDistance Field Value Type Description RefFloat sightRange Declaration public RefFloat sightRange Field Value Type Description RefFloat"
  },
  "api/Global.AstarPath.AstarDistribution.html": {
    "href": "api/Global.AstarPath.AstarDistribution.html",
    "title": "Enum AstarPath.AstarDistribution | LobsterFramework documentation",
    "keywords": "Enum AstarPath.AstarDistribution Information about where the package was downloaded Namespace: Global Assembly: AstarPathfindingProject.dll Syntax public enum AstarPath.AstarDistribution Fields Name Description AssetStore PackageManager WebsiteDownload"
  },
  "api/Global.AstarPath.html": {
    "href": "api/Global.AstarPath.html",
    "title": "Class AstarPath | LobsterFramework documentation",
    "keywords": "Class AstarPath Inheritance object Object Component Behaviour MonoBehaviour Pathfinding.VersionedMonoBehaviour AstarPath Implements ISerializationCallbackReceiver Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: AstarPathfindingProject.dll Syntax [ExecuteInEditMode] [AddComponentMenu(\"Pathfinding/Pathfinder\")] [HelpURL(\"http://arongranberg.com/astar/docs/class_astar_path.php\")] public class AstarPath : VersionedMonoBehaviour, ISerializationCallbackReceiver Fields active Returns the active AstarPath object in the scene. Note: This is only set if the AstarPath object has been initialized (which happens in Awake). Declaration public static AstarPath active Field Value Type Description AstarPath batchGraphUpdates Throttle graph updates and batch them to improve performance. If toggled, graph updates will batched and executed less often (specified by AstarPath.graphUpdateBatchingInterval. This can have a positive impact on pathfinding throughput since the pathfinding threads do not need to be stopped as often, and it reduces the overhead per graph update. All graph updates are still applied however, they are just batched together so that more of them are applied at the same time. However do not use this if you want minimal latency between a graph update being requested and it being applied. This only applies to graph updates requested using the AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single) method. Not those requested using AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action). If you want to apply graph updates immediately at some point, you can call AstarPath.FlushGraphUpdates. See: graph-updates (view in online documentation for working links) Declaration public bool batchGraphUpdates Field Value Type Description bool Branch Which branch of the A* %Pathfinding Project is this release. Used when checking for updates so that users of the development versions can get notifications of development updates. Declaration public static readonly string Branch Field Value Type Description string colorSettings Reference to the color settings for this AstarPath object. Color settings include for example which color the nodes should be in, in the sceneview. Declaration public AstarColor colorSettings Field Value Type Description Pathfinding.AstarColor data Holds all graph data Declaration [FormerlySerializedAs(\"astarData\")] public AstarData data Field Value Type Description Pathfinding.AstarData debugFloor Low value to use for certain AstarPath.debugMode modes. For example if AstarPath.debugMode is set to G, this value will determine when the node will be completely red. Note: Only relevant in the editor See: AstarPath.debugRoof See: AstarPath.debugMode Declaration public float debugFloor Field Value Type Description float debugMode The mode to use for drawing nodes in the sceneview. Note: Only relevant in the editor See: Pathfinding.GraphDebugMode Declaration public GraphDebugMode debugMode Field Value Type Description Pathfinding.GraphDebugMode debugPathData The path to debug using gizmos. This is the path handler used to calculate the last path. It is used in the editor to draw debug information using gizmos. Declaration [NonSerialized] public PathHandler debugPathData Field Value Type Description Pathfinding.PathHandler debugPathID The path ID to debug using gizmos Declaration [NonSerialized] public ushort debugPathID Field Value Type Description ushort debugRoof High value to use for certain AstarPath.debugMode modes. For example if AstarPath.debugMode is set to G, this value will determine when the node will be completely green. For the penalty debug mode, the nodes will be colored green when they have a penalty less than AstarPath.debugFloor and red when their penalty is greater or equal to this value and something between red and green otherwise. Note: Only relevant in the editor See: AstarPath.debugFloor See: AstarPath.debugMode Declaration public float debugRoof Field Value Type Description float Distribution Used by the editor to guide the user to the correct place to download updates Declaration public static readonly AstarPath.AstarDistribution Distribution Field Value Type Description AstarPath.AstarDistribution euclideanEmbedding Holds settings for heuristic optimization. See: heuristic-opt (view in online documentation for working links) Declaration public EuclideanEmbedding euclideanEmbedding Field Value Type Description Pathfinding.EuclideanEmbedding fullGetNearestSearch Do a full GetNearest search for all graphs. Additional searches will normally only be done on the graph which in the first fast search seemed to have the closest node. With this setting on, additional searches will be done on all graphs since the first check is not always completely accurate.\\n More technically: GetNearestForce on all graphs will be called if true, otherwise only on the one graph which's GetNearest search returned the best node.\\n Usually faster when disabled, but higher quality searches when enabled. When using a a navmesh or recast graph, for best quality, this setting should be combined with the Pathfinding.NavMeshGraph.accurateNearestNode setting set to true. Note: For the PointGraph this setting doesn't matter much as it has only one search mode. Declaration public bool fullGetNearestSearch Field Value Type Description bool graphUpdateBatchingInterval Minimum number of seconds between each batch of graph updates. If AstarPath.batchGraphUpdates is true, this defines the minimum number of seconds between each batch of graph updates. This can have a positive impact on pathfinding throughput since the pathfinding threads do not need to be stopped as often, and it reduces the overhead per graph update. All graph updates are still applied however, they are just batched together so that more of them are applied at the same time. Do not use this if you want minimal latency between a graph update being requested and it being applied. This only applies to graph updates requested using the AstarPath.UpdateGraphs(UnityEngine.Bounds,System.Single) method. Not those requested using AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action). See: graph-updates (view in online documentation for working links) Declaration public float graphUpdateBatchingInterval Field Value Type Description float heuristic The distance function to use as a heuristic. The heuristic, often referred to as just 'H' is the estimated cost from a node to the target. Different heuristics affect how the path picks which one to follow from multiple possible with the same length See: Pathfinding.Heuristic for more details and descriptions of the different modes. See: Wikipedia: Admissible heuristic See: Wikipedia: A* search algorithm See: Wikipedia: Dijkstra's Algorithm Declaration public Heuristic heuristic Field Value Type Description Pathfinding.Heuristic heuristicScale The scale of the heuristic. If a value lower than 1 is used, the pathfinder will search more nodes (slower). If 0 is used, the pathfinding algorithm will be reduced to dijkstra's algorithm. This is equivalent to setting AstarPath.heuristic to None. If a value larger than 1 is used the pathfinding will (usually) be faster because it expands fewer nodes, but the paths may no longer be the optimal (i.e the shortest possible paths). Usually you should leave this to the default value of 1. See: https://en.wikipedia.org/wiki/Admissible_heuristic See: https://en.wikipedia.org/wiki/A*_search_algorithm See: https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm Declaration public float heuristicScale Field Value Type Description float logPathResults The amount of debugging messages. Use less debugging to improve performance (a bit) or just to get rid of the Console spamming. Use more debugging (heavy) if you want more information about what the pathfinding scripts are doing. The InGame option will display the latest path log using in-game GUI. [Open online documentation to see images] Declaration public PathLog logPathResults Field Value Type Description Pathfinding.PathLog manualDebugFloorRoof If set, the AstarPath.debugFloor and AstarPath.debugRoof values will not be automatically recalculated. Note: Only relevant in the editor Declaration public bool manualDebugFloorRoof Field Value Type Description bool maxFrameTime Max number of milliseconds to spend each frame for pathfinding. At least 500 nodes will be searched each frame (if there are that many to search). When using multithreading this value is irrelevant. Declaration public float maxFrameTime Field Value Type Description float maxNearestNodeDistance @name Inspector - Settings @{ Declaration public float maxNearestNodeDistance Field Value Type Description float navmeshUpdates Handles navmesh cuts. See: Declaration public readonly NavmeshUpdates navmeshUpdates Field Value Type Description Pathfinding.NavmeshUpdates On65KOverflow Called when pathID overflows 65536 and resets back to zero. Note: This callback will be cleared every time it is called, so if you want to register to it repeatedly, register to it directly on receiving the callback as well. Declaration public static Action On65KOverflow Field Value Type Description Action OnAwakeSettings Declaration public static Action OnAwakeSettings Field Value Type Description Action OnGraphPostScan Called for each graph after they have been scanned. All other graphs might not have been scanned yet. Declaration public static OnGraphDelegate OnGraphPostScan Field Value Type Description Pathfinding.OnGraphDelegate OnGraphPreScan Called for each graph before they are scanned Declaration public static OnGraphDelegate OnGraphPreScan Field Value Type Description Pathfinding.OnGraphDelegate OnGraphsUpdated Called when any graphs are updated. Register to for example recalculate the path whenever a graph changes. Declaration public static OnScanDelegate OnGraphsUpdated Field Value Type Description Pathfinding.OnScanDelegate OnGraphsWillBeUpdated Deprecated: Declaration [Obsolete] public Action OnGraphsWillBeUpdated Field Value Type Description Action OnGraphsWillBeUpdated2 Deprecated: Declaration [Obsolete] public Action OnGraphsWillBeUpdated2 Field Value Type Description Action OnLatePostScan Called after scanning has completed fully. This is called as the last thing in the Scan function. Declaration public static OnScanDelegate OnLatePostScan Field Value Type Description Pathfinding.OnScanDelegate OnPathPostSearch Called for each path after searching. Be careful when using multithreading since this will be called from a different thread. Declaration public static OnPathDelegate OnPathPostSearch Field Value Type Description Pathfinding.OnPathDelegate OnPathPreSearch Called for each path before searching. Be careful when using multithreading since this will be called from a different thread. Declaration public static OnPathDelegate OnPathPreSearch Field Value Type Description Pathfinding.OnPathDelegate OnPostScan Called after scanning. This is called before applying links, flood-filling the graphs and other post processing. Declaration public static OnScanDelegate OnPostScan Field Value Type Description Pathfinding.OnScanDelegate OnPreScan Called before starting the scanning Declaration public static OnScanDelegate OnPreScan Field Value Type Description Pathfinding.OnScanDelegate prioritizeGraphs Prioritize graphs. Graphs will be prioritized based on their order in the inspector. The first graph which has a node closer than AstarPath.prioritizeGraphsLimit will be chosen instead of searching all graphs. Declaration public bool prioritizeGraphs Field Value Type Description bool prioritizeGraphsLimit Distance limit for AstarPath.prioritizeGraphs. See: AstarPath.prioritizeGraphs Declaration public float prioritizeGraphsLimit Field Value Type Description float scanOnStartup If true, all graphs will be scanned during Awake. This does not include loading from the cache. If you disable this, you will have to call \\link Scan AstarPath.active.Scan() \\endlink yourself to enable pathfinding. Alternatively you could load a saved graph from a file. See: AstarPath.Scan(Pathfinding.NavGraph) See: AstarPath.ScanAsync(Pathfinding.NavGraph) Declaration public bool scanOnStartup Field Value Type Description bool showGraphs Shows or hides graph inspectors. Used internally by the editor Declaration public bool showGraphs Field Value Type Description bool showNavGraphs @name Inspector - Debug @{ Declaration public bool showNavGraphs Field Value Type Description bool showSearchTree If enabled, nodes will draw a line to their 'parent'. This will show the search tree for the latest path. Note: Only relevant in the editor TODO: Add a showOnlyLastPath flag to indicate whether to draw every node or only the ones visited by the latest path. Declaration public bool showSearchTree Field Value Type Description bool showUnwalkableNodes Toggle to show unwalkable nodes. Note: Only relevant in the editor See: AstarPath.unwalkableNodeDebugSize Declaration public bool showUnwalkableNodes Field Value Type Description bool tagNames Stored tag names. See: AstarPath.FindTagNames See: AstarPath.GetTagNames Declaration [SerializeField] protected string[] tagNames Field Value Type Description string[] threadCount Number of pathfinding threads to use. Multithreading puts pathfinding in another thread, this is great for performance on 2+ core computers since the framerate will barely be affected by the pathfinding at all. None indicates that the pathfinding is run in the Unity thread as a coroutine Automatic will try to adjust the number of threads to the number of cores and memory on the computer. Less than 512mb of memory or a single core computer will make it revert to using no multithreading. It is recommended that you use one of the \"Auto\" settings that are available. The reason is that even if your computer might be beefy and have 8 cores. Other computers might only be quad core or dual core in which case they will not benefit from more than 1 or 3 threads respectively (you usually want to leave one core for the unity thread). If you use more threads than the number of cores on the computer it is mostly just wasting memory, it will not run any faster. The extra memory usage is not trivially small. Each thread needs to keep a small amount of data for each node in all the graphs. It is not the full graph data but it is proportional to the number of nodes. The automatic settings will inspect the machine it is running on and use that to determine the number of threads so that no memory is wasted. The exception is if you only have one (or maybe two characters) active at time. Then you should probably just go with one thread always since it is very unlikely that you will need the extra throughput given by more threads. Keep in mind that more threads primarily increases throughput by calculating different paths on different threads, it will not calculate individual paths any faster. Note that if you are modifying the pathfinding core scripts or if you are directly modifying graph data without using any of the safe wrappers (like AstarPath.AddWorkItem(System.Action) multithreading can cause strange errors and pathfinding stopping to work if you are not careful. For basic usage (not modding the pathfinding core) it should be safe. Note: WebGL does not support threads at all (since javascript is single-threaded) so no threads will be used on that platform. See: CalculateThreadCount Declaration public ThreadCount threadCount Field Value Type Description Pathfinding.ThreadCount unwalkableNodeDebugSize Size of the red cubes shown in place of unwalkable nodes. Note: Only relevant in the editor. Does not apply to grid graphs. See: AstarPath.showUnwalkableNodes Declaration public float unwalkableNodeDebugSize Field Value Type Description float Version The version number for the A* %Pathfinding Project Declaration public static readonly Version Version Field Value Type Description Version Properties astarData Holds all graph data. Deprecated: The 'astarData' field has been renamed to 'data' Declaration [Obsolete(\"The 'astarData' field has been renamed to 'data'\")] public AstarData astarData { get; } Property Value Type Description Pathfinding.AstarData graphs Shortcut to Pathfinding.AstarData.graphs Declaration public NavGraph[] graphs { get; } Property Value Type Description Pathfinding.NavGraph[] graphTypes See Pathfinding.AstarData Deprecated: Declaration [Obsolete] public Type[] graphTypes { get; } Property Value Type Description Type[] IsAnyGraphUpdateInProgress Returns if any graph updates are being calculated right now. Note: This does not includes other types of work items such as navmesh cutting or anything added by AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action). See: IsAnyWorkItemInProgress Declaration public bool IsAnyGraphUpdateInProgress { get; } Property Value Type Description bool IsAnyGraphUpdateQueued Returns if any graph updates are waiting to be applied. Note: This is false while the updates are being performed. Note: This does not includes other types of work items such as navmesh cutting or anything added by AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action). Declaration public bool IsAnyGraphUpdateQueued { get; } Property Value Type Description bool IsAnyGraphUpdatesQueued Returns if any graph updates are waiting to be applied. Deprecated: Use IsAnyGraphUpdateQueued instead Declaration [Obsolete(\"Fixed grammar, use IsAnyGraphUpdateQueued instead\")] public bool IsAnyGraphUpdatesQueued { get; } Property Value Type Description bool IsAnyWorkItemInProgress Returns if any work items are in progress right now. Note: This includes pretty much all types of graph updates. Such as normal graph updates, navmesh cutting and anything added by AstarPath.RegisterSafeUpdate(System.Action) or AstarPath.AddWorkItem(System.Action). Declaration public bool IsAnyWorkItemInProgress { get; } Property Value Type Description bool isScanning Set while any graphs are being scanned. It will be true up until the FloodFill is done. Note: Not to be confused with graph updates. Used to better support Graph Update Objects called for example in OnPostScan See: IsAnyGraphUpdateQueued See: IsAnyGraphUpdateInProgress Declaration public bool isScanning { get; } Property Value Type Description bool IsUsingMultithreading Returns whether or not multithreading is used. \\exception System.Exception Is thrown when it could not be decided if multithreading was used or not. This should not happen if pathfinding is set up correctly. Note: This uses info about if threads are running right now, it does not use info from the settings on the A* object. Declaration public bool IsUsingMultithreading { get; } Property Value Type Description bool lastScanTime The time it took for the last call to Scan() to complete. Used to prevent automatically rescanning the graphs too often (editor only) Declaration public float lastScanTime { get; } Property Value Type Description float limitGraphUpdates Batch graph updates. Deprecated: This field has been renamed to AstarPath.batchGraphUpdates. Declaration [Obsolete(\"This field has been renamed to 'batchGraphUpdates'\")] public bool limitGraphUpdates { get; set; } Property Value Type Description bool maxGraphUpdateFreq Limit for how often should graphs be updated. Deprecated: This field has been renamed to AstarPath.graphUpdateBatchingInterval. Declaration [Obsolete(\"This field has been renamed to 'graphUpdateBatchingInterval'\")] public float maxGraphUpdateFreq { get; set; } Property Value Type Description float maxNearestNodeDistanceSqr Max Nearest Node Distance Squared. See: AstarPath.maxNearestNodeDistance Declaration public float maxNearestNodeDistanceSqr { get; } Property Value Type Description float NumParallelThreads Number of parallel pathfinders. Returns the number of concurrent processes which can calculate paths at once. When using multithreading, this will be the number of threads, if not using multithreading it is always 1 (since only 1 coroutine is used). See: IsUsingMultithreading Declaration public int NumParallelThreads { get; } Property Value Type Description int Methods AddWorkItem(AstarWorkItem) Add a work item to be processed when pathfinding is paused. The work item will be executed when it is safe to update nodes. This is defined as between the path searches. When using more threads than one, calling this often might decrease pathfinding performance due to a lot of idling in the threads. Not performance as in it will use much CPU power, but performance as in the number of paths per second will probably go down (though your framerate might actually increase a tiny bit). You should only call this function from the main unity thread (i.e normal game code). AstarPath.active.AddWorkItem(new AstarWorkItem(() => { // Safe to update graphs here var node = AstarPath.active.GetNearest(transform.position).node; node.Walkable = false; })); AstarPath.active.AddWorkItem(() => { // Safe to update graphs here var node = AstarPath.active.GetNearest(transform.position).node; node.position = (Int3)transform.position; }); See: AstarPath.FlushWorkItems Declaration public void AddWorkItem(AstarWorkItem item) Parameters Type Name Description Pathfinding.AstarWorkItem item AddWorkItem(Action) Add a work item to be processed when pathfinding is paused. Convenience method that is equivalent to AddWorkItem(new AstarWorkItem(callback)); See: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem) Declaration public void AddWorkItem(Action callback) Parameters Type Name Description Action callback AddWorkItem(Action<IWorkItemContext>) Add a work item to be processed when pathfinding is paused. Convenience method that is equivalent to AddWorkItem(new AstarWorkItem(callback)); See: AstarPath.AddWorkItem(Pathfinding.AstarWorkItem) Declaration public void AddWorkItem(Action<IWorkItemContext> callback) Parameters Type Name Description Action<IWorkItemContext> callback Awake() Sets up all needed variables and scans the graphs. Calls Initialize, starts the ReturnPaths coroutine and scans all graphs. Also starts threads if using multithreading See: AstarPath.OnAwakeSettings Declaration protected override void Awake() Overrides Pathfinding.VersionedMonoBehaviour.Awake() BlockUntilCalculated(Path) Blocks until the path has been calculated. Normally it takes a few frames for a path to be calculated and returned. This function will ensure that the path will be calculated when this function returns and that the callback for that path has been called. If requesting a lot of paths in one go and waiting for the last one to complete, it will calculate most of the paths in the queue (only most if using multithreading, all if not using multithreading). Use this function only if you really need to. There is a point to spreading path calculations out over several frames. It smoothes out the framerate and makes sure requesting a large number of paths at the same time does not cause lag. Note: Graph updates and other callbacks might get called during the execution of this function. When the pathfinder is shutting down. I.e in OnDestroy, this function will not do anything. \\throws Exception if pathfinding is not initialized properly for this scene (most likely no AstarPath object exists) or if the path has not been started yet. Also throws an exception if critical errors occur such as when the pathfinding threads have crashed (which should not happen in normal cases). This prevents an infinite loop while waiting for the path. See: Pathfinding.Path.WaitForPath See: Pathfinding.Path.BlockUntilCalculated Declaration public static void BlockUntilCalculated(Path path) Parameters Type Name Description Pathfinding.Path path The path to wait for. The path must be started, otherwise an exception will be thrown. BlockUntilPathQueueBlocked() Blocks until all pathfinding threads are paused and blocked. Deprecated: Use AstarPath.PausePathfinding instead. Make sure to call Release on the returned lock. Declaration [Obsolete(\"Use PausePathfinding instead. Make sure to call Release on the returned lock.\", true)] public void BlockUntilPathQueueBlocked() CalculateThreadCount(ThreadCount) Declaration public static int CalculateThreadCount(ThreadCount count) Parameters Type Name Description Pathfinding.ThreadCount count Returns Type Description int ConfigureReferencesInternal() \\cond internal Declaration public void ConfigureReferencesInternal() EnsureValidFloodFill() If a WorkItem needs to have a valid flood fill during execution, call this method to ensure there are no pending flood fills. Deprecated: This method has been moved. Use the method on the context object that can be sent with work item delegates instead AstarPath.active.AddWorkItem(new AstarWorkItem(() => { // Safe to update graphs here var node = AstarPath.active.GetNearest(transform.position).node; node.Walkable = false; })); See: Pathfinding.IWorkItemContext Declaration [Obsolete(\"This method has been moved. Use the method on the context object that can be sent with work item delegates instead\")] public void EnsureValidFloodFill() FindAstarPath() Used outside of play mode to initialize the AstarPath object even if it has not been selected in the inspector yet. This will set the AstarPath.active property and deserialize all graphs. This is useful if you want to do changes to the graphs in the editor outside of play mode, but cannot be sure that the graphs have been deserialized yet. In play mode this method does nothing. Declaration public static void FindAstarPath() FindTagNames() Tries to find an AstarPath object and return tag names. If an AstarPath object cannot be found, it returns an array of length 1 with an error message. See: AstarPath.GetTagNames Declaration public static string[] FindTagNames() Returns Type Description string[] FloodFill() Floodfills all graphs and updates areas for every node. The different colored areas that you see in the scene view when looking at graphs are called just 'areas', this method calculates which nodes are in what areas. See: Pathfinding.Node.area Deprecated: Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now. Declaration [ContextMenu(\"Flood Fill Graphs\")] [Obsolete(\"Avoid using. This will force a full recalculation of the connected components. In most cases the HierarchicalGraph class takes care of things automatically behind the scenes now.\")] public void FloodFill() FloodFill(GraphNode, uint) Floodfills starting from 'seed' using the specified area. Deprecated: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes Declaration [Obsolete(\"Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes\")] public void FloodFill(GraphNode seed, uint area) Parameters Type Name Description Pathfinding.GraphNode seed uint area FloodFill(GraphNode) Floodfills starting from the specified node. Deprecated: Deprecated: Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes Declaration [Obsolete(\"Not meaningful anymore. The HierarchicalGraph takes care of things automatically behind the scenes\")] public void FloodFill(GraphNode seed) Parameters Type Name Description Pathfinding.GraphNode seed FlushGraphUpdates() Forces graph updates to complete in a single frame. This will force the pathfinding threads to finish calculating the path they are currently calculating (if any) and then pause. When all threads have paused, graph updates will be performed. Warning: Using this very often (many times per second) can reduce your fps due to a lot of threads waiting for one another. But you probably wont have to worry about that. Note: This is almost identical to AstarPath.FlushWorkItems, but added for more descriptive name. This function will also override any time limit delays for graph updates. This is because graph updates are implemented using work items. So calling this function will also execute any other work items (if any are queued). Will not do anything if there are no graph updates queued (not even execute other work items). Declaration public void FlushGraphUpdates() FlushThreadSafeCallbacks() Forces thread safe callbacks to run. Deprecated: Use AstarPath.FlushWorkItems instead Declaration [Obsolete(\"Use FlushWorkItems instead\")] public void FlushThreadSafeCallbacks() FlushWorkItems() Forces work items to complete in a single frame. This will force all work items to run immidiately. This will force the pathfinding threads to finish calculating the path they are currently calculating (if any) and then pause. When all threads have paused, work items will be executed (which can be e.g graph updates). Warning: Using this very often (many times per second) can reduce your fps due to a lot of threads waiting for one another. But you probably wont have to worry about that Note: This is almost (note almost) identical to AstarPath.FlushGraphUpdates, but added for more descriptive name. Will not do anything if there are no queued work items waiting to run. Declaration public void FlushWorkItems() FlushWorkItems(bool, bool) Make sure work items are executed. See: AddWorkItem Deprecated: Use AstarPath.FlushWorkItems instead. Declaration [Obsolete(\"Use FlushWorkItems() instead\")] public void FlushWorkItems(bool unblockOnComplete, bool block) Parameters Type Name Description bool unblockOnComplete If true, pathfinding will be allowed to start running immediately after completing all work items. bool block If true, work items that usually take more than one frame to complete will be forced to complete during this call. If false, then after this call there might still be work left to do. GetNearest(Ray) Returns the node closest to the ray (slow). Warning: This function is brute-force and very slow, use with caution Declaration public GraphNode GetNearest(Ray ray) Parameters Type Name Description Ray ray Returns Type Description Pathfinding.GraphNode GetNearest(Vector3, NNConstraint, GraphNode) Returns the nearest node to a position using the specified NNConstraint. Searches through all graphs for their nearest nodes to the specified position and picks the closest one. The NNConstraint can be used to specify constraints on which nodes can be chosen such as only picking walkable nodes. See: Pathfinding.NNConstraint Declaration public NNInfo GetNearest(Vector3 position, NNConstraint constraint, GraphNode hint) Parameters Type Name Description Vector3 position Pathfinding.NNConstraint constraint Pathfinding.GraphNode hint Returns Type Description Pathfinding.NNInfo GetNearest(Vector3, NNConstraint) Declaration public NNInfo GetNearest(Vector3 position, NNConstraint constraint) Parameters Type Name Description Vector3 position Pathfinding.NNConstraint constraint Returns Type Description Pathfinding.NNInfo GetNearest(Vector3) Returns the nearest node to a position. This method will search through all graphs and query them for the closest node to this position, and then it will return the closest one of those. Equivalent to GetNearest(position, NNConstraint.None). // Find the closest node to this GameObject's position GraphNode node = AstarPath.active.GetNearest(transform.position).node; if (node.Walkable) { // Yay, the node is walkable, we can place a tower here or something } See: Pathfinding.NNConstraint Declaration public NNInfo GetNearest(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description Pathfinding.NNInfo GetTagNames() Returns tag names. Makes sure that the tag names array is not null and of length 32. If it is null or not of length 32, it creates a new array and fills it with 0,1,2,3,4 etc... See: AstarPath.FindTagNames Declaration public string[] GetTagNames() Returns Type Description string[] PausePathfinding() Blocks until all pathfinding threads are paused and blocked. var graphLock = AstarPath.active.PausePathfinding(); // Here we can modify the graphs safely. For example by adding a new node to a point graph var node = AstarPath.active.data.pointGraph.AddNode((Int3) new Vector3(3, 1, 4)); // Allow pathfinding to resume graphLock.Release(); Returns: A lock object. You need to call Pathfinding.PathProcessor.GraphUpdateLock.Release on that object to allow pathfinding to resume. Note: In most cases this should not be called from user code. Use the AstarPath.AddWorkItem(System.Action) method instead. See: AstarPath.AddWorkItem(System.Action) Declaration public PathProcessor.GraphUpdateLock PausePathfinding() Returns Type Description PathProcessor.Pathfinding.PathProcessor.GraphUpdateLock QueueGraphUpdates() Will apply queued graph updates as soon as possible, regardless of AstarPath.batchGraphUpdates. Calling this multiple times will not create multiple callbacks. This function is useful if you are limiting graph updates, but you want a specific graph update to be applied as soon as possible regardless of the time limit. Note that this does not block until the updates are done, it merely bypasses the AstarPath.batchGraphUpdates time limit. See: AstarPath.FlushGraphUpdates Declaration public void QueueGraphUpdates() QueueWorkItemFloodFill() Call during work items to queue a flood fill. Deprecated: This method has been moved. Use the method on the context object that can be sent with work item delegates instead AstarPath.active.AddWorkItem(new AstarWorkItem(() => { // Safe to update graphs here var node = AstarPath.active.GetNearest(transform.position).node; node.Walkable = false; })); See: Pathfinding.IWorkItemContext Declaration [Obsolete(\"This method has been moved. Use the method on the context object that can be sent with work item delegates instead\")] public void QueueWorkItemFloodFill() RegisterSafeUpdate(Action) Will send a callback when it is safe to update nodes. This is defined as between the path searches. This callback will only be sent once and is nulled directly after the callback has been sent. When using more threads than one, calling this often might decrease pathfinding performance due to a lot of idling in the threads. Not performance as in it will use much CPU power, but performance as in the number of paths per second will probably go down (though your framerate might actually increase a tiny bit) You should only call this function from the main unity thread (i.e normal game code). Version: Since version 4.0 this is equivalent to AddWorkItem(new AstarWorkItem(callback)). Previously the callbacks added using this method would not be ordered with respect to other work items, so they could be executed before other work items or after them. Deprecated: Use AstarPath.AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned above). Declaration [Obsolete(\"Use AddWorkItem(System.Action) instead. Note the slight change in behavior (mentioned in the documentation).\")] public static void RegisterSafeUpdate(Action callback) Parameters Type Name Description Action callback Scan(NavGraph) Scans a particular graph. Calling this method will recalculate the specified graph. This method is pretty slow (depending on graph type and graph complexity of course), so it is advisable to use smaller graph updates whenever possible. // Recalculate all graphs AstarPath.active.Scan(); // Recalculate only the first grid graph var graphToScan = AstarPath.active.data.gridGraph; AstarPath.active.Scan(graphToScan); // Recalculate only the first and third graphs var graphsToScan = new [] { AstarPath.active.data.graphs[0], AstarPath.active.data.graphs[2] }; AstarPath.active.Scan(graphsToScan); See: graph-updates (view in online documentation for working links) See: ScanAsync Declaration public void Scan(NavGraph graphToScan) Parameters Type Name Description Pathfinding.NavGraph graphToScan Scan(NavGraph[]) Scans all specified graphs. Calling this method will recalculate all specified graphs or all graphs if the graphsToScan parameter is null. This method is pretty slow (depending on graph type and graph complexity of course), so it is advisable to use smaller graph updates whenever possible. // Recalculate all graphs AstarPath.active.Scan(); // Recalculate only the first grid graph var graphToScan = AstarPath.active.data.gridGraph; AstarPath.active.Scan(graphToScan); // Recalculate only the first and third graphs var graphsToScan = new [] { AstarPath.active.data.graphs[0], AstarPath.active.data.graphs[2] }; AstarPath.active.Scan(graphsToScan); See: graph-updates (view in online documentation for working links) See: ScanAsync Declaration public void Scan(NavGraph[] graphsToScan = null) Parameters Type Name Description Pathfinding.NavGraph[] graphsToScan The graphs to scan. If this parameter is null then all graphs will be scanned ScanAsync(NavGraph) Scans a particular graph asynchronously. This is a IEnumerable, you can loop through it to get the progress foreach (Progress progress in AstarPath.active.ScanAsync()) { Debug.Log(\"Scanning... \" + progress.description + \" - \" + (progress.progress*100).ToString(\"0\") + \"%\"); } You can scan graphs asyncronously by yielding when you loop through the progress. Note that this does not guarantee a good framerate, but it will allow you to at least show a progress bar during scanning. IEnumerator Start () { foreach (Progress progress in AstarPath.active.ScanAsync()) { Debug.Log(\"Scanning... \" + progress.description + \" - \" + (progress.progress*100).ToString(\"0\") + \"%\"); yield return null; } } See: Scan Declaration public IEnumerable<Progress> ScanAsync(NavGraph graphToScan) Parameters Type Name Description Pathfinding.NavGraph graphToScan Returns Type Description IEnumerable<Progress> ScanAsync(NavGraph[]) Scans all specified graphs asynchronously. This is a IEnumerable, you can loop through it to get the progress foreach (Progress progress in AstarPath.active.ScanAsync()) { Debug.Log(\"Scanning... \" + progress.description + \" - \" + (progress.progress*100).ToString(\"0\") + \"%\"); } You can scan graphs asyncronously by yielding when you loop through the progress. Note that this does not guarantee a good framerate, but it will allow you to at least show a progress bar during scanning. IEnumerator Start () { foreach (Progress progress in AstarPath.active.ScanAsync()) { Debug.Log(\"Scanning... \" + progress.description + \" - \" + (progress.progress*100).ToString(\"0\") + \"%\"); yield return null; } } See: Scan Declaration public IEnumerable<Progress> ScanAsync(NavGraph[] graphsToScan = null) Parameters Type Name Description Pathfinding.NavGraph[] graphsToScan The graphs to scan. If this parameter is null then all graphs will be scanned Returns Type Description IEnumerable<Progress> StartPath(Path, bool) Adds the path to a queue so that it will be calculated as soon as possible. The callback specified when constructing the path will be called when the path has been calculated. Usually you should use the Seeker component instead of calling this function directly. Declaration public static void StartPath(Path path, bool pushToFront = false) Parameters Type Name Description Pathfinding.Path path The path that should be enqueued. bool pushToFront If true, the path will be pushed to the front of the queue, bypassing all waiting paths and making it the next path to be calculated. This can be useful if you have a path which you want to prioritize over all others. Be careful to not overuse it though. If too many paths are put in the front of the queue often, this can lead to normal paths having to wait a very long time before being calculated. UpdateGraphs(GraphUpdateObject, float) Update all graphs using the GraphUpdateObject after delay seconds. This can be used to, e.g make all nodes in a region unwalkable, or set them to a higher penalty. See: FlushGraphUpdates See: batchGraphUpdates See: graph-updates (view in online documentation for working links) Declaration public void UpdateGraphs(GraphUpdateObject ob, float delay) Parameters Type Name Description Pathfinding.GraphUpdateObject ob float delay UpdateGraphs(GraphUpdateObject) Update all graphs using the GraphUpdateObject. This can be used to, e.g make all nodes in a region unwalkable, or set them to a higher penalty. The graphs will be updated as soon as possible (with respect to AstarPath.batchGraphUpdates See: FlushGraphUpdates See: batchGraphUpdates See: graph-updates (view in online documentation for working links) Declaration public void UpdateGraphs(GraphUpdateObject ob) Parameters Type Name Description Pathfinding.GraphUpdateObject ob UpdateGraphs(Bounds, float) Update all graphs within bounds after delay seconds. The graphs will be updated as soon as possible. See: FlushGraphUpdates See: batchGraphUpdates See: graph-updates (view in online documentation for working links) Declaration public void UpdateGraphs(Bounds bounds, float delay) Parameters Type Name Description Bounds bounds float delay UpdateGraphs(Bounds) Update all graphs within bounds. The graphs will be updated as soon as possible. This is equivalent to UpdateGraphs(new GraphUpdateObject(bounds)); See: FlushGraphUpdates See: batchGraphUpdates See: graph-updates (view in online documentation for working links) Declaration public void UpdateGraphs(Bounds bounds) Parameters Type Name Description Bounds bounds WaitForPath(Path) Wait for the specified path to be calculated. Normally it takes a few frames for a path to get calculated and returned. Deprecated: This method has been renamed to AstarPath.BlockUntilCalculated(Pathfinding.Path). Declaration [Obsolete(\"This method has been renamed to BlockUntilCalculated\")] public static void WaitForPath(Path path) Parameters Type Name Description Pathfinding.Path path Implements ISerializationCallbackReceiver"
  },
  "api/Global.BoolEventChannel.html": {
    "href": "api/Global.BoolEventChannel.html",
    "title": "Class BoolEventChannel | LobsterFramework documentation",
    "keywords": "Class BoolEventChannel Inheritance object Object ScriptableObject DescriptionBaseSO BoolEventChannel Inherited Members DescriptionBaseSO.description ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"EventChannel/BoolEventChannel\")] public class BoolEventChannel : DescriptionBaseSO Fields OnEventRaised Declaration public UnityAction<bool> OnEventRaised Field Value Type Description UnityAction<bool> Methods RaiseEvent(bool) Declaration public void RaiseEvent(bool arg) Parameters Type Name Description bool arg"
  },
  "api/Global.ChatController.html": {
    "href": "api/Global.ChatController.html",
    "title": "Class ChatController | LobsterFramework documentation",
    "keywords": "Class ChatController Inheritance object Object Component Behaviour MonoBehaviour ChatController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: Assembly-CSharp.dll Syntax public class ChatController : MonoBehaviour Fields ChatDisplayOutput Declaration public TMP_Text ChatDisplayOutput Field Value Type Description TMPro.TMP_Text ChatInputField Declaration public TMP_InputField ChatInputField Field Value Type Description TMPro.TMP_InputField ChatScrollbar Declaration public Scrollbar ChatScrollbar Field Value Type Description UnityEngine.UI.Scrollbar"
  },
  "api/Global.ControllerData.html": {
    "href": "api/Global.ControllerData.html",
    "title": "Class ControllerData | LobsterFramework documentation",
    "keywords": "Class ControllerData Inheritance object Object ScriptableObject ControllerData AITrackData Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class ControllerData : ScriptableObject"
  },
  "api/Global.DescriptionBaseSO.html": {
    "href": "api/Global.DescriptionBaseSO.html",
    "title": "Class DescriptionBaseSO | LobsterFramework documentation",
    "keywords": "Class DescriptionBaseSO Inheritance object Object ScriptableObject DescriptionBaseSO BoolEventChannel FloatEventChannel IntEventChannel SceneEventChannel VoidEventChannel Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class DescriptionBaseSO : ScriptableObject Fields description Declaration [TextArea] public string description Field Value Type Description string"
  },
  "api/Global.DialogueBox.html": {
    "href": "api/Global.DialogueBox.html",
    "title": "Class DialogueBox | LobsterFramework documentation",
    "keywords": "Class DialogueBox Inheritance object DialogueBox Namespace: Global Assembly: MyScripts.dll Syntax public class DialogueBox Properties MainText Declaration public TMP_Text MainText { get; } Property Value Type Description TMPro.TMP_Text ResponseButtonTemplate Declaration public Button ResponseButtonTemplate { get; } Property Value Type Description UnityEngine.UI.Button ResponseLayoutGroup Declaration public RectTransform ResponseLayoutGroup { get; } Property Value Type Description RectTransform SpeakerIcon Declaration public Image SpeakerIcon { get; } Property Value Type Description UnityEngine.UI.Image SpeakerName Declaration public TMP_Text SpeakerName { get; } Property Value Type Description TMPro.TMP_Text"
  },
  "api/Global.DropdownSample.html": {
    "href": "api/Global.DropdownSample.html",
    "title": "Class DropdownSample | LobsterFramework documentation",
    "keywords": "Class DropdownSample Inheritance object Object Component Behaviour MonoBehaviour DropdownSample Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: Assembly-CSharp.dll Syntax public class DropdownSample : MonoBehaviour Methods OnButtonClick() Declaration public void OnButtonClick()"
  },
  "api/Global.EnvMapAnimator.html": {
    "href": "api/Global.EnvMapAnimator.html",
    "title": "Class EnvMapAnimator | LobsterFramework documentation",
    "keywords": "Class EnvMapAnimator Inheritance object Object Component Behaviour MonoBehaviour EnvMapAnimator Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: Assembly-CSharp.dll Syntax public class EnvMapAnimator : MonoBehaviour Fields RotationSpeeds Declaration public Vector3 RotationSpeeds Field Value Type Description Vector3"
  },
  "api/Global.ExposedFieldAttribute.html": {
    "href": "api/Global.ExposedFieldAttribute.html",
    "title": "Class ExposedFieldAttribute | LobsterFramework documentation",
    "keywords": "Class ExposedFieldAttribute Inheritance object Attribute ExposedFieldAttribute Namespace: Global Assembly: MyScripts.dll Syntax public class ExposedFieldAttribute : Attribute"
  },
  "api/Global.FloatEventChannel.html": {
    "href": "api/Global.FloatEventChannel.html",
    "title": "Class FloatEventChannel | LobsterFramework documentation",
    "keywords": "Class FloatEventChannel Inheritance object Object ScriptableObject DescriptionBaseSO FloatEventChannel Inherited Members DescriptionBaseSO.description ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"EventChannel/FloatEventChannel\")] public class FloatEventChannel : DescriptionBaseSO Fields OnEventRaised Declaration public UnityAction<float> OnEventRaised Field Value Type Description UnityAction<float> Methods RaiseEvent(float) Declaration public void RaiseEvent(float arg) Parameters Type Name Description float arg"
  },
  "api/Global.GameManager.html": {
    "href": "api/Global.GameManager.html",
    "title": "Class GameManager | LobsterFramework documentation",
    "keywords": "Class GameManager Inheritance object Object Component Behaviour MonoBehaviour GameManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class GameManager : MonoBehaviour Properties EXPIRE_ATTACK_TIME Declaration public float EXPIRE_ATTACK_TIME { get; } Property Value Type Description float Instance Declaration public static GameManager Instance { get; } Property Value Type Description GameManager POSTURE_BROKEN_DAMAGE_MODIFIER Declaration public float POSTURE_BROKEN_DAMAGE_MODIFIER { get; } Property Value Type Description float POSTURE_BROKEN_DURATION Declaration public float POSTURE_BROKEN_DURATION { get; } Property Value Type Description float SUPPRESS_REGEN_DURATION Declaration public float SUPPRESS_REGEN_DURATION { get; } Property Value Type Description float TAG_ENTITY Declaration public string TAG_ENTITY { get; } Property Value Type Description string TAG_INTERACTABLE Declaration public string TAG_INTERACTABLE { get; } Property Value Type Description string TAG_INTERACTOR Declaration public string TAG_INTERACTOR { get; } Property Value Type Description string TAG_PLAYER Declaration public string TAG_PLAYER { get; } Property Value Type Description string TAG_PROJECTILE Declaration public string TAG_PROJECTILE { get; } Property Value Type Description string TARGET_FRAME_RATE Declaration public int TARGET_FRAME_RATE { get; } Property Value Type Description int Methods ExecuteDelegate(UnityAction, float) Execute UnityAction after specified seconds of delay in the Update Loop. If delay is set to 0, action will be executed on next frame Declaration public static void ExecuteDelegate(UnityAction action, float timeDelay) Parameters Type Name Description UnityAction action Action to be executed float timeDelay Update() Declaration public void Update()"
  },
  "api/Global.GameStateManager.html": {
    "href": "api/Global.GameStateManager.html",
    "title": "Class GameStateManager | LobsterFramework documentation",
    "keywords": "Class GameStateManager Inheritance object Object Component Behaviour MonoBehaviour GameStateManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class GameStateManager : MonoBehaviour Methods ExitToMenu() Declaration public void ExitToMenu() OnPlayerDeath() Declaration public void OnPlayerDeath() Pause(CallbackContext) Declaration public void Pause(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context PauseGame() Declaration public void PauseGame() PauseOrResume() Declaration public void PauseOrResume() RespawnPlayer() Declaration public void RespawnPlayer() ResumeGame() Declaration public void ResumeGame()"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | LobsterFramework documentation",
    "keywords": "Namespace Classes ActionDataSODrawer ActionPrioritySO AIAnimationConfigurator AITrackData AstarPath BoolEventChannel ChatController ControllerData DescriptionBaseSO DialogueBox DropdownSample EnvMapAnimator ExposedFieldAttribute FloatEventChannel GameManager GameStateManager IEquipable IntEventChannel IntroMenu OrderedSet<T> PlayerInput Projectile RefActionPriorityDrawer RefBoolDrawer RefFloatDrawer RefIntDrawer RefStringDrawer ResourceStorage SceneEventChannel SceneLoader This class manages the scene loading and unloading. SerializableLinkedList<T> SerializedPropertyExtensions Extension class for SerializedProperties See also: http://answers.unity3d.com/questions/627090/convert-serializedproperty-to-custom-class.html SimpleItem SnapToNode Helper editor script to snap an object to the closest node. Used in the \"Turn Based\" example scene for snapping obstacles to the hexagon grid. StringEventChannel TargetConfig Task TestBehavior VarBool VarBoolDrawer VarFloat VarFloatDrawer Variable<T> VarInt VarIntDrawer VarString VarStringDrawer VoidEventChannel Structs ActionPriority PlayerInput.PlayerActions RefAbilityPriority RefBool RefFloat RefInt RefString Interfaces IConsumable PlayerInput.IPlayerActions Enums AstarPath.AstarDistribution Information about where the package was downloaded Scene Delegates Task.FinishedHandler"
  },
  "api/Global.IConsumable.html": {
    "href": "api/Global.IConsumable.html",
    "title": "Interface IConsumable | LobsterFramework documentation",
    "keywords": "Interface IConsumable Namespace: Global Assembly: MyScripts.dll Syntax public interface IConsumable Methods Consume() Declaration void Consume()"
  },
  "api/Global.IEquipable.html": {
    "href": "api/Global.IEquipable.html",
    "title": "Class IEquipable | LobsterFramework documentation",
    "keywords": "Class IEquipable Inheritance object Object Component Behaviour MonoBehaviour IEquipable Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class IEquipable : MonoBehaviour"
  },
  "api/Global.IntEventChannel.html": {
    "href": "api/Global.IntEventChannel.html",
    "title": "Class IntEventChannel | LobsterFramework documentation",
    "keywords": "Class IntEventChannel Inheritance object Object ScriptableObject DescriptionBaseSO IntEventChannel Inherited Members DescriptionBaseSO.description ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"EventChannel/IntEventChannel\")] public class IntEventChannel : DescriptionBaseSO Fields OnEventRaised Declaration public UnityAction<int> OnEventRaised Field Value Type Description UnityAction<int> Methods RaiseEvent(int) Declaration public void RaiseEvent(int arg) Parameters Type Name Description int arg"
  },
  "api/Global.IntroMenu.html": {
    "href": "api/Global.IntroMenu.html",
    "title": "Class IntroMenu | LobsterFramework documentation",
    "keywords": "Class IntroMenu Inheritance object Object Component Behaviour MonoBehaviour IntroMenu Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class IntroMenu : MonoBehaviour Methods PlayGame() Declaration public void PlayGame()"
  },
  "api/Global.OrderedSet-1.html": {
    "href": "api/Global.OrderedSet-1.html",
    "title": "Class OrderedSet<T> | LobsterFramework documentation",
    "keywords": "Class OrderedSet<T> Inheritance object OrderedSet<T> Namespace: Global Assembly: MyScripts.dll Syntax public class OrderedSet<T> Type Parameters Name Description T Constructors OrderedSet() Declaration public OrderedSet() OrderedSet(IEqualityComparer<T>) Declaration public OrderedSet(IEqualityComparer<T> comparer) Parameters Type Name Description IEqualityComparer<T> comparer Properties Count Declaration public int Count { get; } Property Value Type Description int IsReadOnly Declaration public virtual bool IsReadOnly { get; } Property Value Type Description bool Methods Add(T) Declaration public bool Add(T item) Parameters Type Name Description T item Returns Type Description bool Clear() Declaration public void Clear() Contains(T) Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description bool CopyTo(T[], int) Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array int arrayIndex GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Remove(T) Declaration public bool Remove(T item) Parameters Type Name Description T item Returns Type Description bool"
  },
  "api/Global.PlayerInput.html": {
    "href": "api/Global.PlayerInput.html",
    "title": "Class PlayerInput | LobsterFramework documentation",
    "keywords": "Class PlayerInput Inheritance object PlayerInput Implements UnityEngine.InputSystem.IInputActionCollection2 UnityEngine.InputSystem.IInputActionCollection Namespace: Global Assembly: MyScripts.dll Syntax public class PlayerInput : IInputActionCollection2, IInputActionCollection Constructors PlayerInput() Declaration public PlayerInput() Properties asset Declaration public InputActionAsset asset { get; } Property Value Type Description UnityEngine.InputSystem.InputActionAsset bindingMask Declaration public InputBinding? bindingMask { get; set; } Property Value Type Description UnityEngine.InputSystem.InputBinding? bindings Declaration public IEnumerable<InputBinding> bindings { get; } Property Value Type Description IEnumerable<UnityEngine.InputSystem.InputBinding> controlSchemes Declaration public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value Type Description UnityEngine.InputSystem.Utilities.ReadOnlyArray<TValue><InputControlScheme> devices Declaration public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value Type Description UnityEngine.InputSystem.Utilities.ReadOnlyArray<TValue><InputDevice>? Player Declaration public PlayerInput.PlayerActions Player { get; } Property Value Type Description PlayerInput.PlayerActions Methods Contains(InputAction) Declaration public bool Contains(InputAction action) Parameters Type Name Description UnityEngine.InputSystem.InputAction action Returns Type Description bool Disable() Declaration public void Disable() Dispose() Declaration public void Dispose() Enable() Declaration public void Enable() FindAction(string, bool) Declaration public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters Type Name Description string actionNameOrId bool throwIfNotFound Returns Type Description UnityEngine.InputSystem.InputAction FindBinding(InputBinding, out InputAction) Declaration public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters Type Name Description UnityEngine.InputSystem.InputBinding bindingMask UnityEngine.InputSystem.InputAction action Returns Type Description int GetEnumerator() Declaration public IEnumerator<InputAction> GetEnumerator() Returns Type Description IEnumerator<UnityEngine.InputSystem.InputAction> Implements UnityEngine.InputSystem.IInputActionCollection2 UnityEngine.InputSystem.IInputActionCollection"
  },
  "api/Global.PlayerInput.IPlayerActions.html": {
    "href": "api/Global.PlayerInput.IPlayerActions.html",
    "title": "Interface PlayerInput.IPlayerActions | LobsterFramework documentation",
    "keywords": "Interface PlayerInput.IPlayerActions Namespace: Global Assembly: MyScripts.dll Syntax public interface PlayerInput.IPlayerActions Methods OnAttack(CallbackContext) Declaration void OnAttack(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnGuard(CallbackContext) Declaration void OnGuard(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnMove(CallbackContext) Declaration void OnMove(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnNextInteractable(CallbackContext) Declaration void OnNextInteractable(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnPauseResume(CallbackContext) Declaration void OnPauseResume(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnPreviousInteractable(CallbackContext) Declaration void OnPreviousInteractable(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnPrimaryInteraction(CallbackContext) Declaration void OnPrimaryInteraction(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnRotate(CallbackContext) Declaration void OnRotate(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnSecondaryInteraction(CallbackContext) Declaration void OnSecondaryInteraction(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context OnShoot(CallbackContext) Declaration void OnShoot(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context"
  },
  "api/Global.PlayerInput.PlayerActions.html": {
    "href": "api/Global.PlayerInput.PlayerActions.html",
    "title": "Struct PlayerInput.PlayerActions | LobsterFramework documentation",
    "keywords": "Struct PlayerInput.PlayerActions Namespace: Global Assembly: MyScripts.dll Syntax public struct PlayerInput.PlayerActions Constructors PlayerActions(PlayerInput) Declaration public PlayerActions(PlayerInput wrapper) Parameters Type Name Description PlayerInput wrapper Properties Attack Declaration public InputAction Attack { get; } Property Value Type Description UnityEngine.InputSystem.InputAction enabled Declaration public bool enabled { get; } Property Value Type Description bool Guard Declaration public InputAction Guard { get; } Property Value Type Description UnityEngine.InputSystem.InputAction Move Declaration public InputAction Move { get; } Property Value Type Description UnityEngine.InputSystem.InputAction NextInteractable Declaration public InputAction NextInteractable { get; } Property Value Type Description UnityEngine.InputSystem.InputAction PauseResume Declaration public InputAction PauseResume { get; } Property Value Type Description UnityEngine.InputSystem.InputAction PreviousInteractable Declaration public InputAction PreviousInteractable { get; } Property Value Type Description UnityEngine.InputSystem.InputAction PrimaryInteraction Declaration public InputAction PrimaryInteraction { get; } Property Value Type Description UnityEngine.InputSystem.InputAction Rotate Declaration public InputAction Rotate { get; } Property Value Type Description UnityEngine.InputSystem.InputAction SecondaryInteraction Declaration public InputAction SecondaryInteraction { get; } Property Value Type Description UnityEngine.InputSystem.InputAction Shoot Declaration public InputAction Shoot { get; } Property Value Type Description UnityEngine.InputSystem.InputAction Methods AddCallbacks(IPlayerActions) Declaration public void AddCallbacks(PlayerInput.IPlayerActions instance) Parameters Type Name Description PlayerInput.IPlayerActions instance Disable() Declaration public void Disable() Enable() Declaration public void Enable() Get() Declaration public InputActionMap Get() Returns Type Description UnityEngine.InputSystem.InputActionMap RemoveCallbacks(IPlayerActions) Declaration public void RemoveCallbacks(PlayerInput.IPlayerActions instance) Parameters Type Name Description PlayerInput.IPlayerActions instance SetCallbacks(IPlayerActions) Declaration public void SetCallbacks(PlayerInput.IPlayerActions instance) Parameters Type Name Description PlayerInput.IPlayerActions instance Operators implicit operator InputActionMap(PlayerActions) Declaration public static implicit operator InputActionMap(PlayerInput.PlayerActions set) Parameters Type Name Description PlayerInput.PlayerActions set Returns Type Description UnityEngine.InputSystem.InputActionMap"
  },
  "api/Global.Projectile.html": {
    "href": "api/Global.Projectile.html",
    "title": "Class Projectile | LobsterFramework documentation",
    "keywords": "Class Projectile Inheritance object Object Component Behaviour MonoBehaviour Projectile Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [RequireComponent(typeof(Rigidbody2D))] [RequireComponent(typeof(Collider2D))] public class Projectile : MonoBehaviour Methods Activate() Declaration public void Activate()"
  },
  "api/Global.RefAbilityPriority.html": {
    "href": "api/Global.RefAbilityPriority.html",
    "title": "Struct RefAbilityPriority | LobsterFramework documentation",
    "keywords": "Struct RefAbilityPriority Namespace: Global Assembly: MyScripts.dll Syntax [Serializable] public struct RefAbilityPriority Constructors RefAbilityPriority(ActionPriority, bool, ActionPrioritySO) Declaration public RefAbilityPriority(ActionPriority value = default, bool useSharedValue = false, ActionPrioritySO sharedValue = null) Parameters Type Name Description ActionPriority value bool useSharedValue ActionPrioritySO sharedValue Properties Value Declaration public ActionPriority Value { get; } Property Value Type Description ActionPriority"
  },
  "api/Global.RefActionPriorityDrawer.html": {
    "href": "api/Global.RefActionPriorityDrawer.html",
    "title": "Class RefActionPriorityDrawer | LobsterFramework documentation",
    "keywords": "Class RefActionPriorityDrawer Inheritance object GUIDrawer PropertyDrawer RefActionPriorityDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(RefAbilityPriority))] public class RefActionPriorityDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.RefBool.html": {
    "href": "api/Global.RefBool.html",
    "title": "Struct RefBool | LobsterFramework documentation",
    "keywords": "Struct RefBool Namespace: Global Assembly: MyScripts.dll Syntax [Serializable] public struct RefBool Constructors RefBool(bool, bool, VarBool) Declaration public RefBool(bool value = false, bool useSharedValue = false, VarBool sharedValue = null) Parameters Type Name Description bool value bool useSharedValue VarBool sharedValue Properties Value Declaration public bool Value { get; set; } Property Value Type Description bool"
  },
  "api/Global.RefBoolDrawer.html": {
    "href": "api/Global.RefBoolDrawer.html",
    "title": "Class RefBoolDrawer | LobsterFramework documentation",
    "keywords": "Class RefBoolDrawer Inheritance object GUIDrawer PropertyDrawer RefBoolDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(RefBool))] public class RefBoolDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.RefFloat.html": {
    "href": "api/Global.RefFloat.html",
    "title": "Struct RefFloat | LobsterFramework documentation",
    "keywords": "Struct RefFloat Namespace: Global Assembly: MyScripts.dll Syntax [Serializable] public struct RefFloat Constructors RefFloat(float, bool, VarFloat) Declaration public RefFloat(float value = 0, bool useSharedValue = false, VarFloat sharedValue = null) Parameters Type Name Description float value bool useSharedValue VarFloat sharedValue Properties Value Declaration public float Value { get; set; } Property Value Type Description float Operators implicit operator float(RefFloat) Declaration public static implicit operator float(RefFloat value) Parameters Type Name Description RefFloat value Returns Type Description float implicit operator RefFloat(float) Declaration public static implicit operator RefFloat(float value) Parameters Type Name Description float value Returns Type Description RefFloat"
  },
  "api/Global.RefFloatDrawer.html": {
    "href": "api/Global.RefFloatDrawer.html",
    "title": "Class RefFloatDrawer | LobsterFramework documentation",
    "keywords": "Class RefFloatDrawer Inheritance object GUIDrawer PropertyDrawer RefFloatDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(RefFloat))] public class RefFloatDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.RefInt.html": {
    "href": "api/Global.RefInt.html",
    "title": "Struct RefInt | LobsterFramework documentation",
    "keywords": "Struct RefInt Namespace: Global Assembly: MyScripts.dll Syntax [Serializable] public struct RefInt Constructors RefInt(int, bool, VarInt) Declaration public RefInt(int value = 0, bool useSharedValue = false, VarInt sharedValue = null) Parameters Type Name Description int value bool useSharedValue VarInt sharedValue Properties Value Declaration public int Value { get; set; } Property Value Type Description int"
  },
  "api/Global.RefIntDrawer.html": {
    "href": "api/Global.RefIntDrawer.html",
    "title": "Class RefIntDrawer | LobsterFramework documentation",
    "keywords": "Class RefIntDrawer Inheritance object GUIDrawer PropertyDrawer RefIntDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(RefInt))] public class RefIntDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.RefString.html": {
    "href": "api/Global.RefString.html",
    "title": "Struct RefString | LobsterFramework documentation",
    "keywords": "Struct RefString Namespace: Global Assembly: MyScripts.dll Syntax [Serializable] public struct RefString Constructors RefString(string, bool, VarString) Declaration public RefString(string value = \"\", bool useSharedValue = false, VarString sharedValue = null) Parameters Type Name Description string value bool useSharedValue VarString sharedValue Properties Value Declaration public string Value { get; set; } Property Value Type Description string"
  },
  "api/Global.RefStringDrawer.html": {
    "href": "api/Global.RefStringDrawer.html",
    "title": "Class RefStringDrawer | LobsterFramework documentation",
    "keywords": "Class RefStringDrawer Inheritance object GUIDrawer PropertyDrawer RefStringDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(RefString))] public class RefStringDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.ResourceStorage.html": {
    "href": "api/Global.ResourceStorage.html",
    "title": "Class ResourceStorage | LobsterFramework documentation",
    "keywords": "Class ResourceStorage Inheritance object ResourceStorage Namespace: Global Assembly: MyScripts.dll Syntax public static class ResourceStorage Methods GetSprite(string) Declaration public static Sprite GetSprite(string name) Parameters Type Name Description string name Returns Type Description Sprite LoadResource() Declaration public static void LoadResource() SaveResource() Declaration public static void SaveResource()"
  },
  "api/Global.Scene.html": {
    "href": "api/Global.Scene.html",
    "title": "Enum Scene | LobsterFramework documentation",
    "keywords": "Enum Scene Namespace: Global Assembly: MyScripts.dll Syntax public enum Scene Fields Name Description Gameplay IntroMenu"
  },
  "api/Global.SceneEventChannel.html": {
    "href": "api/Global.SceneEventChannel.html",
    "title": "Class SceneEventChannel | LobsterFramework documentation",
    "keywords": "Class SceneEventChannel Inheritance object Object ScriptableObject DescriptionBaseSO SceneEventChannel Inherited Members DescriptionBaseSO.description ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"EventChannel/SceneEventChannel\")] public class SceneEventChannel : DescriptionBaseSO Fields OnEventRaised Declaration public UnityAction<Scene> OnEventRaised Field Value Type Description UnityAction<Scene> Methods RaiseEvent(Scene) Declaration public void RaiseEvent(Scene scene) Parameters Type Name Description Scene scene"
  },
  "api/Global.SceneLoader.html": {
    "href": "api/Global.SceneLoader.html",
    "title": "Class SceneLoader | LobsterFramework documentation",
    "keywords": "Class SceneLoader This class manages the scene loading and unloading. Inheritance object Object Component Behaviour MonoBehaviour SceneLoader Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class SceneLoader : MonoBehaviour"
  },
  "api/Global.SerializableLinkedList-1.html": {
    "href": "api/Global.SerializableLinkedList-1.html",
    "title": "Class SerializableLinkedList<T> | LobsterFramework documentation",
    "keywords": "Class SerializableLinkedList<T> Inheritance object SerializableLinkedList<T> Implements ISerializationCallbackReceiver Namespace: Global Assembly: MyScripts.dll Syntax public class SerializableLinkedList<T> : ISerializationCallbackReceiver Type Parameters Name Description T Properties Count Declaration public int Count { get; } Property Value Type Description int IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool Methods Add(T) Declaration public void Add(T item) Parameters Type Name Description T item Clear() Declaration public void Clear() Contains(T) Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description bool CopyTo(T[], int) Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array int arrayIndex GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Remove(T) Declaration public bool Remove(T item) Parameters Type Name Description T item Returns Type Description bool Implements ISerializationCallbackReceiver"
  },
  "api/Global.SerializedPropertyExtensions.html": {
    "href": "api/Global.SerializedPropertyExtensions.html",
    "title": "Class SerializedPropertyExtensions | LobsterFramework documentation",
    "keywords": "Class SerializedPropertyExtensions Extension class for SerializedProperties See also: http://answers.unity3d.com/questions/627090/convert-serializedproperty-to-custom-class.html Inheritance object SerializedPropertyExtensions Namespace: Global Assembly: MyScripts.dll Syntax public static class SerializedPropertyExtensions Methods GetBaseClassesAndInterfaces(Type, bool) Declaration public static IEnumerable<Type> GetBaseClassesAndInterfaces(this Type type, bool includeSelf = false) Parameters Type Name Description Type type bool includeSelf Returns Type Description IEnumerable<Type> GetFieldOrPropertyValue<T>(string, object, bool, BindingFlags) Declaration public static T GetFieldOrPropertyValue<T>(string fieldName, object obj, bool includeAllBases = false, BindingFlags bindings = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) Parameters Type Name Description string fieldName object obj bool includeAllBases BindingFlags bindings Returns Type Description T Type Parameters Name Description T GetNestedObject<T>(string, object, bool) Iterates through objects to handle objects that are nested in the root object Declaration public static T GetNestedObject<T>(string path, object obj, bool includeAllBases = false) Parameters Type Name Description string path Path to the object through other properties e.g. PlayerInformation.Health object obj The root object from which this path leads to the property bool includeAllBases Include base classes and interfaces as well Returns Type Description T Returns the nested object casted to the type T Type Parameters Name Description T The type of the nested object GetSerializedPropertyRootComponent(SerializedProperty) Get the component of a serialized property Declaration public static Object GetSerializedPropertyRootComponent(SerializedProperty property) Parameters Type Name Description SerializedProperty property The property that is part of the component Returns Type Description Object The root component of the property GetValue<T>(SerializedProperty) Get the object the serialized property holds by using reflection Declaration public static T GetValue<T>(this SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description T Returns the object type T if it is the type the property actually contains Type Parameters Name Description T The object type that the property contains SetFieldOrPropertyValue(string, object, object, bool, BindingFlags) Declaration public static bool SetFieldOrPropertyValue(string fieldName, object obj, object value, bool includeAllBases = false, BindingFlags bindings = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) Parameters Type Name Description string fieldName object obj object value bool includeAllBases BindingFlags bindings Returns Type Description bool SetValue<T>(SerializedProperty, T) Set the value of a field of the property with the type T Declaration public static bool SetValue<T>(this SerializedProperty property, T value) Parameters Type Name Description SerializedProperty property The serialized property that should be set T value The new value for the specified property Returns Type Description bool Returns if the operation was successful or failed Type Parameters Name Description T The type of the field that is set"
  },
  "api/Global.SimpleItem.html": {
    "href": "api/Global.SimpleItem.html",
    "title": "Class SimpleItem | LobsterFramework documentation",
    "keywords": "Class SimpleItem Inheritance object Object ScriptableObject SimpleItem Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Item/Simple Item\")] public class SimpleItem : ScriptableObject Properties Description Declaration public string Description { get; } Property Value Type Description string Icon Declaration public Sprite Icon { get; } Property Value Type Description Sprite ItemLimit Declaration public int ItemLimit { get; } Property Value Type Description int ItemName Declaration public string ItemName { get; } Property Value Type Description string Methods Initialize(GameObject) Declaration public virtual void Initialize(GameObject obj) Parameters Type Name Description GameObject obj"
  },
  "api/Global.SnapToNode.html": {
    "href": "api/Global.SnapToNode.html",
    "title": "Class SnapToNode | LobsterFramework documentation",
    "keywords": "Class SnapToNode Helper editor script to snap an object to the closest node. Used in the \"Turn Based\" example scene for snapping obstacles to the hexagon grid. Inheritance object Object Component Behaviour MonoBehaviour SnapToNode Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: AstarPathfindingProject.dll Syntax [ExecuteInEditMode] [HelpURL(\"http://arongranberg.com/astar/docs/class_snap_to_node.php\")] public class SnapToNode : MonoBehaviour"
  },
  "api/Global.StringEventChannel.html": {
    "href": "api/Global.StringEventChannel.html",
    "title": "Class StringEventChannel | LobsterFramework documentation",
    "keywords": "Class StringEventChannel Inheritance object Object ScriptableObject StringEventChannel Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"EventChannel/String Channel\")] public class StringEventChannel : ScriptableObject Fields OnEventRaised Declaration public UnityAction<string> OnEventRaised Field Value Type Description UnityAction<string> Methods RaiseEvent(string) Declaration public void RaiseEvent(string arg) Parameters Type Name Description string arg"
  },
  "api/Global.TargetConfig.html": {
    "href": "api/Global.TargetConfig.html",
    "title": "Class TargetConfig | LobsterFramework documentation",
    "keywords": "Class TargetConfig Inheritance object Object Component Behaviour MonoBehaviour TargetConfig Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class TargetConfig : MonoBehaviour"
  },
  "api/Global.Task.FinishedHandler.html": {
    "href": "api/Global.Task.FinishedHandler.html",
    "title": "Delegate Task.FinishedHandler | LobsterFramework documentation",
    "keywords": "Delegate Task.FinishedHandler Namespace: Global Assembly: MyScripts.dll Syntax public delegate void Task.FinishedHandler(bool manual) Parameters Type Name Description bool manual"
  },
  "api/Global.Task.html": {
    "href": "api/Global.Task.html",
    "title": "Class Task | LobsterFramework documentation",
    "keywords": "Class Task Inheritance object Task Namespace: Global Assembly: MyScripts.dll Syntax public class Task Constructors Task(IEnumerator, bool) Declaration public Task(IEnumerator c, bool autoStart = true) Parameters Type Name Description IEnumerator c bool autoStart Properties Paused Declaration public bool Paused { get; } Property Value Type Description bool Running Declaration public bool Running { get; } Property Value Type Description bool Methods Pause() Declaration public void Pause() Start() Declaration public void Start() Stop() Declaration public void Stop() Unpause() Declaration public void Unpause() Events Finished Declaration public event Task.FinishedHandler Finished Event Type Type Description Task.FinishedHandler"
  },
  "api/Global.TestBehavior.html": {
    "href": "api/Global.TestBehavior.html",
    "title": "Class TestBehavior | LobsterFramework documentation",
    "keywords": "Class TestBehavior Inheritance object Object Component Behaviour MonoBehaviour TestBehavior Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class TestBehavior : MonoBehaviour"
  },
  "api/Global.VarBool.html": {
    "href": "api/Global.VarBool.html",
    "title": "Class VarBool | LobsterFramework documentation",
    "keywords": "Class VarBool Inheritance object Object ScriptableObject Variable<bool> VarBool Inherited Members Variable<bool>.Value ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Variables/Boolean\")] public class VarBool : Variable<bool>"
  },
  "api/Global.VarBoolDrawer.html": {
    "href": "api/Global.VarBoolDrawer.html",
    "title": "Class VarBoolDrawer | LobsterFramework documentation",
    "keywords": "Class VarBoolDrawer Inheritance object GUIDrawer PropertyDrawer VarBoolDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(VarBool))] public class VarBoolDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.VarFloat.html": {
    "href": "api/Global.VarFloat.html",
    "title": "Class VarFloat | LobsterFramework documentation",
    "keywords": "Class VarFloat Inheritance object Object ScriptableObject Variable<float> VarFloat Inherited Members Variable<float>.Value ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Variables/Float\")] public class VarFloat : Variable<float>"
  },
  "api/Global.VarFloatDrawer.html": {
    "href": "api/Global.VarFloatDrawer.html",
    "title": "Class VarFloatDrawer | LobsterFramework documentation",
    "keywords": "Class VarFloatDrawer Inheritance object GUIDrawer PropertyDrawer VarFloatDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(VarFloat))] public class VarFloatDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.Variable-1.html": {
    "href": "api/Global.Variable-1.html",
    "title": "Class Variable<T> | LobsterFramework documentation",
    "keywords": "Class Variable<T> Inheritance object Object ScriptableObject Variable<T> VarBool VarFloat VarInt VarString Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax public class Variable<T> : ScriptableObject Type Parameters Name Description T Properties Value Declaration public T Value { get; set; } Property Value Type Description T"
  },
  "api/Global.VarInt.html": {
    "href": "api/Global.VarInt.html",
    "title": "Class VarInt | LobsterFramework documentation",
    "keywords": "Class VarInt Inheritance object Object ScriptableObject Variable<int> VarInt Inherited Members Variable<int>.Value ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Variables/Integer\")] public class VarInt : Variable<int>"
  },
  "api/Global.VarIntDrawer.html": {
    "href": "api/Global.VarIntDrawer.html",
    "title": "Class VarIntDrawer | LobsterFramework documentation",
    "keywords": "Class VarIntDrawer Inheritance object GUIDrawer PropertyDrawer VarIntDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(VarInt))] public class VarIntDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.VarString.html": {
    "href": "api/Global.VarString.html",
    "title": "Class VarString | LobsterFramework documentation",
    "keywords": "Class VarString Inheritance object Object ScriptableObject Variable<string> VarString Inherited Members Variable<string>.Value ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Variables/String\")] public class VarString : Variable<string>"
  },
  "api/Global.VarStringDrawer.html": {
    "href": "api/Global.VarStringDrawer.html",
    "title": "Class VarStringDrawer | LobsterFramework documentation",
    "keywords": "Class VarStringDrawer Inheritance object GUIDrawer PropertyDrawer VarStringDrawer Namespace: Global Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(VarString))] public class VarStringDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/Global.VoidEventChannel.html": {
    "href": "api/Global.VoidEventChannel.html",
    "title": "Class VoidEventChannel | LobsterFramework documentation",
    "keywords": "Class VoidEventChannel Inheritance object Object ScriptableObject DescriptionBaseSO VoidEventChannel Inherited Members DescriptionBaseSO.description ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: Global Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"EventChannel/VoidEventChannel\")] public class VoidEventChannel : DescriptionBaseSO Fields OnEventRaised Declaration public UnityAction OnEventRaised Field Value Type Description UnityAction Methods RaiseEvent() Declaration public void RaiseEvent()"
  },
  "api/LobsterFramework.AbilitySystem.Ability.AbilityConfig.html": {
    "href": "api/LobsterFramework.AbilitySystem.Ability.AbilityConfig.html",
    "title": "Class Ability.AbilityConfig | LobsterFramework documentation",
    "keywords": "Class Ability.AbilityConfig A configuration of the Ability, each configuration has its own settings that affects the execution of the Ability. This class should be subclassed inside subclasses of Ability with name 'Ability_Subclass_Name'Config. i.e CircleAttack which inherit from Ability must have a nested class named CircleAttackConfig inherited from this class Inheritance object Object ScriptableObject Ability.AbilityConfig CircleAttack.CircleAttackConfig Endure.EndureConfig Guard.GuardConfig RightSwipe.RightSwipeConfig Shoot.ShootConfig TestWeapon.TestWeaponConfig Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [Serializable] public class Ability.AbilityConfig : ScriptableObject Fields accessKey Declaration [HideInInspector] public int accessKey Field Value Type Description int endTime Declaration [HideInInspector] public float endTime Field Value Type Description float isSuspended Whether this ability has been halted, set this to true while the ability is running will terminate it Declaration public bool isSuspended Field Value Type Description bool Properties IsExecuting Declaration public bool IsExecuting { get; } Property Value Type Description bool OnCooldown Declaration public bool OnCooldown { get; } Property Value Type Description bool UseCooldown Declaration public bool UseCooldown { get; } Property Value Type Description bool Methods Close() Override this to perform any additional setups on destruction of parent object (i.e Remove links to unity action/events) Declaration public virtual void Close() Initialize() Override this to initialize action config on start up Declaration public virtual void Initialize() OnValidate() Declaration protected void OnValidate() Validate() Override this to validate data after making changes in inspector Declaration protected virtual void Validate()"
  },
  "api/LobsterFramework.AbilitySystem.Ability.html": {
    "href": "api/LobsterFramework.AbilitySystem.Ability.html",
    "title": "Class Ability | LobsterFramework documentation",
    "keywords": "Class Ability Abilities defines the kind of actions the parent object can make. Each subclass of Ability defines its own AbilityConfig and can be runned on multiple instances of its AbilityConfigs. Inheritance object Object ScriptableObject Ability CircleAttack Endure Guard RightSwipe Shoot WeaponAbility Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public abstract class Ability : ScriptableObject Fields abilityPriority Declaration public RefAbilityPriority abilityPriority Field Value Type Description RefAbilityPriority abilityRunner Declaration [HideInInspector] public AbilityRunner abilityRunner Field Value Type Description AbilityRunner Methods Action(AbilityConfig) Main body of the ability execution, implement this to create different abilities! Declaration protected abstract bool Action(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config The config being executed with Returns Type Description bool False if the ability has finished, otherwise true AddConfig(string) Add the config with specified name to this Ability, this should only be called by editor scripts Declaration public bool AddConfig(string name) Parameters Type Name Description string name The name of the config to be added Returns Type Description bool CleanUp() Callback when the gameobject is about to be disabled or destroyed Declaration public virtual void CleanUp() CompareByEnqueuePriority(Ability) Declaration public int CompareByEnqueuePriority(Ability other) Parameters Type Name Description Ability other Returns Type Description int CompareByExecutionPriority(Ability) Declaration public int CompareByExecutionPriority(Ability other) Parameters Type Name Description Ability other Returns Type Description int ConditionSatisfied(AbilityConfig) Additionaly utility method for skill check that can be imeplemented if the ability have additional requirements, this may varies beween different configs Declaration protected virtual bool ConditionSatisfied(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config The config being queried Returns Type Description bool HaltAbilities() Halt the execution of all abilities Declaration public void HaltAbilities() HaltAbilityExecution(string) // Suspend the execution of provided action and force it to finish at the current frame Declaration public bool HaltAbilityExecution(string name) Parameters Type Name Description string name Name of the configuration to terminate Returns Type Description bool The status of this operation HasConfig(string) Declaration public bool HasConfig(string configName) Parameters Type Name Description string configName Returns Type Description bool Initialize() Declaration protected virtual void Initialize() InterruptAnimation(string) Declaration public void InterruptAnimation(string configName) Parameters Type Name Description string configName IsExecuting(string) Check if the provided config is executing, this method will return false if the config is not present Declaration public bool IsExecuting(string name) Parameters Type Name Description string name The name of the config to be examined Returns Type Description bool True if the specified config is executing, otherwise false IsReady(string) Declaration public bool IsReady(string name) Parameters Type Name Description string name Returns Type Description bool OnActionFinish(AbilityConfig) Callback when the action is finished or halted, override this to clean up temporary data generated during the action. Declaration protected virtual void OnActionFinish(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config The config being processed OnAnimationInterrupt(AbilityConfig) Callback when the animation of the ability is interrupted by other abilities. Useful when abilities relies on animation events. Declaration protected virtual void OnAnimationInterrupt(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config OnDestroy() Declaration public void OnDestroy() OnEnqueue(AbilityConfig, string) Callback when the ability is added to the action executing queue Declaration protected virtual void OnEnqueue(Ability.AbilityConfig config, string configName) Parameters Type Name Description Ability.AbilityConfig config string configName OnStartUp() Declaration public void OnStartUp() OnTermination() Declaration public void OnTermination() RemoveConfig(string) Remove the config with specified name if present, this should only be called by editor scripts Declaration public bool RemoveConfig(string name) Parameters Type Name Description string name Name of the config to be removed Returns Type Description bool The status of this operation ResetStatus() Declaration public void ResetStatus() RunningCount() Declaration public int RunningCount() Returns Type Description int SaveConfigsAsAsset() Declaration public void SaveConfigsAsAsset() Signal(string) Declaration public void Signal(string configName) Parameters Type Name Description string configName SignalBody(AbilityConfig) Override this to implement signal event handler Declaration protected virtual void SignalBody(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Config to be signaled"
  },
  "api/LobsterFramework.AbilitySystem.AbilityData.html": {
    "href": "api/LobsterFramework.AbilitySystem.AbilityData.html",
    "title": "Class AbilityData | LobsterFramework documentation",
    "keywords": "Class AbilityData Inheritance object Object ScriptableObject AbilityData Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Ability/AbilityData\")] public class AbilityData : ScriptableObject Fields allAbilities Declaration public TypeAbilityDictionary allAbilities Field Value Type Description TypeAbilityDictionary availableAbilities Declaration public Dictionary<string, Ability> availableAbilities Field Value Type Description Dictionary<string, Ability> identifier Declaration public int identifier Field Value Type Description int stats Declaration public TypeAbilityStatDictionary stats Field Value Type Description TypeAbilityStatDictionary Methods AbilityStatsCheck<T>() Check if requirements for ActionComponents by Ability T are satisfied Declaration public bool AbilityStatsCheck<T>() where T : Ability Returns Type Description bool The result of the query Type Parameters Name Description T Type of the Ability to be queried AddAbility<T>() Declaration public bool AddAbility<T>() where T : Ability Returns Type Description bool Type Parameters Name Description T AddAbilityStat<T>() Called by editor scritps, add ActionComponent of type T to the set of available AbilityStats if not already present, return the status of the operation. Declaration public bool AddAbilityStat<T>() where T : AbilityStat Returns Type Description bool The status of the operation Type Parameters Name Description T Type of the AbilityStat to be added CopyActionAsset() Deep copy of action datas. Call this method after duplicate the ActionableData to ensure all of its contents are properly duplicated. Declaration public void CopyActionAsset() Initialize(AbilityRunner) Initialize the data containers, called by AbilityRunner on Start to initialize the Abilities. Declaration public void Initialize(AbilityRunner actionable) Parameters Type Name Description AbilityRunner actionable The Actionable component that operates on this data RemoveAbility<T>() Declaration public bool RemoveAbility<T>() where T : Ability Returns Type Description bool Type Parameters Name Description T RemoveAbilityStat<T>() Declaration public bool RemoveAbilityStat<T>() where T : AbilityStat Returns Type Description bool Type Parameters Name Description T SaveContentsAsAsset() Save data as assets by adding them to the AssetDataBase Declaration public void SaveContentsAsAsset() Terminate() Declaration public void Terminate()"
  },
  "api/LobsterFramework.AbilitySystem.AbilityRunner.html": {
    "href": "api/LobsterFramework.AbilitySystem.AbilityRunner.html",
    "title": "Class AbilityRunner | LobsterFramework documentation",
    "keywords": "Class AbilityRunner Component that provides access to a variety of movesets, it acts as a container and platform for different kinds of abilitiess and moves which are provided and fully implemented by associated sub-components. Requires actionable data to be supplied. Inheritance object Object Component Behaviour MonoBehaviour AbilityRunner Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [AddComponentMenu(\"AbilityRunner\")] public class AbilityRunner : MonoBehaviour Fields onActionBlocked Declaration public UnityAction<bool> onActionBlocked Field Value Type Description UnityAction<bool> onHyperArmored Declaration public UnityAction<bool> onHyperArmored Field Value Type Description UnityAction<bool> Properties ActionBlocked Declaration public bool ActionBlocked { get; } Property Value Type Description bool HyperArmored Declaration public bool HyperArmored { get; } Property Value Type Description bool Methods AnimationSignal() Used by animation events to send signals Declaration public void AnimationSignal() BlockAction() Add an effector to block actions, actions will be blocked if there's at least 1 effector. An event will be sent to all subscribers on action blocked. Declaration public int BlockAction() Returns Type Description int The id of the newly added effector DisArmor(int) Remove the specified effector for hyperarmor if it exists An event will be sent to subscribers on dishyperarmored Declaration public bool DisArmor(int id) Parameters Type Name Description int id The id of the effector to be removed Returns Type Description bool On successfully removal return true, otherwise false EnqueueAbilitiesInJoint<T, V>() Shorthand for EnqueueAbilitiesInJoint<T, V>(\"default\", \"default\") Declaration public bool EnqueueAbilitiesInJoint<T, V>() where T : Ability where V : Ability Returns Type Description bool Type Parameters Name Description T The type of the first ability V The type of the second ability EnqueueAbilitiesInJoint<T, V>(string, string) Enqueue two abilities of different types together with the second one being guaranteed to terminate no later than the first one. Declaration public bool EnqueueAbilitiesInJoint<T, V>(string config1, string config2) where T : Ability where V : Ability Parameters Type Name Description string config1 Configuration for the first ability string config2 Configuration for the second ability Returns Type Description bool Type Parameters Name Description T The type of the first ability V The type of the second ability EnqueueAbility<T>() A shortcut for enqueuing the action with default config, see EnqueueAction<T>(string name) for more details Declaration public bool EnqueueAbility<T>() where T : Ability Returns Type Description bool Type Parameters Name Description T EnqueueAbility<T>(string) Add the action with specified type (T) and config (name) to the executing queue, return the status of this operation. For this operation to be successful, the following must be satisfied: The entity must not be action blocked. (i.e Not affected by stun effect) The specified action of Type (T) as well as the config (name) must be present in the actionable data. The precondition of the specified action must be satisfied as well as the cooldown of the config if the action uses cooldowns. The specified action must not be currently running or enqueued. There must be no other actions with higher enqueue priority in the same action group executing by the entity. Note that this method should only be called inside Update(), calling it elsewhere will have unpredictable results. Declaration public bool EnqueueAbility<T>(string name) where T : Ability Parameters Type Name Description string name Name of the configuration to be enqueued Returns Type Description bool Type Parameters Name Description T Type of the Action to be enqueued GetAbilityStat<T>() Get the ability stat of type T attached to this Component if it is present. Declaration public T GetAbilityStat<T>() where T : AbilityStat Returns Type Description T Return the ability stat if it is present, otherwise null Type Parameters Name Description T Type of the AbilityStat being requested HaltAbility<T>(string) Stops the execution of the action and returns the status of this operation Declaration public bool HaltAbility<T>(string name) where T : Ability Parameters Type Name Description string name Name of the config of T to be halted Returns Type Description bool Return the status of this operation Type Parameters Name Description T Type of the action to be halted HyperArmor() Add an effector to provide hyperarmor for the object. While hyperarmored, abilities cannot be interrupted other than death. Hyperarmor will exist if there's at least 1 effector. An event will be sent to subscribers on hyperarmored. Declaration public int HyperArmor() Returns Type Description int The id of the newly adde effector IsAbilityReady<T>() A shortcut for IsInstanceReady<T>(\"default\"). Declaration public bool IsAbilityReady<T>() where T : Ability Returns Type Description bool The result of the query Type Parameters Name Description T Type of the Ability to be queried IsAbilityReady<T>(string) Check if the action instance of type T with config is ready. If T is not present or config is not available, return false. Declaration public bool IsAbilityReady<T>(string config) where T : Ability Parameters Type Name Description string config Name of the config to be queried Returns Type Description bool The result of the query Type Parameters Name Description T Type of the Ability to be queried IsAnimating(Ability, string) Check if the specified ability config pair is playing animation. Declaration public bool IsAnimating(Ability ability, string configName) Parameters Type Name Description Ability ability The ability to be queried string configName The config of the ability to be queried Returns Type Description bool Return true if the ability and the config are both valid and present and are playing animation, otherwise false Reset() Reset the status of all abilities and their configs to their initial state Declaration public void Reset() SaveAbilityData(string) Only to be called inside play mode! Save the current ability data as an asset with specified assetName to the default path. Declaration public void SaveAbilityData(string assetName) Parameters Type Name Description string assetName Name of the asset to be saved Signal<T>(string) Send a signal to the specified ability. Declaration public void Signal<T>(string configName = \"default\") where T : Ability Parameters Type Name Description string configName Type Parameters Name Description T StartAnimation<T>(string, string) Used by abilities to initiate animations, will override any currently running animations by other abilities Declaration public void StartAnimation<T>(string configName, string animation) where T : Ability Parameters Type Name Description string configName string animation Type Parameters Name Description T UnblockAction(int) Remvoe the specified effector that blocks the action if it exists. An event will be sent to subscribers on action unblocked. Declaration public bool UnblockAction(int id) Parameters Type Name Description int id The id of the effector to be removed Returns Type Description bool On successfully removal return true, otherwise false"
  },
  "api/LobsterFramework.AbilitySystem.AbilityStat.html": {
    "href": "api/LobsterFramework.AbilitySystem.AbilityStat.html",
    "title": "Class AbilityStat | LobsterFramework documentation",
    "keywords": "Class AbilityStat Inheritance object Object ScriptableObject AbilityStat CombatStat Mana Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public abstract class AbilityStat : ScriptableObject Methods CleanUp() Callback before the parent operator is disabled Declaration public virtual void CleanUp() Initialize() Initialize the component Declaration public virtual void Initialize() Reset() Declaration public void Reset() Update() Callback to update internal data on each frame Declaration public virtual void Update()"
  },
  "api/LobsterFramework.AbilitySystem.AbilityStatAttribute.html": {
    "href": "api/LobsterFramework.AbilitySystem.AbilityStatAttribute.html",
    "title": "Class AbilityStatAttribute | LobsterFramework documentation",
    "keywords": "Class AbilityStatAttribute Inheritance object Attribute AbilityStatAttribute Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class AbilityStatAttribute : Attribute Constructors AbilityStatAttribute(Type) Declaration public AbilityStatAttribute(Type type) Parameters Type Name Description Type type Fields types Declaration public static HashSet<Type> types Field Value Type Description HashSet<Type>"
  },
  "api/LobsterFramework.AbilitySystem.ActionOverseer.html": {
    "href": "api/LobsterFramework.AbilitySystem.ActionOverseer.html",
    "title": "Class ActionOverseer | LobsterFramework documentation",
    "keywords": "Class ActionOverseer Inheritance object Object Component Behaviour MonoBehaviour ActionOverseer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public class ActionOverseer : MonoBehaviour"
  },
  "api/LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.html": {
    "href": "api/LobsterFramework.AbilitySystem.AddAbilityMenuAttribute.html",
    "title": "Class AddAbilityMenuAttribute | LobsterFramework documentation",
    "keywords": "Class AddAbilityMenuAttribute Used to add Abilities to the pool of available Abilities. This will allow the creations of these abilities inside AbilityData Inheritance object Attribute AddAbilityMenuAttribute Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class AddAbilityMenuAttribute : Attribute Fields actions Declaration public static HashSet<Type> actions Field Value Type Description HashSet<Type> Methods AddAbility(Type) Declaration public void AddAbility(Type type) Parameters Type Name Description Type type"
  },
  "api/LobsterFramework.AbilitySystem.CircleAttack.CircleAttackConfig.html": {
    "href": "api/LobsterFramework.AbilitySystem.CircleAttack.CircleAttackConfig.html",
    "title": "Class CircleAttack.CircleAttackConfig | LobsterFramework documentation",
    "keywords": "Class CircleAttack.CircleAttackConfig Inheritance object Object ScriptableObject Ability.AbilityConfig CircleAttack.CircleAttackConfig Inherited Members Ability.AbilityConfig.accessKey Ability.AbilityConfig.endTime Ability.AbilityConfig.IsExecuting Ability.AbilityConfig.OnCooldown Ability.AbilityConfig.UseCooldown Ability.AbilityConfig.isSuspended Ability.AbilityConfig.Close() Ability.AbilityConfig.Initialize() Ability.AbilityConfig.Validate() Ability.AbilityConfig.OnValidate() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public class CircleAttack.CircleAttackConfig : Ability.AbilityConfig Fields effects Declaration public List<Effect> effects Field Value Type Description List<Effect> sprite Declaration public Sprite sprite Field Value Type Description Sprite spriteDuration Declaration public RefFloat spriteDuration Field Value Type Description RefFloat spritePoolTag Declaration public VarString spritePoolTag Field Value Type Description VarString targetSetting Declaration public TargetSetting targetSetting Field Value Type Description TargetSetting"
  },
  "api/LobsterFramework.AbilitySystem.CircleAttack.html": {
    "href": "api/LobsterFramework.AbilitySystem.CircleAttack.html",
    "title": "Class CircleAttack | LobsterFramework documentation",
    "keywords": "Class CircleAttack Inheritance object Object ScriptableObject Ability CircleAttack Inherited Members Ability.abilityRunner Ability.abilityPriority Ability.AddConfig(string) Ability.RemoveConfig(string) Ability.CleanUp() Ability.CompareByExecutionPriority(Ability) Ability.CompareByEnqueuePriority(Ability) Ability.ConditionSatisfied(Ability.AbilityConfig) Ability.RunningCount() Ability.HaltAbilityExecution(string) Ability.HaltAbilities() Ability.IsExecuting(string) Ability.IsReady(string) Ability.OnStartUp() Ability.OnTermination() Ability.ResetStatus() Ability.OnDestroy() Ability.SaveConfigsAsAsset() Ability.OnActionFinish(Ability.AbilityConfig) Ability.OnAnimationInterrupt(Ability.AbilityConfig) Ability.InterruptAnimation(string) Ability.OnEnqueue(Ability.AbilityConfig, string) Ability.HasConfig(string) Ability.Signal(string) Ability.SignalBody(Ability.AbilityConfig) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [RequireAbilityStats(typeof(CombatStat), new Type[] { })] public class CircleAttack : Ability Methods Action(AbilityConfig) Declaration protected override bool Action(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Returns Type Description bool Overrides Ability.Action(Ability.AbilityConfig) Initialize() Declaration protected override void Initialize() Overrides Ability.Initialize()"
  },
  "api/LobsterFramework.AbilitySystem.ClassNode.html": {
    "href": "api/LobsterFramework.AbilitySystem.ClassNode.html",
    "title": "Class ClassNode | LobsterFramework documentation",
    "keywords": "Class ClassNode Inheritance object ClassNode Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public class ClassNode Constructors ClassNode(Type) Declaration public ClassNode(Type type) Parameters Type Name Description Type type Fields children Declaration public List<ClassNode> children Field Value Type Description List<ClassNode> parent Declaration public ClassNode parent Field Value Type Description ClassNode requirements Declaration public HashSet<Type> requirements Field Value Type Description HashSet<Type> type Declaration public Type type Field Value Type Description Type"
  },
  "api/LobsterFramework.AbilitySystem.CombatStat.html": {
    "href": "api/LobsterFramework.AbilitySystem.CombatStat.html",
    "title": "Class CombatStat | LobsterFramework documentation",
    "keywords": "Class CombatStat Inheritance object Object ScriptableObject AbilityStat CombatStat Inherited Members AbilityStat.Reset() AbilityStat.Initialize() AbilityStat.CleanUp() AbilityStat.Update() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [AbilityStat(typeof(CombatStat))] public class CombatStat : AbilityStat Fields attackDamage Declaration public RefInt attackDamage Field Value Type Description RefInt attackRange Declaration public RefFloat attackRange Field Value Type Description RefFloat defense Declaration public RefInt defense Field Value Type Description RefInt"
  },
  "api/LobsterFramework.AbilitySystem.ComponentRequiredAttribute.html": {
    "href": "api/LobsterFramework.AbilitySystem.ComponentRequiredAttribute.html",
    "title": "Class ComponentRequiredAttribute | LobsterFramework documentation",
    "keywords": "Class ComponentRequiredAttribute Mark this ability as requiring the specified components on the parent gameobject to run Inheritance object Attribute ComponentRequiredAttribute Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class ComponentRequiredAttribute : Attribute Constructors ComponentRequiredAttribute(params Type[]) Declaration public ComponentRequiredAttribute(params Type[] requiredComponents) Parameters Type Name Description Type[] requiredComponents Methods ComponentCheck(Type, GameObject) Check if the action component and the gameobject satisfies the requirements of the ActionInstance defined by its attributes. Declaration public static bool ComponentCheck(Type type, GameObject obj) Parameters Type Name Description Type type The type of the ability to examine for requirements GameObject obj The gameobject for examination Returns Type Description bool Whether the gameobject satisfied the component requirements. If there's no requirement, return true. If obj is null, return false. Init(Type) Declaration public void Init(Type type) Parameters Type Name Description Type type"
  },
  "api/LobsterFramework.AbilitySystem.Endure.EndureConfig.html": {
    "href": "api/LobsterFramework.AbilitySystem.Endure.EndureConfig.html",
    "title": "Class Endure.EndureConfig | LobsterFramework documentation",
    "keywords": "Class Endure.EndureConfig Inheritance object Object ScriptableObject Ability.AbilityConfig Endure.EndureConfig Inherited Members Ability.AbilityConfig.accessKey Ability.AbilityConfig.endTime Ability.AbilityConfig.IsExecuting Ability.AbilityConfig.OnCooldown Ability.AbilityConfig.UseCooldown Ability.AbilityConfig.isSuspended Ability.AbilityConfig.Close() Ability.AbilityConfig.Initialize() Ability.AbilityConfig.Validate() Ability.AbilityConfig.OnValidate() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public class Endure.EndureConfig : Ability.AbilityConfig Fields duration Declaration public double duration Field Value Type Description double effector_id Declaration [HideInInspector] public int effector_id Field Value Type Description int startTime Declaration public double startTime Field Value Type Description double useTimer Declaration public bool useTimer Field Value Type Description bool"
  },
  "api/LobsterFramework.AbilitySystem.Endure.html": {
    "href": "api/LobsterFramework.AbilitySystem.Endure.html",
    "title": "Class Endure | LobsterFramework documentation",
    "keywords": "Class Endure A supplimental ability that provides hyperarmor for the entity that casts it Inheritance object Object ScriptableObject Ability Endure Inherited Members Ability.abilityRunner Ability.abilityPriority Ability.AddConfig(string) Ability.RemoveConfig(string) Ability.CleanUp() Ability.CompareByExecutionPriority(Ability) Ability.CompareByEnqueuePriority(Ability) Ability.ConditionSatisfied(Ability.AbilityConfig) Ability.RunningCount() Ability.HaltAbilityExecution(string) Ability.HaltAbilities() Ability.Initialize() Ability.IsExecuting(string) Ability.IsReady(string) Ability.OnStartUp() Ability.OnTermination() Ability.ResetStatus() Ability.OnDestroy() Ability.SaveConfigsAsAsset() Ability.OnAnimationInterrupt(Ability.AbilityConfig) Ability.InterruptAnimation(string) Ability.HasConfig(string) Ability.Signal(string) Ability.SignalBody(Ability.AbilityConfig) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public class Endure : Ability Methods Action(AbilityConfig) Declaration protected override bool Action(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Returns Type Description bool Overrides Ability.Action(Ability.AbilityConfig) OnActionFinish(AbilityConfig) Declaration protected override void OnActionFinish(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Overrides Ability.OnActionFinish(Ability.AbilityConfig) OnEnqueue(AbilityConfig, string) Declaration protected override void OnEnqueue(Ability.AbilityConfig config, string configName) Parameters Type Name Description Ability.AbilityConfig config string configName Overrides Ability.OnEnqueue(Ability.AbilityConfig, string)"
  },
  "api/LobsterFramework.AbilitySystem.Guard.GuardConfig.html": {
    "href": "api/LobsterFramework.AbilitySystem.Guard.GuardConfig.html",
    "title": "Class Guard.GuardConfig | LobsterFramework documentation",
    "keywords": "Class Guard.GuardConfig Inheritance object Object ScriptableObject Ability.AbilityConfig Guard.GuardConfig Inherited Members Ability.AbilityConfig.accessKey Ability.AbilityConfig.endTime Ability.AbilityConfig.IsExecuting Ability.AbilityConfig.OnCooldown Ability.AbilityConfig.UseCooldown Ability.AbilityConfig.isSuspended Ability.AbilityConfig.Close() Ability.AbilityConfig.Validate() Ability.AbilityConfig.OnValidate() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public class Guard.GuardConfig : Ability.AbilityConfig Fields actionStart Declaration [HideInInspector] public bool actionStart Field Value Type Description bool duration Declaration public RefFloat duration Field Value Type Description RefFloat durationCounter Declaration [HideInInspector] public float durationCounter Field Value Type Description float guardAnimation Declaration [HideInInspector] public TemporalObject guardAnimation Field Value Type Description TemporalObject sprite Declaration public Sprite sprite Field Value Type Description Sprite spriteAlpha Declaration public RefFloat spriteAlpha Field Value Type Description RefFloat spritePoolTag Declaration public VarString spritePoolTag Field Value Type Description VarString Methods Initialize() Declaration public override void Initialize() Overrides Ability.AbilityConfig.Initialize()"
  },
  "api/LobsterFramework.AbilitySystem.Guard.html": {
    "href": "api/LobsterFramework.AbilitySystem.Guard.html",
    "title": "Class Guard | LobsterFramework documentation",
    "keywords": "Class Guard Inheritance object Object ScriptableObject Ability Guard Inherited Members Ability.abilityRunner Ability.abilityPriority Ability.AddConfig(string) Ability.RemoveConfig(string) Ability.CleanUp() Ability.CompareByExecutionPriority(Ability) Ability.CompareByEnqueuePriority(Ability) Ability.ConditionSatisfied(Ability.AbilityConfig) Ability.RunningCount() Ability.HaltAbilityExecution(string) Ability.HaltAbilities() Ability.IsExecuting(string) Ability.IsReady(string) Ability.OnStartUp() Ability.OnTermination() Ability.ResetStatus() Ability.OnDestroy() Ability.SaveConfigsAsAsset() Ability.OnAnimationInterrupt(Ability.AbilityConfig) Ability.InterruptAnimation(string) Ability.HasConfig(string) Ability.Signal(string) Ability.SignalBody(Ability.AbilityConfig) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [RequireAbilityStats(typeof(CombatStat), new Type[] { })] public class Guard : Ability Methods Action(AbilityConfig) Declaration protected override bool Action(Ability.AbilityConfig actionConfig) Parameters Type Name Description Ability.AbilityConfig actionConfig Returns Type Description bool Overrides Ability.Action(Ability.AbilityConfig) Initialize() Declaration protected override void Initialize() Overrides Ability.Initialize() OnActionFinish(AbilityConfig) Declaration protected override void OnActionFinish(Ability.AbilityConfig actionConfig) Parameters Type Name Description Ability.AbilityConfig actionConfig Overrides Ability.OnActionFinish(Ability.AbilityConfig) OnEnqueue(AbilityConfig, string) Declaration protected override void OnEnqueue(Ability.AbilityConfig actionConfig, string configName) Parameters Type Name Description Ability.AbilityConfig actionConfig string configName Overrides Ability.OnEnqueue(Ability.AbilityConfig, string)"
  },
  "api/LobsterFramework.AbilitySystem.html": {
    "href": "api/LobsterFramework.AbilitySystem.html",
    "title": "Namespace LobsterFramework.AbilitySystem | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.AbilitySystem Classes Ability Abilities defines the kind of actions the parent object can make. Each subclass of Ability defines its own AbilityConfig and can be runned on multiple instances of its AbilityConfigs. Ability.AbilityConfig A configuration of the Ability, each configuration has its own settings that affects the execution of the Ability. This class should be subclassed inside subclasses of Ability with name 'Ability_Subclass_Name'Config. i.e CircleAttack which inherit from Ability must have a nested class named CircleAttackConfig inherited from this class AbilityData AbilityRunner Component that provides access to a variety of movesets, it acts as a container and platform for different kinds of abilitiess and moves which are provided and fully implemented by associated sub-components. Requires actionable data to be supplied. AbilityStat AbilityStatAttribute ActionOverseer AddAbilityMenuAttribute Used to add Abilities to the pool of available Abilities. This will allow the creations of these abilities inside AbilityData CircleAttack CircleAttack.CircleAttackConfig ClassNode CombatStat ComponentRequiredAttribute Mark this ability as requiring the specified components on the parent gameobject to run Endure A supplimental ability that provides hyperarmor for the entity that casts it Endure.EndureConfig Guard Guard.GuardConfig Mana RequireAbilityStatsAttribute Marks this ability as requiring specified AbilityStats to run RightSwipe RightSwipe.RightSwipeConfig Shoot Shoot.ShootConfig TargetSetting Enums RightSwipe.State"
  },
  "api/LobsterFramework.AbilitySystem.Mana.html": {
    "href": "api/LobsterFramework.AbilitySystem.Mana.html",
    "title": "Class Mana | LobsterFramework documentation",
    "keywords": "Class Mana Inheritance object Object ScriptableObject AbilityStat Mana Inherited Members AbilityStat.Reset() AbilityStat.CleanUp() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [AbilityStat(typeof(Mana))] public class Mana : AbilityStat Properties AvailableMana Declaration public float AvailableMana { get; set; } Property Value Type Description float ManaRegen Declaration public float ManaRegen { get; } Property Value Type Description float MaxMana Declaration public float MaxMana { get; } Property Value Type Description float Methods Initialize() Declaration public override void Initialize() Overrides AbilityStat.Initialize() ReserveMana(float) Declaration public bool ReserveMana(float amount) Parameters Type Name Description float amount Returns Type Description bool Update() Declaration public override void Update() Overrides AbilityStat.Update()"
  },
  "api/LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.html": {
    "href": "api/LobsterFramework.AbilitySystem.RequireAbilityStatsAttribute.html",
    "title": "Class RequireAbilityStatsAttribute | LobsterFramework documentation",
    "keywords": "Class RequireAbilityStatsAttribute Marks this ability as requiring specified AbilityStats to run Inheritance object Attribute RequireAbilityStatsAttribute Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class RequireAbilityStatsAttribute : Attribute Constructors RequireAbilityStatsAttribute(Type, params Type[]) Declaration public RequireAbilityStatsAttribute(Type ability, params Type[] abilityStats) Parameters Type Name Description Type ability Type[] abilityStats Fields requirement Declaration public static Dictionary<Type, HashSet<Type>> requirement Field Value Type Description Dictionary<Type, HashSet<Type>> rev_requirement Declaration public static Dictionary<Type, HashSet<Type>> rev_requirement Field Value Type Description Dictionary<Type, HashSet<Type>> Methods Init(Type) Declaration public void Init(Type ability) Parameters Type Name Description Type ability"
  },
  "api/LobsterFramework.AbilitySystem.RightSwipe.html": {
    "href": "api/LobsterFramework.AbilitySystem.RightSwipe.html",
    "title": "Class RightSwipe | LobsterFramework documentation",
    "keywords": "Class RightSwipe Inheritance object Object ScriptableObject Ability RightSwipe Inherited Members Ability.abilityRunner Ability.abilityPriority Ability.AddConfig(string) Ability.RemoveConfig(string) Ability.CleanUp() Ability.CompareByExecutionPriority(Ability) Ability.CompareByEnqueuePriority(Ability) Ability.ConditionSatisfied(Ability.AbilityConfig) Ability.RunningCount() Ability.HaltAbilityExecution(string) Ability.HaltAbilities() Ability.IsExecuting(string) Ability.IsReady(string) Ability.OnStartUp() Ability.OnTermination() Ability.ResetStatus() Ability.OnDestroy() Ability.SaveConfigsAsAsset() Ability.OnAnimationInterrupt(Ability.AbilityConfig) Ability.InterruptAnimation(string) Ability.HasConfig(string) Ability.Signal(string) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [RequireAbilityStats(typeof(CombatStat), new Type[] { })] [ComponentRequired(new Type[] { typeof(Animator) })] public class RightSwipe : Ability Methods Action(AbilityConfig) Declaration protected override bool Action(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Returns Type Description bool Overrides Ability.Action(Ability.AbilityConfig) Initialize() Declaration protected override void Initialize() Overrides Ability.Initialize() OnActionFinish(AbilityConfig) Declaration protected override void OnActionFinish(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Overrides Ability.OnActionFinish(Ability.AbilityConfig) OnEnqueue(AbilityConfig, string) Declaration protected override void OnEnqueue(Ability.AbilityConfig config, string configName) Parameters Type Name Description Ability.AbilityConfig config string configName Overrides Ability.OnEnqueue(Ability.AbilityConfig, string) SignalBody(AbilityConfig) Declaration protected override void SignalBody(Ability.AbilityConfig configRaw) Parameters Type Name Description Ability.AbilityConfig configRaw Overrides Ability.SignalBody(Ability.AbilityConfig)"
  },
  "api/LobsterFramework.AbilitySystem.RightSwipe.RightSwipeConfig.html": {
    "href": "api/LobsterFramework.AbilitySystem.RightSwipe.RightSwipeConfig.html",
    "title": "Class RightSwipe.RightSwipeConfig | LobsterFramework documentation",
    "keywords": "Class RightSwipe.RightSwipeConfig Inheritance object Object ScriptableObject Ability.AbilityConfig RightSwipe.RightSwipeConfig Inherited Members Ability.AbilityConfig.accessKey Ability.AbilityConfig.endTime Ability.AbilityConfig.IsExecuting Ability.AbilityConfig.OnCooldown Ability.AbilityConfig.UseCooldown Ability.AbilityConfig.isSuspended Ability.AbilityConfig.Close() Ability.AbilityConfig.Validate() Ability.AbilityConfig.OnValidate() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public class RightSwipe.RightSwipeConfig : Ability.AbilityConfig Fields animation Declaration public VarString animation Field Value Type Description VarString animationInterrupted Declaration [HideInInspector] public bool animationInterrupted Field Value Type Description bool attacker Declaration [HideInInspector] public Entity attacker Field Value Type Description Entity begin Declaration [HideInInspector] public bool begin Field Value Type Description bool colliderPoolTag Declaration public VarString colliderPoolTag Field Value Type Description VarString damage Declaration [HideInInspector] public int damage Field Value Type Description int effects Declaration public List<Effect> effects Field Value Type Description List<Effect> range Declaration [HideInInspector] public float range Field Value Type Description float rotateSpeed Declaration public RefFloat rotateSpeed Field Value Type Description RefFloat startAngle Declaration public RefFloat startAngle Field Value Type Description RefFloat state Declaration [HideInInspector] public RightSwipe.State state Field Value Type Description RightSwipe.State targetSetting Declaration public TargetSetting targetSetting Field Value Type Description TargetSetting Methods Begin(ActionCapsuleCollider, Transform) Declaration public void Begin(ActionCapsuleCollider collider, Transform transform) Parameters Type Name Description ActionCapsuleCollider collider Transform transform Finish() Declaration public void Finish() Initialize() Declaration public override void Initialize() Overrides Ability.AbilityConfig.Initialize() Process(Transform) Declaration public void Process(Transform transform) Parameters Type Name Description Transform transform"
  },
  "api/LobsterFramework.AbilitySystem.RightSwipe.State.html": {
    "href": "api/LobsterFramework.AbilitySystem.RightSwipe.State.html",
    "title": "Enum RightSwipe.State | LobsterFramework documentation",
    "keywords": "Enum RightSwipe.State Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public enum RightSwipe.State Fields Name Description Attack End WindUp"
  },
  "api/LobsterFramework.AbilitySystem.Shoot.html": {
    "href": "api/LobsterFramework.AbilitySystem.Shoot.html",
    "title": "Class Shoot | LobsterFramework documentation",
    "keywords": "Class Shoot Inheritance object Object ScriptableObject Ability Shoot Inherited Members Ability.abilityRunner Ability.abilityPriority Ability.AddConfig(string) Ability.RemoveConfig(string) Ability.CleanUp() Ability.CompareByExecutionPriority(Ability) Ability.CompareByEnqueuePriority(Ability) Ability.RunningCount() Ability.HaltAbilityExecution(string) Ability.HaltAbilities() Ability.IsExecuting(string) Ability.IsReady(string) Ability.OnStartUp() Ability.OnTermination() Ability.ResetStatus() Ability.OnDestroy() Ability.SaveConfigsAsAsset() Ability.OnActionFinish(Ability.AbilityConfig) Ability.OnAnimationInterrupt(Ability.AbilityConfig) Ability.InterruptAnimation(string) Ability.HasConfig(string) Ability.Signal(string) Ability.SignalBody(Ability.AbilityConfig) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [RequireAbilityStats(typeof(CombatStat), new Type[] { typeof(Mana) })] public class Shoot : Ability Methods Action(AbilityConfig) Declaration protected override bool Action(Ability.AbilityConfig a_config) Parameters Type Name Description Ability.AbilityConfig a_config Returns Type Description bool Overrides Ability.Action(Ability.AbilityConfig) ConditionSatisfied(AbilityConfig) Declaration protected override bool ConditionSatisfied(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Returns Type Description bool Overrides Ability.ConditionSatisfied(Ability.AbilityConfig) Initialize() Declaration protected override void Initialize() Overrides Ability.Initialize() OnEnqueue(AbilityConfig, string) Declaration protected override void OnEnqueue(Ability.AbilityConfig config, string configName) Parameters Type Name Description Ability.AbilityConfig config string configName Overrides Ability.OnEnqueue(Ability.AbilityConfig, string)"
  },
  "api/LobsterFramework.AbilitySystem.Shoot.ShootConfig.html": {
    "href": "api/LobsterFramework.AbilitySystem.Shoot.ShootConfig.html",
    "title": "Class Shoot.ShootConfig | LobsterFramework documentation",
    "keywords": "Class Shoot.ShootConfig Inheritance object Object ScriptableObject Ability.AbilityConfig Shoot.ShootConfig Inherited Members Ability.AbilityConfig.accessKey Ability.AbilityConfig.endTime Ability.AbilityConfig.IsExecuting Ability.AbilityConfig.OnCooldown Ability.AbilityConfig.UseCooldown Ability.AbilityConfig.isSuspended Ability.AbilityConfig.Close() Ability.AbilityConfig.Initialize() Ability.AbilityConfig.Validate() Ability.AbilityConfig.OnValidate() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax public class Shoot.ShootConfig : Ability.AbilityConfig Fields bulletPoolTag Declaration public VarString bulletPoolTag Field Value Type Description VarString bulletSpeed Declaration public RefFloat bulletSpeed Field Value Type Description RefFloat manaCost Declaration public RefFloat manaCost Field Value Type Description RefFloat piercePower Declaration public RefInt piercePower Field Value Type Description RefInt targetSetting Declaration public TargetSetting targetSetting Field Value Type Description TargetSetting travelDuration Declaration public RefFloat travelDuration Field Value Type Description RefFloat"
  },
  "api/LobsterFramework.AbilitySystem.TargetSetting.html": {
    "href": "api/LobsterFramework.AbilitySystem.TargetSetting.html",
    "title": "Class TargetSetting | LobsterFramework documentation",
    "keywords": "Class TargetSetting Inheritance object Object ScriptableObject TargetSetting Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Ability/TargetSetting\")] public class TargetSetting : ScriptableObject Fields ignoreGroups Declaration public EntityGroup[] ignoreGroups Field Value Type Description EntityGroup[] targetGroups Declaration public EntityGroup[] targetGroups Field Value Type Description EntityGroup[] Methods IsTarget(Entity) Declaration public bool IsTarget(Entity entity) Parameters Type Name Description Entity entity Returns Type Description bool"
  },
  "api/LobsterFramework.AbilitySystem.Weapon.html": {
    "href": "api/LobsterFramework.AbilitySystem.Weapon.html",
    "title": "Namespace LobsterFramework.AbilitySystem.Weapon | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.AbilitySystem.Weapon Classes RequireWeaponAttribute TestWeapon TestWeapon.TestWeaponConfig Weapon WeaponAbility WeaponWielder Enums WeaponType"
  },
  "api/LobsterFramework.AbilitySystem.Weapon.RequireWeaponAttribute.html": {
    "href": "api/LobsterFramework.AbilitySystem.Weapon.RequireWeaponAttribute.html",
    "title": "Class RequireWeaponAttribute | LobsterFramework documentation",
    "keywords": "Class RequireWeaponAttribute Inheritance object Attribute RequireWeaponAttribute Namespace: LobsterFramework.AbilitySystem.Weapon Assembly: MyScripts.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class RequireWeaponAttribute : Attribute Constructors RequireWeaponAttribute(Type, WeaponType) Declaration public RequireWeaponAttribute(Type abilityType, WeaponType weaponType) Parameters Type Name Description Type abilityType WeaponType weaponType"
  },
  "api/LobsterFramework.AbilitySystem.Weapon.TestWeapon.html": {
    "href": "api/LobsterFramework.AbilitySystem.Weapon.TestWeapon.html",
    "title": "Class TestWeapon | LobsterFramework documentation",
    "keywords": "Class TestWeapon Inheritance object Object ScriptableObject Ability WeaponAbility TestWeapon Inherited Members WeaponAbility.ConditionSatisfied(Ability.AbilityConfig) WeaponAbility.OtherConditions(Ability.AbilityConfig) Ability.abilityRunner Ability.abilityPriority Ability.AddConfig(string) Ability.RemoveConfig(string) Ability.CleanUp() Ability.CompareByExecutionPriority(Ability) Ability.CompareByEnqueuePriority(Ability) Ability.RunningCount() Ability.HaltAbilityExecution(string) Ability.HaltAbilities() Ability.Initialize() Ability.IsExecuting(string) Ability.IsReady(string) Ability.OnStartUp() Ability.OnTermination() Ability.ResetStatus() Ability.OnDestroy() Ability.SaveConfigsAsAsset() Ability.OnActionFinish(Ability.AbilityConfig) Ability.OnAnimationInterrupt(Ability.AbilityConfig) Ability.InterruptAnimation(string) Ability.OnEnqueue(Ability.AbilityConfig, string) Ability.HasConfig(string) Ability.Signal(string) Ability.SignalBody(Ability.AbilityConfig) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem.Weapon Assembly: MyScripts.dll Syntax [ComponentRequired(new Type[] { typeof(AudioBehaviour) })] public class TestWeapon : WeaponAbility Methods Action(AbilityConfig) Declaration protected override bool Action(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Returns Type Description bool Overrides Ability.Action(Ability.AbilityConfig)"
  },
  "api/LobsterFramework.AbilitySystem.Weapon.TestWeapon.TestWeaponConfig.html": {
    "href": "api/LobsterFramework.AbilitySystem.Weapon.TestWeapon.TestWeaponConfig.html",
    "title": "Class TestWeapon.TestWeaponConfig | LobsterFramework documentation",
    "keywords": "Class TestWeapon.TestWeaponConfig Inheritance object Object ScriptableObject Ability.AbilityConfig TestWeapon.TestWeaponConfig Inherited Members Ability.AbilityConfig.accessKey Ability.AbilityConfig.endTime Ability.AbilityConfig.IsExecuting Ability.AbilityConfig.OnCooldown Ability.AbilityConfig.UseCooldown Ability.AbilityConfig.isSuspended Ability.AbilityConfig.Close() Ability.AbilityConfig.Initialize() Ability.AbilityConfig.Validate() Ability.AbilityConfig.OnValidate() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem.Weapon Assembly: MyScripts.dll Syntax public class TestWeapon.TestWeaponConfig : Ability.AbilityConfig"
  },
  "api/LobsterFramework.AbilitySystem.Weapon.Weapon.html": {
    "href": "api/LobsterFramework.AbilitySystem.Weapon.Weapon.html",
    "title": "Class Weapon | LobsterFramework documentation",
    "keywords": "Class Weapon Inheritance object Object Component Behaviour MonoBehaviour Weapon Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem.Weapon Assembly: MyScripts.dll Syntax [RequireComponent(typeof(Collider2D))] public class Weapon : MonoBehaviour Fields onEntityHit Declaration public UnityAction<Entity> onEntityHit Field Value Type Description UnityAction<Entity> onEntityHitExit Declaration public UnityAction<Entity> onEntityHitExit Field Value Type Description UnityAction<Entity> Properties Sharpness Declaration public float Sharpness { get; } Property Value Type Description float Weight Declaration public float Weight { get; } Property Value Type Description float Methods Activate() Declaration public void Activate() Deactivate() Declaration public void Deactivate()"
  },
  "api/LobsterFramework.AbilitySystem.Weapon.WeaponAbility.html": {
    "href": "api/LobsterFramework.AbilitySystem.Weapon.WeaponAbility.html",
    "title": "Class WeaponAbility | LobsterFramework documentation",
    "keywords": "Class WeaponAbility Inheritance object Object ScriptableObject Ability WeaponAbility TestWeapon Inherited Members Ability.abilityRunner Ability.abilityPriority Ability.AddConfig(string) Ability.RemoveConfig(string) Ability.CleanUp() Ability.CompareByExecutionPriority(Ability) Ability.CompareByEnqueuePriority(Ability) Ability.RunningCount() Ability.HaltAbilityExecution(string) Ability.HaltAbilities() Ability.Initialize() Ability.IsExecuting(string) Ability.IsReady(string) Ability.OnStartUp() Ability.OnTermination() Ability.ResetStatus() Ability.OnDestroy() Ability.SaveConfigsAsAsset() Ability.Action(Ability.AbilityConfig) Ability.OnActionFinish(Ability.AbilityConfig) Ability.OnAnimationInterrupt(Ability.AbilityConfig) Ability.InterruptAnimation(string) Ability.OnEnqueue(Ability.AbilityConfig, string) Ability.HasConfig(string) Ability.Signal(string) Ability.SignalBody(Ability.AbilityConfig) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem.Weapon Assembly: MyScripts.dll Syntax [ComponentRequired(new Type[] { typeof(WeaponWielder) })] public abstract class WeaponAbility : Ability Methods ConditionSatisfied(AbilityConfig) Declaration protected override sealed bool ConditionSatisfied(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Returns Type Description bool Overrides Ability.ConditionSatisfied(Ability.AbilityConfig) OtherConditions(AbilityConfig) Declaration protected virtual bool OtherConditions(Ability.AbilityConfig config) Parameters Type Name Description Ability.AbilityConfig config Returns Type Description bool"
  },
  "api/LobsterFramework.AbilitySystem.Weapon.WeaponType.html": {
    "href": "api/LobsterFramework.AbilitySystem.Weapon.WeaponType.html",
    "title": "Enum WeaponType | LobsterFramework documentation",
    "keywords": "Enum WeaponType Namespace: LobsterFramework.AbilitySystem.Weapon Assembly: MyScripts.dll Syntax public enum WeaponType Fields Name Description Hammer Rod Shiv Sword"
  },
  "api/LobsterFramework.AbilitySystem.Weapon.WeaponWielder.html": {
    "href": "api/LobsterFramework.AbilitySystem.Weapon.WeaponWielder.html",
    "title": "Class WeaponWielder | LobsterFramework documentation",
    "keywords": "Class WeaponWielder Inheritance object Object Component Behaviour MonoBehaviour WeaponWielder Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AbilitySystem.Weapon Assembly: MyScripts.dll Syntax public class WeaponWielder : MonoBehaviour"
  },
  "api/LobsterFramework.AI.AIController.html": {
    "href": "api/LobsterFramework.AI.AIController.html",
    "title": "Class AIController | LobsterFramework documentation",
    "keywords": "Class AIController Inheritance object Object Component Behaviour MonoBehaviour AIController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax public class AIController : MonoBehaviour Fields target Declaration public Entity target Field Value Type Description Entity Properties AutoRotation Declaration public bool AutoRotation { get; set; } Property Value Type Description bool Stopped Declaration public bool Stopped { get; set; } Property Value Type Description bool Methods BackStep() Declaration public void BackStep() ChaseTarget() Declaration public void ChaseTarget() ClearPath() Declaration public void ClearPath() GetControllerData<T>() Declaration public T GetControllerData<T>() where T : ControllerData Returns Type Description T Type Parameters Name Description T GetTargetDistance() Declaration public float GetTargetDistance() Returns Type Description float LookTowards() Declaration public void LookTowards() MoveInDirection(Vector3, float) Declaration public void MoveInDirection(Vector3 direction, float distance) Parameters Type Name Description Vector3 direction float distance NextWayPoint() Declaration public Vector3 NextWayPoint() Returns Type Description Vector3 ReachedDestination() Declaration public bool ReachedDestination() Returns Type Description bool SearchTarget(float) Declaration public bool SearchTarget(float sightRange) Parameters Type Name Description float sightRange Returns Type Description bool TargetInRange(float) Declaration public bool TargetInRange(float range) Parameters Type Name Description float range Returns Type Description bool TargetVisible(Vector3, float) Declaration public bool TargetVisible(Vector3 position, float range) Parameters Type Name Description Vector3 position float range Returns Type Description bool Wander(int) Declaration public void Wander(int wanderRadius) Parameters Type Name Description int wanderRadius"
  },
  "api/LobsterFramework.AI.html": {
    "href": "api/LobsterFramework.AI.html",
    "title": "Namespace LobsterFramework.AI | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.AI Classes AIController MeleeChaseState MeleeChaseState2 RangedChaseState State StateMachine TransitionTable Wander2 WanderState Structs Transition"
  },
  "api/LobsterFramework.AI.MeleeChaseState.html": {
    "href": "api/LobsterFramework.AI.MeleeChaseState.html",
    "title": "Class MeleeChaseState | LobsterFramework documentation",
    "keywords": "Class MeleeChaseState Inheritance object Object ScriptableObject State MeleeChaseState Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"StateMachine/States/AI/Melee-ChaseState\")] public class MeleeChaseState : State Methods InChaseRange() Declaration public bool InChaseRange() Returns Type Description bool InitializeFields(GameObject) Declaration public override void InitializeFields(GameObject obj) Parameters Type Name Description GameObject obj Overrides State.InitializeFields(GameObject) OnEnter() Declaration public override void OnEnter() Overrides State.OnEnter() OnExit() Declaration public override void OnExit() Overrides State.OnExit() Tick() Declaration public override Type Tick() Returns Type Description Type Overrides State.Tick()"
  },
  "api/LobsterFramework.AI.MeleeChaseState2.html": {
    "href": "api/LobsterFramework.AI.MeleeChaseState2.html",
    "title": "Class MeleeChaseState2 | LobsterFramework documentation",
    "keywords": "Class MeleeChaseState2 Inheritance object Object ScriptableObject State MeleeChaseState2 Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"StateMachine/States/AI/Melee-ChaseState2\")] public class MeleeChaseState2 : State Methods InChaseRange() Declaration public bool InChaseRange() Returns Type Description bool InitializeFields(GameObject) Declaration public override void InitializeFields(GameObject obj) Parameters Type Name Description GameObject obj Overrides State.InitializeFields(GameObject) OnEnter() Declaration public override void OnEnter() Overrides State.OnEnter() OnExit() Declaration public override void OnExit() Overrides State.OnExit() Tick() Declaration public override Type Tick() Returns Type Description Type Overrides State.Tick()"
  },
  "api/LobsterFramework.AI.RangedChaseState.html": {
    "href": "api/LobsterFramework.AI.RangedChaseState.html",
    "title": "Class RangedChaseState | LobsterFramework documentation",
    "keywords": "Class RangedChaseState Inheritance object Object ScriptableObject State RangedChaseState Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"StateMachine/States/AI/Ranged-ChaseState\")] public class RangedChaseState : State Methods InChaseRange() Declaration public bool InChaseRange() Returns Type Description bool InitializeFields(GameObject) Declaration public override void InitializeFields(GameObject obj) Parameters Type Name Description GameObject obj Overrides State.InitializeFields(GameObject) OnEnter() Declaration public override void OnEnter() Overrides State.OnEnter() OnExit() Declaration public override void OnExit() Overrides State.OnExit() Tick() Declaration public override Type Tick() Returns Type Description Type Overrides State.Tick()"
  },
  "api/LobsterFramework.AI.State.html": {
    "href": "api/LobsterFramework.AI.State.html",
    "title": "Class State | LobsterFramework documentation",
    "keywords": "Class State Inheritance object Object ScriptableObject State MeleeChaseState MeleeChaseState2 RangedChaseState Wander2 WanderState Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax public abstract class State : ScriptableObject Methods InitializeFields(GameObject) Declaration public abstract void InitializeFields(GameObject obj) Parameters Type Name Description GameObject obj OnEnter() Declaration public abstract void OnEnter() OnExit() Declaration public abstract void OnExit() Tick() Declaration public abstract Type Tick() Returns Type Description Type"
  },
  "api/LobsterFramework.AI.StateMachine.html": {
    "href": "api/LobsterFramework.AI.StateMachine.html",
    "title": "Class StateMachine | LobsterFramework documentation",
    "keywords": "Class StateMachine Inheritance object Object Component Behaviour MonoBehaviour StateMachine Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax public class StateMachine : MonoBehaviour Properties CurrentState Declaration public State CurrentState { get; set; } Property Value Type Description State Methods OnDestroy() Declaration public void OnDestroy() Update() Declaration public void Update()"
  },
  "api/LobsterFramework.AI.Transition.html": {
    "href": "api/LobsterFramework.AI.Transition.html",
    "title": "Struct Transition | LobsterFramework documentation",
    "keywords": "Struct Transition Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax [Serializable] public struct Transition Properties TargetState Declaration public State TargetState { get; } Property Value Type Description State Methods Eval() Declaration public State Eval() Returns Type Description State"
  },
  "api/LobsterFramework.AI.TransitionTable.html": {
    "href": "api/LobsterFramework.AI.TransitionTable.html",
    "title": "Class TransitionTable | LobsterFramework documentation",
    "keywords": "Class TransitionTable Inheritance object Object ScriptableObject TransitionTable Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"StateMachine/Transition Table\")] public class TransitionTable : ScriptableObject Methods AddTransition(State, Transition, int) Declaration public bool AddTransition(State fromState, Transition t, int priority) Parameters Type Name Description State fromState Transition t int priority Returns Type Description bool Execute(State) Declaration public State Execute(State currentState) Parameters Type Name Description State currentState Returns Type Description State RemoveTransition(State, int) Declaration public bool RemoveTransition(State fromState, int key) Parameters Type Name Description State fromState int key Returns Type Description bool"
  },
  "api/LobsterFramework.AI.Wander2.html": {
    "href": "api/LobsterFramework.AI.Wander2.html",
    "title": "Class Wander2 | LobsterFramework documentation",
    "keywords": "Class Wander2 Inheritance object Object ScriptableObject State Wander2 Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"StateMachine/States/AI/WanderState2\")] public class Wander2 : State Methods InitializeFields(GameObject) Declaration public override void InitializeFields(GameObject obj) Parameters Type Name Description GameObject obj Overrides State.InitializeFields(GameObject) OnEnter() Declaration public override void OnEnter() Overrides State.OnEnter() OnExit() Declaration public override void OnExit() Overrides State.OnExit() Tick() Declaration public override Type Tick() Returns Type Description Type Overrides State.Tick()"
  },
  "api/LobsterFramework.AI.WanderState.html": {
    "href": "api/LobsterFramework.AI.WanderState.html",
    "title": "Class WanderState | LobsterFramework documentation",
    "keywords": "Class WanderState Inheritance object Object ScriptableObject State WanderState Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.AI Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"StateMachine/States/AI/WanderState\")] public class WanderState : State Methods InitializeFields(GameObject) Declaration public override void InitializeFields(GameObject obj) Parameters Type Name Description GameObject obj Overrides State.InitializeFields(GameObject) OnEnter() Declaration public override void OnEnter() Overrides State.OnEnter() OnExit() Declaration public override void OnExit() Overrides State.OnExit() Tick() Declaration public override Type Tick() Returns Type Description Type Overrides State.Tick()"
  },
  "api/LobsterFramework.DialogueSystem.DialogueNode.html": {
    "href": "api/LobsterFramework.DialogueSystem.DialogueNode.html",
    "title": "Class DialogueNode | LobsterFramework documentation",
    "keywords": "Class DialogueNode Inheritance object Object ScriptableObject DialogueNode Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.DialogueSystem Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Dialogue/DialogueNode\")] public class DialogueNode : ScriptableObject Properties Icon Declaration public Sprite Icon { get; } Property Value Type Description Sprite Speaker Declaration public string Speaker { get; } Property Value Type Description string Texts Declaration public string[] Texts { get; } Property Value Type Description string[]"
  },
  "api/LobsterFramework.DialogueSystem.DialogueObject.html": {
    "href": "api/LobsterFramework.DialogueSystem.DialogueObject.html",
    "title": "Class DialogueObject | LobsterFramework documentation",
    "keywords": "Class DialogueObject Inheritance object Object ScriptableObject DialogueObject Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.DialogueSystem Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Dialogue/DialogueObject\")] public class DialogueObject : ScriptableObject Properties FinisherChannel Declaration public VoidEventChannel FinisherChannel { get; } Property Value Type Description VoidEventChannel HasResponses Declaration public bool HasResponses { get; } Property Value Type Description bool Nodes Declaration public DialogueNode[] Nodes { get; } Property Value Type Description DialogueNode[] Responses Declaration public DialogueResponse[] Responses { get; } Property Value Type Description DialogueResponse[]"
  },
  "api/LobsterFramework.DialogueSystem.DialogueResponse.html": {
    "href": "api/LobsterFramework.DialogueSystem.DialogueResponse.html",
    "title": "Class DialogueResponse | LobsterFramework documentation",
    "keywords": "Class DialogueResponse Inheritance object DialogueResponse Namespace: LobsterFramework.DialogueSystem Assembly: MyScripts.dll Syntax [Serializable] public class DialogueResponse Properties Dialogue Declaration public DialogueObject Dialogue { get; } Property Value Type Description DialogueObject Text Declaration public string Text { get; } Property Value Type Description string Methods Respond() Declaration public void Respond()"
  },
  "api/LobsterFramework.DialogueSystem.html": {
    "href": "api/LobsterFramework.DialogueSystem.html",
    "title": "Namespace LobsterFramework.DialogueSystem | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.DialogueSystem Classes DialogueNode DialogueObject DialogueResponse"
  },
  "api/LobsterFramework.EditorUtility.AbilityDataEditor.html": {
    "href": "api/LobsterFramework.EditorUtility.AbilityDataEditor.html",
    "title": "Class AbilityDataEditor | LobsterFramework documentation",
    "keywords": "Class AbilityDataEditor Inheritance object Object ScriptableObject Editor AbilityDataEditor Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EditorUtility Assembly: MyScripts.dll Syntax [CustomEditor(typeof(AbilityData))] public class AbilityDataEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides Editor.OnInspectorGUI()"
  },
  "api/LobsterFramework.EditorUtility.AbilityRunnerEditor.html": {
    "href": "api/LobsterFramework.EditorUtility.AbilityRunnerEditor.html",
    "title": "Class AbilityRunnerEditor | LobsterFramework documentation",
    "keywords": "Class AbilityRunnerEditor Inheritance object Object ScriptableObject Editor AbilityRunnerEditor Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EditorUtility Assembly: MyScripts.dll Syntax [CustomEditor(typeof(AbilityRunner))] public class AbilityRunnerEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides Editor.OnInspectorGUI()"
  },
  "api/LobsterFramework.EditorUtility.ActionConfigEditor.html": {
    "href": "api/LobsterFramework.EditorUtility.ActionConfigEditor.html",
    "title": "Class ActionConfigEditor | LobsterFramework documentation",
    "keywords": "Class ActionConfigEditor Inheritance object Object ScriptableObject Editor ActionConfigEditor Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EditorUtility Assembly: MyScripts.dll Syntax [CustomEditor(typeof(Ability.AbilityConfig), true)] public class ActionConfigEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides Editor.OnInspectorGUI()"
  },
  "api/LobsterFramework.EditorUtility.ActionInstanceDrawer.html": {
    "href": "api/LobsterFramework.EditorUtility.ActionInstanceDrawer.html",
    "title": "Class ActionInstanceDrawer | LobsterFramework documentation",
    "keywords": "Class ActionInstanceDrawer Inheritance object GUIDrawer PropertyDrawer ActionInstanceDrawer Namespace: LobsterFramework.EditorUtility Assembly: MyScripts.dll Syntax [CustomPropertyDrawer(typeof(Ability))] public class ActionInstanceDrawer : PropertyDrawer Constructors ActionInstanceDrawer() Declaration public ActionInstanceDrawer() Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float Overrides PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Overrides PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)"
  },
  "api/LobsterFramework.EditorUtility.ActionInstanceEditor.html": {
    "href": "api/LobsterFramework.EditorUtility.ActionInstanceEditor.html",
    "title": "Class ActionInstanceEditor | LobsterFramework documentation",
    "keywords": "Class ActionInstanceEditor Inheritance object Object ScriptableObject Editor ActionInstanceEditor Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EditorUtility Assembly: MyScripts.dll Syntax [CustomEditor(typeof(Ability), true)] public class ActionInstanceEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides Editor.OnInspectorGUI()"
  },
  "api/LobsterFramework.EditorUtility.EntityComponentEditor.html": {
    "href": "api/LobsterFramework.EditorUtility.EntityComponentEditor.html",
    "title": "Class EntityComponentEditor | LobsterFramework documentation",
    "keywords": "Class EntityComponentEditor Inheritance object Object ScriptableObject Editor EntityComponentEditor Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EditorUtility Assembly: MyScripts.dll Syntax [CustomEditor(typeof(Entity))] public class EntityComponentEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides Editor.OnInspectorGUI() OnInspectorUpdate() Declaration public void OnInspectorUpdate()"
  },
  "api/LobsterFramework.EditorUtility.html": {
    "href": "api/LobsterFramework.EditorUtility.html",
    "title": "Namespace LobsterFramework.EditorUtility | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.EditorUtility Classes AbilityDataEditor AbilityRunnerEditor ActionConfigEditor ActionInstanceDrawer ActionInstanceEditor EntityComponentEditor"
  },
  "api/LobsterFramework.EntitySystem.Damage.html": {
    "href": "api/LobsterFramework.EntitySystem.Damage.html",
    "title": "Struct Damage | LobsterFramework documentation",
    "keywords": "Struct Damage Namespace: LobsterFramework.EntitySystem Assembly: MyScripts.dll Syntax [Serializable] public struct Damage Fields health Declaration public float health Field Value Type Description float none Declaration public static Damage none Field Value Type Description Damage posture Declaration public float posture Field Value Type Description float source Declaration public Entity source Field Value Type Description Entity type Declaration public DamageType type Field Value Type Description DamageType"
  },
  "api/LobsterFramework.EntitySystem.DamageBuffer.html": {
    "href": "api/LobsterFramework.EntitySystem.DamageBuffer.html",
    "title": "Struct DamageBuffer | LobsterFramework documentation",
    "keywords": "Struct DamageBuffer Namespace: LobsterFramework.EntitySystem Assembly: MyScripts.dll Syntax [Serializable] public struct DamageBuffer Constructors DamageBuffer(bool) Declaration public DamageBuffer(bool defaultSetting = true) Parameters Type Name Description bool defaultSetting Properties HealthDamage Declaration public readonly float HealthDamage { get; } Property Value Type Description float PostureDamage Declaration public readonly float PostureDamage { get; } Property Value Type Description float Methods AddDamage(Damage) Declaration public void AddDamage(Damage damage) Parameters Type Name Description Damage damage AddDefense(int, int) Declaration public void AddDefense(int healthDefense, int postureDefense) Parameters Type Name Description int healthDefense int postureDefense AddHealthModifier(float) Declaration public int AddHealthModifier(float factor) Parameters Type Name Description float factor Returns Type Description int AddPostureModifier(float) Declaration public int AddPostureModifier(float factor) Parameters Type Name Description float factor Returns Type Description int RemoveHealthModifier(int) Declaration public bool RemoveHealthModifier(int key) Parameters Type Name Description int key Returns Type Description bool RemovePostureModifier(int) Declaration public bool RemovePostureModifier(int key) Parameters Type Name Description int key Returns Type Description bool Reset() Declaration public void Reset() ResetDamage() Declaration public void ResetDamage() ResetDefense() Declaration public void ResetDefense() ResetModifiers() Declaration public void ResetModifiers()"
  },
  "api/LobsterFramework.EntitySystem.DamageType.html": {
    "href": "api/LobsterFramework.EntitySystem.DamageType.html",
    "title": "Enum DamageType | LobsterFramework documentation",
    "keywords": "Enum DamageType Namespace: LobsterFramework.EntitySystem Assembly: MyScripts.dll Syntax public enum DamageType Fields Name Description General Hit StatusEffect"
  },
  "api/LobsterFramework.EntitySystem.Effect.html": {
    "href": "api/LobsterFramework.EntitySystem.Effect.html",
    "title": "Class Effect | LobsterFramework documentation",
    "keywords": "Class Effect Inheritance object Object ScriptableObject Effect SilentEffect StunEffect Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EntitySystem Assembly: MyScripts.dll Syntax public abstract class Effect : ScriptableObject Fields entity Declaration protected Entity entity Field Value Type Description Entity Properties Counter_t Declaration public float Counter_t { get; } Property Value Type Description float Duration Declaration public float Duration { get; } Property Value Type Description float Icon Declaration public Sprite Icon { get; } Property Value Type Description Sprite Methods ActivateEffect(Entity) Declaration public void ActivateEffect(Entity entity) Parameters Type Name Description Entity entity OnApply() Declaration protected virtual void OnApply() OnEffectOver() Declaration protected virtual void OnEffectOver() OnUpdate() Declaration protected virtual void OnUpdate() TerminateEffect() Declaration public void TerminateEffect() Update() Declaration public bool Update() Returns Type Description bool"
  },
  "api/LobsterFramework.EntitySystem.Entity.html": {
    "href": "api/LobsterFramework.EntitySystem.Entity.html",
    "title": "Class Entity | LobsterFramework documentation",
    "keywords": "Class Entity Character class of the game. Provides an interface for character movement and health/damage system. Entities will be disabled when their health goes down to or below 0. Inheritance object Object Component Behaviour MonoBehaviour Entity Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EntitySystem Assembly: MyScripts.dll Syntax [AddComponentMenu(\"Entity\")] public class Entity : MonoBehaviour Fields activeEffects Declaration [SerializeField] public Dictionary<Type, Effect> activeEffects Field Value Type Description Dictionary<Type, Effect> onDamaged Declaration public UnityAction<Damage> onDamaged Field Value Type Description UnityAction<Damage> onMovementBlocked Declaration public UnityAction<bool> onMovementBlocked Field Value Type Description UnityAction<bool> Properties Health Declaration public float Health { get; } Property Value Type Description float IsDead Declaration public bool IsDead { get; } Property Value Type Description bool LatestDamageInfo Declaration public Damage LatestDamageInfo { get; } Property Value Type Description Damage MaxHealth Declaration public float MaxHealth { get; } Property Value Type Description float MaxPosture Declaration public float MaxPosture { get; } Property Value Type Description float MovementBlocked Declaration public bool MovementBlocked { get; } Property Value Type Description bool MoveSpeed Declaration public float MoveSpeed { get; } Property Value Type Description float Posture Declaration public float Posture { get; } Property Value Type Description float PostureBroken Declaration public bool PostureBroken { get; } Property Value Type Description bool RegenSuppressed Declaration public bool RegenSuppressed { get; } Property Value Type Description bool RotateSpeed Declaration public float RotateSpeed { get; } Property Value Type Description float Methods AddEffect(Effect) Apply an effect to the entity Declaration public void AddEffect(Effect effect) Parameters Type Name Description Effect effect BlockMovement() Add an effector to block movement of this entity. The movement of the entity will be blocked if there's at least 1 effector. Declaration public int BlockMovement() Returns Type Description int The id of the newly added effector Damage(int, int, Entity, DamageType) Add damage to the entity, the damage will be dealt on update of next frame Declaration public void Damage(int health, int posture, Entity source = null, DamageType type = DamageType.General) Parameters Type Name Description int health The amount of health damage int posture The amount of posture damage Entity source The source of this attack DamageType type The type of the damage Defense(int, int) Add a flat damage reduction to the entity, the damage taken will be reduced by the specified amount on update of next frame Declaration public void Defense(int healthDefense, int postureDefense) Parameters Type Name Description int healthDefense The amount of health defense int postureDefense The amount of posture defense Move(Vector2) Start moving the entity towards the specified direction, will fail is Movement is blocked on this entity Declaration public void Move(Vector2 direction) Parameters Type Name Description Vector2 direction Reset() Reset the entity to its full health and posture and clear all of the damage and effects Declaration public void Reset() RotateByDegrees(float) Attempt to rotate the entity by the specified degree. If the specified angle is larger than the max rotation speed, the entity will rotate towards target angle will max speed. Will fail if Movement blocked. Declaration public void RotateByDegrees(float degree) Parameters Type Name Description float degree The degree to rotate the entity by RotateTowards(Vector2) Attempt to rotate the entity towards the specified direction. If the specified angle is larger than the max rotation speed, the entity will rotate towards target angle will max speed. Will fail if Movement blocked. Declaration public void RotateTowards(Vector2 direction) Parameters Type Name Description Vector2 direction The target direction to rotate towards UnblockMovement(int) Declaration public bool UnblockMovement(int key) Parameters Type Name Description int key Returns Type Description bool"
  },
  "api/LobsterFramework.EntitySystem.html": {
    "href": "api/LobsterFramework.EntitySystem.html",
    "title": "Namespace LobsterFramework.EntitySystem | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.EntitySystem Classes Effect Entity Character class of the game. Provides an interface for character movement and health/damage system. Entities will be disabled when their health goes down to or below 0. SilentEffect StunEffect Structs Damage DamageBuffer RegenBuffer Enums DamageType"
  },
  "api/LobsterFramework.EntitySystem.RegenBuffer.html": {
    "href": "api/LobsterFramework.EntitySystem.RegenBuffer.html",
    "title": "Struct RegenBuffer | LobsterFramework documentation",
    "keywords": "Struct RegenBuffer Namespace: LobsterFramework.EntitySystem Assembly: MyScripts.dll Syntax [Serializable] public struct RegenBuffer Constructors RegenBuffer(bool) Declaration public RegenBuffer(bool defaultSetting = true) Parameters Type Name Description bool defaultSetting Properties HealthModifier Declaration public readonly float HealthModifier { get; } Property Value Type Description float HealthRegen Declaration public readonly float HealthRegen { get; } Property Value Type Description float PostureModifier Declaration public readonly float PostureModifier { get; } Property Value Type Description float PostureRegen Declaration public readonly float PostureRegen { get; } Property Value Type Description float Methods AddHealth(float) Declaration public void AddHealth(float health) Parameters Type Name Description float health AddHealthModifier(float) Declaration public int AddHealthModifier(float factor) Parameters Type Name Description float factor Returns Type Description int AddPosture(float) Declaration public void AddPosture(float posture) Parameters Type Name Description float posture AddPostureModifier(float) Declaration public int AddPostureModifier(float factor) Parameters Type Name Description float factor Returns Type Description int RemoveHealthModifier(int) Declaration public bool RemoveHealthModifier(int key) Parameters Type Name Description int key Returns Type Description bool RemovePostureModifier(int) Declaration public bool RemovePostureModifier(int key) Parameters Type Name Description int key Returns Type Description bool Reset() Declaration public void Reset() ResetModifiers() Declaration public void ResetModifiers() ResetRegen() Declaration public void ResetRegen()"
  },
  "api/LobsterFramework.EntitySystem.SilentEffect.html": {
    "href": "api/LobsterFramework.EntitySystem.SilentEffect.html",
    "title": "Class SilentEffect | LobsterFramework documentation",
    "keywords": "Class SilentEffect Inheritance object Object ScriptableObject Effect SilentEffect Inherited Members Effect.entity Effect.Icon Effect.Counter_t Effect.Duration Effect.ActivateEffect(Entity) Effect.Update() Effect.OnUpdate() Effect.TerminateEffect() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EntitySystem Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Effect/Silent Effect\")] public class SilentEffect : Effect Methods OnApply() Declaration protected override void OnApply() Overrides Effect.OnApply() OnEffectOver() Declaration protected override void OnEffectOver() Overrides Effect.OnEffectOver()"
  },
  "api/LobsterFramework.EntitySystem.StunEffect.html": {
    "href": "api/LobsterFramework.EntitySystem.StunEffect.html",
    "title": "Class StunEffect | LobsterFramework documentation",
    "keywords": "Class StunEffect Inheritance object Object ScriptableObject Effect StunEffect Inherited Members Effect.entity Effect.Icon Effect.Counter_t Effect.Duration Effect.ActivateEffect(Entity) Effect.Update() Effect.OnUpdate() Effect.TerminateEffect() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.EntitySystem Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Effect/Stun\")] public class StunEffect : Effect Methods OnApply() Declaration protected override void OnApply() Overrides Effect.OnApply() OnEffectOver() Declaration protected override void OnEffectOver() Overrides Effect.OnEffectOver()"
  },
  "api/LobsterFramework.FindMissingScript.html": {
    "href": "api/LobsterFramework.FindMissingScript.html",
    "title": "Class FindMissingScript | LobsterFramework documentation",
    "keywords": "Class FindMissingScript Inheritance object FindMissingScript Namespace: LobsterFramework Assembly: MyScripts.dll Syntax public static class FindMissingScript Methods FindMissingScriptInPrefab() Declaration [MenuItem(\"Script/Find Missing Script In Prefab\")] public static void FindMissingScriptInPrefab() FindMissingScriptInScene() Declaration [MenuItem(\"Script/Find Missing Script In Scene\")] public static void FindMissingScriptInScene()"
  },
  "api/LobsterFramework.html": {
    "href": "api/LobsterFramework.html",
    "title": "Namespace LobsterFramework | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework Classes FindMissingScript"
  },
  "api/LobsterFramework.InputControl.html": {
    "href": "api/LobsterFramework.InputControl.html",
    "title": "Namespace LobsterFramework.InputControl | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.InputControl Classes PlayerController"
  },
  "api/LobsterFramework.InputControl.PlayerController.html": {
    "href": "api/LobsterFramework.InputControl.PlayerController.html",
    "title": "Class PlayerController | LobsterFramework documentation",
    "keywords": "Class PlayerController Inheritance object Object Component Behaviour MonoBehaviour PlayerController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.InputControl Assembly: MyScripts.dll Syntax [RequireComponent(typeof(GeneralInteractor))] public class PlayerController : MonoBehaviour Methods CircleAttack(CallbackContext) Declaration public void CircleAttack(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context CircleAttack2(CallbackContext) Declaration public void CircleAttack2(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context Guard(CallbackContext) Declaration public void Guard(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context LateUpdate() Declaration public void LateUpdate() NextInteractable(CallbackContext) Declaration public void NextInteractable(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context PreviousInteractable(CallbackContext) Declaration public void PreviousInteractable(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context PrimaryInteraction(CallbackContext) Declaration public void PrimaryInteraction(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context SecondaryInteraction(CallbackContext) Declaration public void SecondaryInteraction(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context Shoot(CallbackContext) Declaration public void Shoot(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.UnityEngine.InputSystem.InputAction.CallbackContext context Start() Declaration public void Start()"
  },
  "api/LobsterFramework.Interaction.CollectableItem.html": {
    "href": "api/LobsterFramework.Interaction.CollectableItem.html",
    "title": "Class CollectableItem | LobsterFramework documentation",
    "keywords": "Class CollectableItem Inheritance object Object Component Behaviour MonoBehaviour InteractableObject CollectableItem Inherited Members InteractableObject.interactionChannel InteractableObject.Start() InteractableObject.InteractEnabled InteractableObject.OnInteract(Interactor, InteractionType) InteractableObject.Update() InteractableObject.IUpdate() InteractableObject.OnDisable() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax [Interaction(new Type[] { typeof(Inventory) })] [RequireComponent(typeof(SpriteRenderer))] public class CollectableItem : InteractableObject Properties Item Declaration public InventoryItem Item { get; set; } Property Value Type Description InventoryItem Methods GetInteractionOptions(Type) Declaration public override InteractionPrompt GetInteractionOptions(Type t) Parameters Type Name Description Type t Returns Type Description InteractionPrompt Overrides InteractableObject.GetInteractionOptions(Type)"
  },
  "api/LobsterFramework.Interaction.GeneralInteractor.html": {
    "href": "api/LobsterFramework.Interaction.GeneralInteractor.html",
    "title": "Class GeneralInteractor | LobsterFramework documentation",
    "keywords": "Class GeneralInteractor Inheritance object Object Component Behaviour MonoBehaviour Interactor GeneralInteractor Inherited Members Interactor.IsBase Interactor.Awake() Interactor.Start() Interactor.OnEnable() Interactor.OnDisable() Interactor.OnInteract(InteractableObject, InteractionType) Interactor.AddInteractable(InteractableObject) Interactor.RemoveInteractable(InteractableObject) Interactor.AddInteractable(InteractableObject, Interactor) Interactor.RemoveInteractable(InteractableObject, Interactor) Interactor.Interact(Type, InteractionType) Interactor.Interact(InteractionType) Interactor.Interact(InteractionType, InteractableObject) Interactor.GetInteractionOptions() Interactor.NextInteractable() Interactor.PreviousInteractable() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax public class GeneralInteractor : Interactor"
  },
  "api/LobsterFramework.Interaction.html": {
    "href": "api/LobsterFramework.Interaction.html",
    "title": "Namespace LobsterFramework.Interaction | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.Interaction Classes CollectableItem GeneralInteractor InteractableObject InteractionAttribute Specifies the types of interactors this interable object can have interactions with. Interactor Inventory LockableDoor SimpleDoor Teleportor Structs InteractionPrompt InventoryItem Enums InteractionType"
  },
  "api/LobsterFramework.Interaction.InteractableObject.html": {
    "href": "api/LobsterFramework.Interaction.InteractableObject.html",
    "title": "Class InteractableObject | LobsterFramework documentation",
    "keywords": "Class InteractableObject Inheritance object Object Component Behaviour MonoBehaviour InteractableObject CollectableItem LockableDoor SimpleDoor Teleportor DialogueDisplayer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax public abstract class InteractableObject : MonoBehaviour Fields interactionChannel Declaration [SerializeField] protected StringEventChannel interactionChannel Field Value Type Description StringEventChannel Properties InteractEnabled Declaration public bool InteractEnabled { get; set; } Property Value Type Description bool Methods GetInteractionOptions(Type) Declaration public abstract InteractionPrompt GetInteractionOptions(Type t) Parameters Type Name Description Type t Returns Type Description InteractionPrompt IUpdate() Declaration protected virtual void IUpdate() OnDisable() Declaration public void OnDisable() OnInteract(Interactor, InteractionType) Declaration public virtual void OnInteract(Interactor interactor, InteractionType interactType) Parameters Type Name Description Interactor interactor InteractionType interactType Start() Declaration public void Start() Update() Declaration public void Update()"
  },
  "api/LobsterFramework.Interaction.InteractionAttribute.html": {
    "href": "api/LobsterFramework.Interaction.InteractionAttribute.html",
    "title": "Class InteractionAttribute | LobsterFramework documentation",
    "keywords": "Class InteractionAttribute Specifies the types of interactors this interable object can have interactions with. Inheritance object Attribute InteractionAttribute Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class InteractionAttribute : Attribute Constructors InteractionAttribute(params Type[]) Declaration public InteractionAttribute(params Type[] interactors) Parameters Type Name Description Type[] interactors Methods AddInteractor(Interactor) Declaration public static void AddInteractor(Interactor interactor) Parameters Type Name Description Interactor interactor ExistInteractor(Interactor) Declaration public static bool ExistInteractor(Interactor interactor) Parameters Type Name Description Interactor interactor Returns Type Description bool GetInteractors(Type, List<Interactor>) Declaration public static void GetInteractors(Type interactorType, List<Interactor> container) Parameters Type Name Description Type interactorType List<Interactor> container GetInteractorTransform(Interactor) Declaration public static Transform GetInteractorTransform(Interactor interactor) Parameters Type Name Description Interactor interactor Returns Type Description Transform GetInteractorTypes(Type) Declaration public static Type[] GetInteractorTypes(Type interactable) Parameters Type Name Description Type interactable Returns Type Description Type[] Init(Type) Declaration public void Init(Type interactable) Parameters Type Name Description Type interactable IsInteractable(Type, Type) Declaration public static bool IsInteractable(Type interactable, Type interactor) Parameters Type Name Description Type interactable Type interactor Returns Type Description bool RemoveInteractor(Interactor) Declaration public static void RemoveInteractor(Interactor interactor) Parameters Type Name Description Interactor interactor"
  },
  "api/LobsterFramework.Interaction.InteractionPrompt.html": {
    "href": "api/LobsterFramework.Interaction.InteractionPrompt.html",
    "title": "Struct InteractionPrompt | LobsterFramework documentation",
    "keywords": "Struct InteractionPrompt Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax public struct InteractionPrompt Fields none Declaration public static InteractionPrompt none Field Value Type Description InteractionPrompt Properties Primary Declaration public string Primary { readonly get; set; } Property Value Type Description string Quaternary Declaration public string Quaternary { readonly get; set; } Property Value Type Description string Secondary Declaration public string Secondary { readonly get; set; } Property Value Type Description string Tertiary Declaration public string Tertiary { readonly get; set; } Property Value Type Description string"
  },
  "api/LobsterFramework.Interaction.InteractionType.html": {
    "href": "api/LobsterFramework.Interaction.InteractionType.html",
    "title": "Enum InteractionType | LobsterFramework documentation",
    "keywords": "Enum InteractionType Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax public enum InteractionType Fields Name Description Primary Quaternary Secondary Tertiary"
  },
  "api/LobsterFramework.Interaction.Interactor.html": {
    "href": "api/LobsterFramework.Interaction.Interactor.html",
    "title": "Class Interactor | LobsterFramework documentation",
    "keywords": "Class Interactor Inheritance object Object Component Behaviour MonoBehaviour Interactor GeneralInteractor Inventory Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax public abstract class Interactor : MonoBehaviour Properties IsBase Declaration public bool IsBase { get; } Property Value Type Description bool Methods AddInteractable(InteractableObject, Interactor) Declaration public bool AddInteractable(InteractableObject obj, Interactor interactor) Parameters Type Name Description InteractableObject obj Interactor interactor Returns Type Description bool AddInteractable(InteractableObject) Declaration public bool AddInteractable(InteractableObject obj) Parameters Type Name Description InteractableObject obj Returns Type Description bool Awake() Declaration public void Awake() GetInteractionOptions() Declaration public InteractionPrompt GetInteractionOptions() Returns Type Description InteractionPrompt Interact(InteractionType, InteractableObject) Declaration public void Interact(InteractionType interactType, InteractableObject interactable) Parameters Type Name Description InteractionType interactType InteractableObject interactable Interact(InteractionType) Declaration public bool Interact(InteractionType interactType) Parameters Type Name Description InteractionType interactType Returns Type Description bool Interact(Type, InteractionType) Declaration public bool Interact(Type interactableType, InteractionType interactType) Parameters Type Name Description Type interactableType InteractionType interactType Returns Type Description bool NextInteractable() Declaration public void NextInteractable() OnDisable() Declaration public void OnDisable() OnEnable() Declaration public void OnEnable() OnInteract(InteractableObject, InteractionType) Declaration protected virtual void OnInteract(InteractableObject obj, InteractionType interactionType) Parameters Type Name Description InteractableObject obj InteractionType interactionType PreviousInteractable() Declaration public void PreviousInteractable() RemoveInteractable(InteractableObject, Interactor) Declaration public bool RemoveInteractable(InteractableObject obj, Interactor interactor) Parameters Type Name Description InteractableObject obj Interactor interactor Returns Type Description bool RemoveInteractable(InteractableObject) Declaration public bool RemoveInteractable(InteractableObject obj) Parameters Type Name Description InteractableObject obj Returns Type Description bool Start() Declaration public void Start()"
  },
  "api/LobsterFramework.Interaction.Inventory.html": {
    "href": "api/LobsterFramework.Interaction.Inventory.html",
    "title": "Class Inventory | LobsterFramework documentation",
    "keywords": "Class Inventory Inheritance object Object Component Behaviour MonoBehaviour Interactor Inventory Inherited Members Interactor.IsBase Interactor.Awake() Interactor.Start() Interactor.OnEnable() Interactor.OnDisable() Interactor.AddInteractable(InteractableObject) Interactor.RemoveInteractable(InteractableObject) Interactor.AddInteractable(InteractableObject, Interactor) Interactor.RemoveInteractable(InteractableObject, Interactor) Interactor.Interact(Type, InteractionType) Interactor.Interact(InteractionType) Interactor.Interact(InteractionType, InteractableObject) Interactor.GetInteractionOptions() Interactor.NextInteractable() Interactor.PreviousInteractable() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax public class Inventory : Interactor Methods FindSpot(InventoryItem) Declaration public int FindSpot(InventoryItem itemToCollect) Parameters Type Name Description InventoryItem itemToCollect Returns Type Description int OnInteract(InteractableObject, InteractionType) Declaration protected override void OnInteract(InteractableObject obj, InteractionType interactionType) Parameters Type Name Description InteractableObject obj InteractionType interactionType Overrides Interactor.OnInteract(InteractableObject, InteractionType)"
  },
  "api/LobsterFramework.Interaction.InventoryItem.html": {
    "href": "api/LobsterFramework.Interaction.InventoryItem.html",
    "title": "Struct InventoryItem | LobsterFramework documentation",
    "keywords": "Struct InventoryItem Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax [Serializable] public struct InventoryItem Fields itemData Declaration public SimpleItem itemData Field Value Type Description SimpleItem Properties Quantity Declaration public int Quantity { get; } Property Value Type Description int Methods AddItem(ref InventoryItem) Declaration public void AddItem(ref InventoryItem itemToMerge) Parameters Type Name Description InventoryItem itemToMerge CorrectInventoryQuantity(bool) Declaration public void CorrectInventoryQuantity(bool enforceLimit = true) Parameters Type Name Description bool enforceLimit"
  },
  "api/LobsterFramework.Interaction.LockableDoor.html": {
    "href": "api/LobsterFramework.Interaction.LockableDoor.html",
    "title": "Class LockableDoor | LobsterFramework documentation",
    "keywords": "Class LockableDoor Inheritance object Object Component Behaviour MonoBehaviour InteractableObject LockableDoor Inherited Members InteractableObject.interactionChannel InteractableObject.Start() InteractableObject.InteractEnabled InteractableObject.Update() InteractableObject.IUpdate() InteractableObject.OnDisable() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax [RequireComponent(typeof(Collider2D), typeof(SpriteRenderer))] [Interaction(new Type[] { typeof(GeneralInteractor) })] public class LockableDoor : InteractableObject Properties IsClosed Declaration public bool IsClosed { get; } Property Value Type Description bool IsLocked Declaration public bool IsLocked { get; set; } Property Value Type Description bool Methods GetInteractionOptions(Type) Declaration public override InteractionPrompt GetInteractionOptions(Type t) Parameters Type Name Description Type t Returns Type Description InteractionPrompt Overrides InteractableObject.GetInteractionOptions(Type) OnInteract(Interactor, InteractionType) Declaration public override void OnInteract(Interactor interactor, InteractionType interactType) Parameters Type Name Description Interactor interactor InteractionType interactType Overrides InteractableObject.OnInteract(Interactor, InteractionType)"
  },
  "api/LobsterFramework.Interaction.SimpleDoor.html": {
    "href": "api/LobsterFramework.Interaction.SimpleDoor.html",
    "title": "Class SimpleDoor | LobsterFramework documentation",
    "keywords": "Class SimpleDoor Inheritance object Object Component Behaviour MonoBehaviour InteractableObject SimpleDoor Inherited Members InteractableObject.interactionChannel InteractableObject.Start() InteractableObject.InteractEnabled InteractableObject.Update() InteractableObject.IUpdate() InteractableObject.OnDisable() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax [RequireComponent(typeof(Collider2D), typeof(SpriteRenderer))] [Interaction(new Type[] { typeof(GeneralInteractor) })] public class SimpleDoor : InteractableObject Properties IsClosed Declaration public bool IsClosed { get; } Property Value Type Description bool Methods GetInteractionOptions(Type) Declaration public override InteractionPrompt GetInteractionOptions(Type t) Parameters Type Name Description Type t Returns Type Description InteractionPrompt Overrides InteractableObject.GetInteractionOptions(Type) OnInteract(Interactor, InteractionType) Declaration public override void OnInteract(Interactor interactor, InteractionType interactType) Parameters Type Name Description Interactor interactor InteractionType interactType Overrides InteractableObject.OnInteract(Interactor, InteractionType)"
  },
  "api/LobsterFramework.Interaction.Teleportor.html": {
    "href": "api/LobsterFramework.Interaction.Teleportor.html",
    "title": "Class Teleportor | LobsterFramework documentation",
    "keywords": "Class Teleportor Inheritance object Object Component Behaviour MonoBehaviour InteractableObject Teleportor Inherited Members InteractableObject.interactionChannel InteractableObject.Start() InteractableObject.InteractEnabled InteractableObject.Update() InteractableObject.IUpdate() InteractableObject.OnDisable() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Interaction Assembly: MyScripts.dll Syntax [Interaction(new Type[] { typeof(GeneralInteractor) })] public class Teleportor : InteractableObject Methods GetInteractionOptions(Type) Declaration public override InteractionPrompt GetInteractionOptions(Type t) Parameters Type Name Description Type t Returns Type Description InteractionPrompt Overrides InteractableObject.GetInteractionOptions(Type) OnInteract(Interactor, InteractionType) Declaration public override void OnInteract(Interactor interactor, InteractionType interactType) Parameters Type Name Description Interactor interactor InteractionType interactType Overrides InteractableObject.OnInteract(Interactor, InteractionType)"
  },
  "api/LobsterFramework.Pool.ActionCapsuleCollider.html": {
    "href": "api/LobsterFramework.Pool.ActionCapsuleCollider.html",
    "title": "Class ActionCapsuleCollider | LobsterFramework documentation",
    "keywords": "Class ActionCapsuleCollider Inheritance object Object Component Behaviour MonoBehaviour ActionCapsuleCollider Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Pool Assembly: MyScripts.dll Syntax [RequireComponent(typeof(Rigidbody2D))] [RequireComponent(typeof(CapsuleCollider2D))] public class ActionCapsuleCollider : MonoBehaviour Fields entityEvent Declaration public UnityEvent<Entity> entityEvent Field Value Type Description UnityEvent<Entity> Methods SetColliderSize(Vector2) Declaration public void SetColliderSize(Vector2 size) Parameters Type Name Description Vector2 size"
  },
  "api/LobsterFramework.Pool.Bullet.html": {
    "href": "api/LobsterFramework.Pool.Bullet.html",
    "title": "Class Bullet | LobsterFramework documentation",
    "keywords": "Class Bullet Inheritance object Object Component Behaviour MonoBehaviour Bullet Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Pool Assembly: MyScripts.dll Syntax [RequireComponent(typeof(Rigidbody2D))] [RequireComponent(typeof(Collider2D))] public class Bullet : MonoBehaviour Methods Initialize(TargetSetting, float, Entity, int, int) Declaration public void Initialize(TargetSetting target, float duration, Entity attacker = null, int attackPower = -1, int piercePower = -1) Parameters Type Name Description TargetSetting target float duration Entity attacker int attackPower int piercePower"
  },
  "api/LobsterFramework.Pool.html": {
    "href": "api/LobsterFramework.Pool.html",
    "title": "Namespace LobsterFramework.Pool | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.Pool Classes ActionCapsuleCollider Bullet ObjectPool TemporalObject"
  },
  "api/LobsterFramework.Pool.ObjectPool.html": {
    "href": "api/LobsterFramework.Pool.ObjectPool.html",
    "title": "Class ObjectPool | LobsterFramework documentation",
    "keywords": "Class ObjectPool Inheritance object Object Component Behaviour MonoBehaviour ObjectPool Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Pool Assembly: MyScripts.dll Syntax public class ObjectPool : MonoBehaviour Properties Instance Declaration public static ObjectPool Instance { get; } Property Value Type Description ObjectPool Methods GetObject(string, Vector3, Quaternion, Transform, bool) Declaration public GameObject GetObject(string tag, Vector3 position, Quaternion rotation, Transform parentTransform = null, bool keepWorldPosition = false) Parameters Type Name Description string tag Vector3 position Quaternion rotation Transform parentTransform bool keepWorldPosition Returns Type Description GameObject"
  },
  "api/LobsterFramework.Pool.TemporalObject.html": {
    "href": "api/LobsterFramework.Pool.TemporalObject.html",
    "title": "Class TemporalObject | LobsterFramework documentation",
    "keywords": "Class TemporalObject Inheritance object Object Component Behaviour MonoBehaviour TemporalObject Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Pool Assembly: MyScripts.dll Syntax public class TemporalObject : MonoBehaviour Fields duration Declaration public float duration Field Value Type Description float Methods DisableObject() Declaration public void DisableObject() ResetCounter() Declaration public void ResetCounter()"
  },
  "api/LobsterFramework.UI.DialogueDisplayer.html": {
    "href": "api/LobsterFramework.UI.DialogueDisplayer.html",
    "title": "Class DialogueDisplayer | LobsterFramework documentation",
    "keywords": "Class DialogueDisplayer Inheritance object Object Component Behaviour MonoBehaviour InteractableObject DialogueDisplayer Inherited Members InteractableObject.interactionChannel InteractableObject.Start() InteractableObject.InteractEnabled InteractableObject.Update() InteractableObject.IUpdate() InteractableObject.OnDisable() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.UI Assembly: MyScripts.dll Syntax [Interaction(new Type[] { typeof(GeneralInteractor) })] public class DialogueDisplayer : InteractableObject Methods DisplayDialogue() Declaration public void DisplayDialogue() DisplayText() Declaration public IEnumerator DisplayText() Returns Type Description IEnumerator GetInteractionOptions(Type) Declaration public override InteractionPrompt GetInteractionOptions(Type t) Parameters Type Name Description Type t Returns Type Description InteractionPrompt Overrides InteractableObject.GetInteractionOptions(Type) OnInteract(Interactor, InteractionType) Declaration public override void OnInteract(Interactor interactor, InteractionType type) Parameters Type Name Description Interactor interactor InteractionType type Overrides InteractableObject.OnInteract(Interactor, InteractionType) Respond(DialogueResponse) Declaration public void Respond(DialogueResponse response) Parameters Type Name Description DialogueResponse response"
  },
  "api/LobsterFramework.UI.html": {
    "href": "api/LobsterFramework.UI.html",
    "title": "Namespace LobsterFramework.UI | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.UI Classes DialogueDisplayer InteractionUI PlayerUIDisplayer"
  },
  "api/LobsterFramework.UI.InteractionUI.html": {
    "href": "api/LobsterFramework.UI.InteractionUI.html",
    "title": "Class InteractionUI | LobsterFramework documentation",
    "keywords": "Class InteractionUI Inheritance object Object Component Behaviour MonoBehaviour InteractionUI Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.UI Assembly: MyScripts.dll Syntax public class InteractionUI : MonoBehaviour Fields interactor Declaration [Header(\"Interactor to display prompt for\")] public Interactor interactor Field Value Type Description Interactor"
  },
  "api/LobsterFramework.UI.PlayerUIDisplayer.html": {
    "href": "api/LobsterFramework.UI.PlayerUIDisplayer.html",
    "title": "Class PlayerUIDisplayer | LobsterFramework documentation",
    "keywords": "Class PlayerUIDisplayer Inheritance object Object Component Behaviour MonoBehaviour PlayerUIDisplayer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.UI Assembly: MyScripts.dll Syntax public class PlayerUIDisplayer : MonoBehaviour Fields actionComponent Declaration public AbilityRunner actionComponent Field Value Type Description AbilityRunner healthSlider Declaration public Slider healthSlider Field Value Type Description UnityEngine.UI.Slider manaSlider Declaration public Slider manaSlider Field Value Type Description UnityEngine.UI.Slider player Declaration public Entity player Field Value Type Description Entity"
  },
  "api/LobsterFramework.Utility.AbilitySet.html": {
    "href": "api/LobsterFramework.Utility.AbilitySet.html",
    "title": "Class AbilitySet | LobsterFramework documentation",
    "keywords": "Class AbilitySet Inheritance object SerializableHashSet<Ability> AbilitySet Implements ISerializationCallbackReceiver Inherited Members SerializableHashSet<Ability>.m_HashSet SerializableHashSet<Ability>.values SerializableHashSet<Ability>.Count SerializableHashSet<Ability>.IsReadOnly SerializableHashSet<Ability>.Add(Ability) SerializableHashSet<Ability>.Clear() SerializableHashSet<Ability>.Contains(Ability) SerializableHashSet<Ability>.CopyTo(Ability[], int) SerializableHashSet<Ability>.ExceptWith(IEnumerable<Ability>) SerializableHashSet<Ability>.GetEnumerator() SerializableHashSet<Ability>.IntersectWith(IEnumerable<Ability>) SerializableHashSet<Ability>.IsProperSubsetOf(IEnumerable<Ability>) SerializableHashSet<Ability>.IsProperSupersetOf(IEnumerable<Ability>) SerializableHashSet<Ability>.IsSubsetOf(IEnumerable<Ability>) SerializableHashSet<Ability>.IsSupersetOf(IEnumerable<Ability>) SerializableHashSet<Ability>.OnAfterDeserialize() SerializableHashSet<Ability>.OnBeforeSerialize() SerializableHashSet<Ability>.Overlaps(IEnumerable<Ability>) SerializableHashSet<Ability>.Remove(Ability) SerializableHashSet<Ability>.SetEquals(IEnumerable<Ability>) SerializableHashSet<Ability>.SymmetricExceptWith(IEnumerable<Ability>) SerializableHashSet<Ability>.UnionWith(IEnumerable<Ability>) SerializableHashSet<Ability>.GetValueInList() Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax [Serializable] public class AbilitySet : SerializableHashSet<Ability>, ISerializationCallbackReceiver Implements ISerializationCallbackReceiver"
  },
  "api/LobsterFramework.Utility.AttributeInitializer.html": {
    "href": "api/LobsterFramework.Utility.AttributeInitializer.html",
    "title": "Class AttributeInitializer | LobsterFramework documentation",
    "keywords": "Class AttributeInitializer Initializes all of the custom attributes of namespace LobsterFramework Inheritance object AttributeInitializer Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax public class AttributeInitializer Methods Initialize() Declaration [DidReloadScripts] public static void Initialize()"
  },
  "api/LobsterFramework.Utility.BufferedStats.BaseAnd.html": {
    "href": "api/LobsterFramework.Utility.BufferedStats.BaseAnd.html",
    "title": "Class BaseAnd | LobsterFramework documentation",
    "keywords": "Class BaseAnd Value is true if all effectors are true, otherwise return base value Inheritance object BufferedStat<bool> BaseAnd Inherited Members BufferedStat<bool>.stats BufferedStat<bool>.baseValue BufferedStat<bool>.Stat BufferedStat<bool>.Compatible(bool) BufferedStat<bool>.AddEffector(bool) BufferedStat<bool>.RemoveEffector(int) BufferedStat<bool>.SetEffector(int, bool) BufferedStat<bool>.ClearEffectors() Namespace: LobsterFramework.Utility.BufferedStats Assembly: MyScripts.dll Syntax public class BaseAnd : BufferedStat<bool> Constructors BaseAnd(bool) Declaration public BaseAnd(bool value) Parameters Type Name Description bool value Methods Value() Declaration protected override bool Value() Returns Type Description bool Overrides LobsterFramework.Utility.BufferedStats.BufferedStat<bool>.Value()"
  },
  "api/LobsterFramework.Utility.BufferedStats.BaseOr.html": {
    "href": "api/LobsterFramework.Utility.BufferedStats.BaseOr.html",
    "title": "Class BaseOr | LobsterFramework documentation",
    "keywords": "Class BaseOr Value is true if one effector is true, otherwise return base value Inheritance object BufferedStat<bool> BaseOr Inherited Members BufferedStat<bool>.stats BufferedStat<bool>.baseValue BufferedStat<bool>.Stat BufferedStat<bool>.Compatible(bool) BufferedStat<bool>.AddEffector(bool) BufferedStat<bool>.RemoveEffector(int) BufferedStat<bool>.SetEffector(int, bool) BufferedStat<bool>.ClearEffectors() Namespace: LobsterFramework.Utility.BufferedStats Assembly: MyScripts.dll Syntax public class BaseOr : BufferedStat<bool> Constructors BaseOr(bool) Declaration public BaseOr(bool value) Parameters Type Name Description bool value Methods Value() Declaration protected override bool Value() Returns Type Description bool Overrides LobsterFramework.Utility.BufferedStats.BufferedStat<bool>.Value()"
  },
  "api/LobsterFramework.Utility.BufferedStats.BufferedStat-1.html": {
    "href": "api/LobsterFramework.Utility.BufferedStats.BufferedStat-1.html",
    "title": "Class BufferedStat<T> | LobsterFramework documentation",
    "keywords": "Class BufferedStat<T> Stats that can buffered, meaning it can be affected by multiple effectors. i.e The player may be unable to act for some time due to multiple sources of negative effects, and the flag setting (buffered stat) that governs this player state will remain unchanged if not all of these effects (effectors) are removed. Inheritance object BufferedStat<T> BaseAnd BaseOr FloatProduct FloatSum IntSum Namespace: LobsterFramework.Utility.BufferedStats Assembly: MyScripts.dll Syntax public abstract class BufferedStat<T> Type Parameters Name Description T Constructors BufferedStat(T) Declaration public BufferedStat(T value) Parameters Type Name Description T value Fields baseValue Declaration protected T baseValue Field Value Type Description T stats Declaration protected Dictionary<int, T> stats Field Value Type Description Dictionary<int, T> Properties Stat Declaration public T Stat { get; } Property Value Type Description T Methods AddEffector(T) Declaration public int AddEffector(T obj) Parameters Type Name Description T obj Returns Type Description int ClearEffectors() Declaration public void ClearEffectors() Compatible(T) Declaration public virtual bool Compatible(T obj) Parameters Type Name Description T obj Returns Type Description bool RemoveEffector(int) Declaration public bool RemoveEffector(int id) Parameters Type Name Description int id Returns Type Description bool SetEffector(int, T) Declaration public bool SetEffector(int id, T obj) Parameters Type Name Description int id T obj Returns Type Description bool Value() Declaration protected abstract T Value() Returns Type Description T"
  },
  "api/LobsterFramework.Utility.BufferedStats.FloatProduct.html": {
    "href": "api/LobsterFramework.Utility.BufferedStats.FloatProduct.html",
    "title": "Class FloatProduct | LobsterFramework documentation",
    "keywords": "Class FloatProduct Value is the product of all effectors Inheritance object BufferedStat<float> FloatProduct Inherited Members BufferedStat<float>.stats BufferedStat<float>.baseValue BufferedStat<float>.Stat BufferedStat<float>.AddEffector(float) BufferedStat<float>.RemoveEffector(int) BufferedStat<float>.SetEffector(int, float) BufferedStat<float>.ClearEffectors() Namespace: LobsterFramework.Utility.BufferedStats Assembly: MyScripts.dll Syntax public class FloatProduct : BufferedStat<float> Constructors FloatProduct(float, bool) Declaration public FloatProduct(float value, bool nonNegative = false) Parameters Type Name Description float value bool nonNegative Methods Compatible(float) Declaration public override bool Compatible(float obj) Parameters Type Name Description float obj Returns Type Description bool Overrides LobsterFramework.Utility.BufferedStats.BufferedStat<float>.Compatible(float) Value() Declaration protected override float Value() Returns Type Description float Overrides LobsterFramework.Utility.BufferedStats.BufferedStat<float>.Value()"
  },
  "api/LobsterFramework.Utility.BufferedStats.FloatSum.html": {
    "href": "api/LobsterFramework.Utility.BufferedStats.FloatSum.html",
    "title": "Class FloatSum | LobsterFramework documentation",
    "keywords": "Class FloatSum Value is the sum of all effectors Inheritance object BufferedStat<float> FloatSum Inherited Members BufferedStat<float>.stats BufferedStat<float>.baseValue BufferedStat<float>.Stat BufferedStat<float>.AddEffector(float) BufferedStat<float>.RemoveEffector(int) BufferedStat<float>.SetEffector(int, float) BufferedStat<float>.ClearEffectors() Namespace: LobsterFramework.Utility.BufferedStats Assembly: MyScripts.dll Syntax public class FloatSum : BufferedStat<float> Constructors FloatSum(int, bool, bool) Declaration public FloatSum(int value, bool nonNegative = false, bool addNonNegative = true) Parameters Type Name Description int value bool nonNegative bool addNonNegative Methods Compatible(float) Declaration public override bool Compatible(float obj) Parameters Type Name Description float obj Returns Type Description bool Overrides LobsterFramework.Utility.BufferedStats.BufferedStat<float>.Compatible(float) Value() Declaration protected override float Value() Returns Type Description float Overrides LobsterFramework.Utility.BufferedStats.BufferedStat<float>.Value()"
  },
  "api/LobsterFramework.Utility.BufferedStats.html": {
    "href": "api/LobsterFramework.Utility.BufferedStats.html",
    "title": "Namespace LobsterFramework.Utility.BufferedStats | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.Utility.BufferedStats Classes BaseAnd Value is true if all effectors are true, otherwise return base value BaseOr Value is true if one effector is true, otherwise return base value BufferedStat<T> Stats that can buffered, meaning it can be affected by multiple effectors. i.e The player may be unable to act for some time due to multiple sources of negative effects, and the flag setting (buffered stat) that governs this player state will remain unchanged if not all of these effects (effectors) are removed. FloatProduct Value is the product of all effectors FloatSum Value is the sum of all effectors IntSum Value is the sum of all effectors"
  },
  "api/LobsterFramework.Utility.BufferedStats.IntSum.html": {
    "href": "api/LobsterFramework.Utility.BufferedStats.IntSum.html",
    "title": "Class IntSum | LobsterFramework documentation",
    "keywords": "Class IntSum Value is the sum of all effectors Inheritance object BufferedStat<int> IntSum Inherited Members BufferedStat<int>.stats BufferedStat<int>.baseValue BufferedStat<int>.Stat BufferedStat<int>.Compatible(int) BufferedStat<int>.AddEffector(int) BufferedStat<int>.RemoveEffector(int) BufferedStat<int>.SetEffector(int, int) BufferedStat<int>.ClearEffectors() Namespace: LobsterFramework.Utility.BufferedStats Assembly: MyScripts.dll Syntax public class IntSum : BufferedStat<int> Constructors IntSum(int) Declaration public IntSum(int value) Parameters Type Name Description int value Methods Value() Declaration protected override int Value() Returns Type Description int Overrides LobsterFramework.Utility.BufferedStats.BufferedStat<int>.Value()"
  },
  "api/LobsterFramework.Utility.CollisionTrigger.html": {
    "href": "api/LobsterFramework.Utility.CollisionTrigger.html",
    "title": "Class CollisionTrigger | LobsterFramework documentation",
    "keywords": "Class CollisionTrigger Inheritance object Object Component Behaviour MonoBehaviour CollisionTrigger Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax [RequireComponent(typeof(Collider2D))] public class CollisionTrigger : MonoBehaviour Fields OnTriggerCallBack Declaration public UnityEvent<Entity> OnTriggerCallBack Field Value Type Description UnityEvent<Entity> OnTriggerExitCallBack Declaration public UnityEvent<Entity> OnTriggerExitCallBack Field Value Type Description UnityEvent<Entity>"
  },
  "api/LobsterFramework.Utility.Condition.html": {
    "href": "api/LobsterFramework.Utility.Condition.html",
    "title": "Class Condition | LobsterFramework documentation",
    "keywords": "Class Condition Inheritance object Object Component Behaviour MonoBehaviour Condition Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) Component.GetComponentInParent(Type) UnityEngine.Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax public abstract class Condition : MonoBehaviour Methods Eval() Declaration public abstract bool Eval() Returns Type Description bool"
  },
  "api/LobsterFramework.Utility.EventChannels.EntityEventChannel.html": {
    "href": "api/LobsterFramework.Utility.EventChannels.EntityEventChannel.html",
    "title": "Class EntityEventChannel | LobsterFramework documentation",
    "keywords": "Class EntityEventChannel Inheritance object Object ScriptableObject EntityEventChannel Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Utility.EventChannels Assembly: MyScripts.dll Syntax public class EntityEventChannel : ScriptableObject Fields onEventRaised Declaration public UnityAction<Entity> onEventRaised Field Value Type Description UnityAction<Entity> Methods RaiseEvent(Entity) Declaration public void RaiseEvent(Entity entity) Parameters Type Name Description Entity entity"
  },
  "api/LobsterFramework.Utility.EventChannels.html": {
    "href": "api/LobsterFramework.Utility.EventChannels.html",
    "title": "Namespace LobsterFramework.Utility.EventChannels | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.Utility.EventChannels Classes EntityEventChannel"
  },
  "api/LobsterFramework.Utility.GameUtility.html": {
    "href": "api/LobsterFramework.Utility.GameUtility.html",
    "title": "Class GameUtility | LobsterFramework documentation",
    "keywords": "Class GameUtility Inheritance object GameUtility Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax public static class GameUtility Methods SetAbsoluteScale(GameObject, Vector2) Declaration public static void SetAbsoluteScale(GameObject obj, Vector2 size) Parameters Type Name Description GameObject obj Vector2 size"
  },
  "api/LobsterFramework.Utility.Groups.EntityGroup.html": {
    "href": "api/LobsterFramework.Utility.Groups.EntityGroup.html",
    "title": "Class EntityGroup | LobsterFramework documentation",
    "keywords": "Class EntityGroup Inheritance object Object ScriptableObject EntityGroup Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) Object.Instantiate(Object, Transform, bool) UnityEngine.Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) Object.Destroy(Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) Object.DestroyImmediate(Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) Object.FindObjectsOfType(Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) Object.ToString() Object.name Object.hideFlags Namespace: LobsterFramework.Utility.Groups Assembly: MyScripts.dll Syntax [CreateAssetMenu(menuName = \"Groups/Entity Group\")] public class EntityGroup : ScriptableObject Fields OnEntityAdded Declaration public UnityEvent<Entity> OnEntityAdded Field Value Type Description UnityEvent<Entity> OnEntityRemoved Declaration public UnityEvent<Entity> OnEntityRemoved Field Value Type Description UnityEvent<Entity> Properties Count Declaration public int Count { get; } Property Value Type Description int IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool this[int] Declaration public Entity this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description Entity Methods Add(Entity) Declaration public void Add(Entity entity) Parameters Type Name Description Entity entity Clear() Declaration public void Clear() Contains(Entity) Declaration public bool Contains(Entity item) Parameters Type Name Description Entity item Returns Type Description bool CopyTo(Entity[], int) Declaration public void CopyTo(Entity[] array, int arrayIndex) Parameters Type Name Description Entity[] array int arrayIndex GetEnumerator() Declaration public IEnumerator<Entity> GetEnumerator() Returns Type Description IEnumerator<Entity> IndexOf(Entity) Declaration public int IndexOf(Entity item) Parameters Type Name Description Entity item Returns Type Description int Insert(int, Entity) Declaration public void Insert(int index, Entity item) Parameters Type Name Description int index Entity item Remove(Entity) Declaration public bool Remove(Entity entity) Parameters Type Name Description Entity entity Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index"
  },
  "api/LobsterFramework.Utility.Groups.html": {
    "href": "api/LobsterFramework.Utility.Groups.html",
    "title": "Namespace LobsterFramework.Utility.Groups | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.Utility.Groups Classes EntityGroup"
  },
  "api/LobsterFramework.Utility.html": {
    "href": "api/LobsterFramework.Utility.html",
    "title": "Namespace LobsterFramework.Utility | LobsterFramework documentation",
    "keywords": "Namespace LobsterFramework.Utility Classes AbilitySet AttributeInitializer Initializes all of the custom attributes of namespace LobsterFramework CollisionTrigger Condition GameUtility IdDistributor ManagedSet<T> SerializableDictionary<TKey, TValue> SerializableHashSet<TValue> SortableItem<T> StringAbilityConfigDictionary TypeAbilityDictionary TypeAbilityStatDictionary"
  },
  "api/LobsterFramework.Utility.IdDistributor.html": {
    "href": "api/LobsterFramework.Utility.IdDistributor.html",
    "title": "Class IdDistributor | LobsterFramework documentation",
    "keywords": "Class IdDistributor Inheritance object IdDistributor Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax public class IdDistributor Methods GetID() Declaration public int GetID() Returns Type Description int RecycleID(int) Declaration public bool RecycleID(int id) Parameters Type Name Description int id Returns Type Description bool"
  },
  "api/LobsterFramework.Utility.ManagedSet-1.html": {
    "href": "api/LobsterFramework.Utility.ManagedSet-1.html",
    "title": "Class ManagedSet<T> | LobsterFramework documentation",
    "keywords": "Class ManagedSet<T> Inheritance object ManagedSet<T> Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax public class ManagedSet<T> Type Parameters Name Description T Properties CurrentItem Declaration public T CurrentItem { get; } Property Value Type Description T Methods Add(T) Declaration public bool Add(T i) Parameters Type Name Description T i Returns Type Description bool Advance() Declaration public void Advance() Remove(T) Declaration public bool Remove(T i) Parameters Type Name Description T i Returns Type Description bool StepBack() Declaration public void StepBack()"
  },
  "api/LobsterFramework.Utility.SerializableDictionary-2.html": {
    "href": "api/LobsterFramework.Utility.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | LobsterFramework documentation",
    "keywords": "Class SerializableDictionary<TKey, TValue> Inheritance object SerializableDictionary<TKey, TValue> StringAbilityConfigDictionary TypeAbilityDictionary TypeAbilityStatDictionary Implements ISerializationCallbackReceiver Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax [Serializable] public abstract class SerializableDictionary<TKey, TValue> : ISerializationCallbackReceiver Type Parameters Name Description TKey TValue Fields dictionary Declaration protected Dictionary<TKey, TValue> dictionary Field Value Type Description Dictionary<TKey, TValue> keys Declaration [SerializeField] protected List<TKey> keys Field Value Type Description List<TKey> values Declaration [SerializeField] protected List<TValue> values Field Value Type Description List<TValue> Properties Count Declaration public int Count { get; } Property Value Type Description int IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool this[TKey] Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TValue Keys Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection<TKey> Values Declaration public ICollection<TValue> Values { get; } Property Value Type Description ICollection<TValue> Methods Add(TKey, TValue) Declaration public void Add(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Add(KeyValuePair<TKey, TValue>) Declaration public void Add(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item Clear() Declaration public void Clear() Contains(KeyValuePair<TKey, TValue>) Declaration public bool Contains(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item Returns Type Description bool ContainsKey(TKey) Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description bool CopyTo(KeyValuePair<TKey, TValue>[], int) Declaration public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair<TKey, TValue>[] array int arrayIndex GetEnumerator() Declaration public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns Type Description IEnumerator<KeyValuePair<TKey, TValue>> OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Remove(TKey) Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description bool Remove(KeyValuePair<TKey, TValue>) Declaration public bool Remove(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item Returns Type Description bool TryGetValue(TKey, out TValue) Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description bool Implements ISerializationCallbackReceiver"
  },
  "api/LobsterFramework.Utility.SerializableHashSet-1.html": {
    "href": "api/LobsterFramework.Utility.SerializableHashSet-1.html",
    "title": "Class SerializableHashSet<TValue> | LobsterFramework documentation",
    "keywords": "Class SerializableHashSet<TValue> Inheritance object SerializableHashSet<TValue> AbilitySet Implements ISerializationCallbackReceiver Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax [Serializable] public class SerializableHashSet<TValue> : ISerializationCallbackReceiver Type Parameters Name Description TValue Fields m_HashSet Declaration protected HashSet<TValue> m_HashSet Field Value Type Description HashSet<TValue> values Declaration [SerializeField] protected List<TValue> values Field Value Type Description List<TValue> Properties Count Declaration public int Count { get; } Property Value Type Description int IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool Methods Add(TValue) Declaration public bool Add(TValue item) Parameters Type Name Description TValue item Returns Type Description bool Clear() Declaration public void Clear() Contains(TValue) Declaration public bool Contains(TValue item) Parameters Type Name Description TValue item Returns Type Description bool CopyTo(TValue[], int) Declaration public void CopyTo(TValue[] array, int arrayIndex) Parameters Type Name Description TValue[] array int arrayIndex ExceptWith(IEnumerable<TValue>) Declaration public void ExceptWith(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other GetEnumerator() Declaration public IEnumerator<TValue> GetEnumerator() Returns Type Description IEnumerator<TValue> GetValueInList() Declaration public List<TValue> GetValueInList() Returns Type Description List<TValue> IntersectWith(IEnumerable<TValue>) Declaration public void IntersectWith(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other IsProperSubsetOf(IEnumerable<TValue>) Declaration public bool IsProperSubsetOf(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other Returns Type Description bool IsProperSupersetOf(IEnumerable<TValue>) Declaration public bool IsProperSupersetOf(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other Returns Type Description bool IsSubsetOf(IEnumerable<TValue>) Declaration public bool IsSubsetOf(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other Returns Type Description bool IsSupersetOf(IEnumerable<TValue>) Declaration public bool IsSupersetOf(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other Returns Type Description bool OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Overlaps(IEnumerable<TValue>) Declaration public bool Overlaps(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other Returns Type Description bool Remove(TValue) Declaration public bool Remove(TValue item) Parameters Type Name Description TValue item Returns Type Description bool SetEquals(IEnumerable<TValue>) Declaration public bool SetEquals(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other Returns Type Description bool SymmetricExceptWith(IEnumerable<TValue>) Declaration public void SymmetricExceptWith(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other UnionWith(IEnumerable<TValue>) Declaration public void UnionWith(IEnumerable<TValue> other) Parameters Type Name Description IEnumerable<TValue> other Implements ISerializationCallbackReceiver"
  },
  "api/LobsterFramework.Utility.SortableItem-1.html": {
    "href": "api/LobsterFramework.Utility.SortableItem-1.html",
    "title": "Class SortableItem<T> | LobsterFramework documentation",
    "keywords": "Class SortableItem<T> Inheritance object SortableItem<T> Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax public class SortableItem<T> Type Parameters Name Description T Fields item Declaration public T item Field Value Type Description T priority Declaration public int priority Field Value Type Description int Methods CompareTo(SortableItem<T>) Declaration public int CompareTo(SortableItem<T> other) Parameters Type Name Description SortableItem<T> other Returns Type Description int"
  },
  "api/LobsterFramework.Utility.StringAbilityConfigDictionary.html": {
    "href": "api/LobsterFramework.Utility.StringAbilityConfigDictionary.html",
    "title": "Class StringAbilityConfigDictionary | LobsterFramework documentation",
    "keywords": "Class StringAbilityConfigDictionary Inheritance object SerializableDictionary<string, Ability.AbilityConfig> StringAbilityConfigDictionary Implements ISerializationCallbackReceiver Inherited Members SerializableDictionary<string, Ability.AbilityConfig>.keys SerializableDictionary<string, Ability.AbilityConfig>.values SerializableDictionary<string, Ability.AbilityConfig>.dictionary SerializableDictionary<string, Ability.AbilityConfig>.this[string] SerializableDictionary<string, Ability.AbilityConfig>.Keys SerializableDictionary<string, Ability.AbilityConfig>.Values SerializableDictionary<string, Ability.AbilityConfig>.Count SerializableDictionary<string, Ability.AbilityConfig>.IsReadOnly SerializableDictionary<string, Ability.AbilityConfig>.Add(string, Ability.AbilityConfig) SerializableDictionary<string, Ability.AbilityConfig>.Add(KeyValuePair<string, Ability.AbilityConfig>) SerializableDictionary<string, Ability.AbilityConfig>.Clear() SerializableDictionary<string, Ability.AbilityConfig>.Contains(KeyValuePair<string, Ability.AbilityConfig>) SerializableDictionary<string, Ability.AbilityConfig>.ContainsKey(string) SerializableDictionary<string, Ability.AbilityConfig>.CopyTo(KeyValuePair<string, Ability.AbilityConfig>[], int) SerializableDictionary<string, Ability.AbilityConfig>.GetEnumerator() SerializableDictionary<string, Ability.AbilityConfig>.OnAfterDeserialize() SerializableDictionary<string, Ability.AbilityConfig>.OnBeforeSerialize() SerializableDictionary<string, Ability.AbilityConfig>.Remove(string) SerializableDictionary<string, Ability.AbilityConfig>.Remove(KeyValuePair<string, Ability.AbilityConfig>) SerializableDictionary<string, Ability.AbilityConfig>.TryGetValue(string, out Ability.AbilityConfig) Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax [Serializable] public class StringAbilityConfigDictionary : SerializableDictionary<string, Ability.AbilityConfig>, ISerializationCallbackReceiver Implements ISerializationCallbackReceiver"
  },
  "api/LobsterFramework.Utility.TypeAbilityDictionary.html": {
    "href": "api/LobsterFramework.Utility.TypeAbilityDictionary.html",
    "title": "Class TypeAbilityDictionary | LobsterFramework documentation",
    "keywords": "Class TypeAbilityDictionary Inheritance object SerializableDictionary<string, Ability> TypeAbilityDictionary Implements ISerializationCallbackReceiver Inherited Members SerializableDictionary<string, Ability>.keys SerializableDictionary<string, Ability>.values SerializableDictionary<string, Ability>.dictionary SerializableDictionary<string, Ability>.this[string] SerializableDictionary<string, Ability>.Keys SerializableDictionary<string, Ability>.Values SerializableDictionary<string, Ability>.Count SerializableDictionary<string, Ability>.IsReadOnly SerializableDictionary<string, Ability>.Add(string, Ability) SerializableDictionary<string, Ability>.Add(KeyValuePair<string, Ability>) SerializableDictionary<string, Ability>.Clear() SerializableDictionary<string, Ability>.Contains(KeyValuePair<string, Ability>) SerializableDictionary<string, Ability>.ContainsKey(string) SerializableDictionary<string, Ability>.CopyTo(KeyValuePair<string, Ability>[], int) SerializableDictionary<string, Ability>.GetEnumerator() SerializableDictionary<string, Ability>.OnAfterDeserialize() SerializableDictionary<string, Ability>.OnBeforeSerialize() SerializableDictionary<string, Ability>.Remove(string) SerializableDictionary<string, Ability>.Remove(KeyValuePair<string, Ability>) SerializableDictionary<string, Ability>.TryGetValue(string, out Ability) Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax [Serializable] public class TypeAbilityDictionary : SerializableDictionary<string, Ability>, ISerializationCallbackReceiver Implements ISerializationCallbackReceiver"
  },
  "api/LobsterFramework.Utility.TypeAbilityStatDictionary.html": {
    "href": "api/LobsterFramework.Utility.TypeAbilityStatDictionary.html",
    "title": "Class TypeAbilityStatDictionary | LobsterFramework documentation",
    "keywords": "Class TypeAbilityStatDictionary Inheritance object SerializableDictionary<string, AbilityStat> TypeAbilityStatDictionary Implements ISerializationCallbackReceiver Inherited Members SerializableDictionary<string, AbilityStat>.keys SerializableDictionary<string, AbilityStat>.values SerializableDictionary<string, AbilityStat>.dictionary SerializableDictionary<string, AbilityStat>.this[string] SerializableDictionary<string, AbilityStat>.Keys SerializableDictionary<string, AbilityStat>.Values SerializableDictionary<string, AbilityStat>.Count SerializableDictionary<string, AbilityStat>.IsReadOnly SerializableDictionary<string, AbilityStat>.Add(string, AbilityStat) SerializableDictionary<string, AbilityStat>.Add(KeyValuePair<string, AbilityStat>) SerializableDictionary<string, AbilityStat>.Clear() SerializableDictionary<string, AbilityStat>.Contains(KeyValuePair<string, AbilityStat>) SerializableDictionary<string, AbilityStat>.ContainsKey(string) SerializableDictionary<string, AbilityStat>.CopyTo(KeyValuePair<string, AbilityStat>[], int) SerializableDictionary<string, AbilityStat>.GetEnumerator() SerializableDictionary<string, AbilityStat>.OnAfterDeserialize() SerializableDictionary<string, AbilityStat>.OnBeforeSerialize() SerializableDictionary<string, AbilityStat>.Remove(string) SerializableDictionary<string, AbilityStat>.Remove(KeyValuePair<string, AbilityStat>) SerializableDictionary<string, AbilityStat>.TryGetValue(string, out AbilityStat) Namespace: LobsterFramework.Utility Assembly: MyScripts.dll Syntax [Serializable] public class TypeAbilityStatDictionary : SerializableDictionary<string, AbilityStat>, ISerializationCallbackReceiver Implements ISerializationCallbackReceiver"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | LobsterFramework documentation",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis, ipsi manu Asiae quod marmorea. mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses!"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | LobsterFramework documentation",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos. Putat nubes molle Troiae vero dea; nostraque plurima. Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert. Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces, ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}